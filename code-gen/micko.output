Grammar

    0 $accept: program $end

    1 program: global_variables function_list

    2 global_variables: %empty
    3                 | global_variables global_vars

    4 global_vars: _TYPE _ID _SEMICOLON

    5 function_list: function
    6              | function_list function

    7 $@1: %empty

    8 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN body

    9 parameter: %empty
   10          | _TYPE _ID

   11 $@2: %empty

   12 body: _LBRACKET variable_list $@2 statement_list _RBRACKET

   13 variable_list: %empty
   14              | variable_list variable

   15 variable: _TYPE _ID _SEMICOLON

   16 statement_list: %empty
   17               | statement_list statement

   18 statement: compound_statement
   19          | assignment_statement
   20          | if_statement
   21          | return_statement
   22          | postincrement_statement
   23          | for_statement
   24          | case_statement
   25          | while_statement
   26          | do_while_statement
   27          | basic_for
   28          | iterating_statement
   29          | for_with_def
   30          | for_in_range

   31 compound_statement: _LBRACKET statement_list _RBRACKET

   32 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON

   33 @3: %empty

   34 $@4: %empty

   35 iterating_statement: _ITERATE _ID @3 _STEP literal _TO literal $@4 statement

   36 $@5: %empty

   37 @6: %empty

   38 for_in_range: _FOR _ID $@5 _INRANGE _LPAREN literal _COMMA literal @6 maybe_lit _RPAREN statement

   39 maybe_lit: %empty
   40          | _COMMA literal

   41 postincrement_statement: _ID _PLUSPLUS _SEMICOLON

   42 num_exp: exp
   43        | num_exp _AROP num_exp
   44        | num_exp _MDROP num_exp

   45 exp: literal
   46    | _ID
   47    | function_call
   48    | _LPAREN num_exp _RPAREN
   49    | _ID _PLUSPLUS
   50    | conditional_operator

   51 $@7: %empty

   52 @8: %empty

   53 $@9: %empty

   54 $@10: %empty

   55 basic_for: _FOR _ID _ASSIGN $@7 literal direction literal @8 maybe_step $@9 statement _NEXT $@10 _SEMICOLON

   56 direction: _TO
   57          | _DOWNTO

   58 maybe_step: %empty
   59           | _STEP literal

   60 literal: _INT_NUMBER
   61        | _UINT_NUMBER

   62 @11: %empty

   63 $@12: %empty

   64 $@13: %empty

   65 for_with_def: _FOR _LPAREN _TYPE _ID _ASSIGN literal @11 _SEMICOLON rel_exp $@12 _SEMICOLON _ID _PLUSPLUS _RPAREN $@13 statement

   66 $@14: %empty

   67 function_call: _ID $@14 _LPAREN argument _RPAREN

   68 argument: %empty
   69         | num_exp

   70 @15: %empty

   71 do_while_statement: _DO @15 statement _WHILE _LPAREN rel_exp _RPAREN _SEMICOLON

   72 @16: %empty

   73 $@17: %empty

   74 while_statement: _WHILE @16 _LPAREN rel_exp $@17 _RPAREN statement

   75 conditional_operator: _LPAREN rel_exp _RPAREN _QMARK stmt _COLON stmt

   76 stmt: _ID
   77     | literal

   78 @18: %empty

   79 $@19: %empty

   80 for_statement: _FOR _LPAREN _ID _ASSIGN literal _SEMICOLON @18 rel_exp _SEMICOLON _ID _PLUSPLUS _RPAREN $@19 statement

   81 if_statement: if_part
   82             | if_part _ELSE statement

   83 @20: %empty

   84 $@21: %empty

   85 if_part: _IF _LPAREN @20 rel_exp $@21 _RPAREN statement

   86 $@22: %empty

   87 case_statement: _SWITCH _LPAREN _ID $@22 _RPAREN _LBRACKET cases _RBRACKET

   88 cases: case maybe_default
   89      | cases case maybe_default

   90 $@23: %empty

   91 case: _CASE literal _COLON $@23 statement maybe_break

   92 maybe_default: %empty

   93 $@24: %empty

   94 maybe_default: _DEFAULT _COLON $@24 statement

   95 maybe_break: %empty
   96            | _BREAK _SEMICOLON

   97 $@25: %empty

   98 rel_exp: num_exp $@25 _RELOP num_exp

   99 return_statement: _RETURN num_exp _SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256)
_TYPE <i> (258) 4 8 10 15 65
_IF (259) 85
_ELSE (260) 82
_RETURN (261) 99
_ID <s> (262) 4 8 10 15 32 35 38 41 46 49 55 65 67 76 80 87
_INT_NUMBER <s> (263) 60
_UINT_NUMBER <s> (264) 61
_LPAREN (265) 8 38 48 65 67 71 74 75 80 85 87
_RPAREN (266) 8 38 48 65 67 71 74 75 80 85 87
_LBRACKET (267) 12 31 87
_RBRACKET (268) 12 31 87
_ASSIGN (269) 32 55 65 80
_SEMICOLON (270) 4 15 32 41 55 65 71 80 96 99
_AROP <i> (271) 43
_MDROP <i> (272) 44
_RELOP <i> (273) 98
_PLUSPLUS (274) 41 49 65 80
_QMARK (275) 75
_COLON (276) 75 91 94
_FOR (277) 38 55 65 80
_SWITCH (278) 87
_CASE (279) 91
_DEFAULT (280) 94
_BREAK (281) 96
_WHILE (282) 71 74
_DO (283) 71
_TO (284) 35 56
_DOWNTO (285) 57
_STEP (286) 35 59
_NEXT (287) 55
_ITERATE (288) 35
_INRANGE (289) 38
_COMMA (290) 38 40
ONLY_IF (291)


Nonterminals, with rules where they appear

$accept (37)
    on left: 0
program (38)
    on left: 1, on right: 0
global_variables (39)
    on left: 2 3, on right: 1 3
global_vars (40)
    on left: 4, on right: 3
function_list (41)
    on left: 5 6, on right: 1 6
function (42)
    on left: 8, on right: 5 6
$@1 (43)
    on left: 7, on right: 8
parameter (44)
    on left: 9 10, on right: 8
body (45)
    on left: 12, on right: 8
$@2 (46)
    on left: 11, on right: 12
variable_list (47)
    on left: 13 14, on right: 12 14
variable (48)
    on left: 15, on right: 14
statement_list (49)
    on left: 16 17, on right: 12 17 31
statement (50)
    on left: 18 19 20 21 22 23 24 25 26 27 28 29 30, on right: 17 35
    38 55 65 71 74 80 82 85 91 94
compound_statement (51)
    on left: 31, on right: 18
assignment_statement (52)
    on left: 32, on right: 19
iterating_statement (53)
    on left: 35, on right: 28
@3 (54)
    on left: 33, on right: 35
$@4 (55)
    on left: 34, on right: 35
for_in_range (56)
    on left: 38, on right: 30
$@5 (57)
    on left: 36, on right: 38
@6 (58)
    on left: 37, on right: 38
maybe_lit <i> (59)
    on left: 39 40, on right: 38
postincrement_statement (60)
    on left: 41, on right: 22
num_exp <i> (61)
    on left: 42 43 44, on right: 32 43 44 48 69 98 99
exp <i> (62)
    on left: 45 46 47 48 49 50, on right: 42
basic_for (63)
    on left: 55, on right: 27
$@7 (64)
    on left: 51, on right: 55
@8 (65)
    on left: 52, on right: 55
$@9 (66)
    on left: 53, on right: 55
$@10 (67)
    on left: 54, on right: 55
direction <i> (68)
    on left: 56 57, on right: 55
maybe_step <i> (69)
    on left: 58 59, on right: 55
literal <i> (70)
    on left: 60 61, on right: 35 38 40 45 55 59 65 77 80 91
for_with_def (71)
    on left: 65, on right: 29
@11 (72)
    on left: 62, on right: 65
$@12 (73)
    on left: 63, on right: 65
$@13 (74)
    on left: 64, on right: 65
function_call <i> (75)
    on left: 67, on right: 47
$@14 (76)
    on left: 66, on right: 67
argument <i> (77)
    on left: 68 69, on right: 67
do_while_statement (78)
    on left: 71, on right: 26
@15 (79)
    on left: 70, on right: 71
while_statement (80)
    on left: 74, on right: 25
@16 (81)
    on left: 72, on right: 74
$@17 (82)
    on left: 73, on right: 74
conditional_operator <i> (83)
    on left: 75, on right: 50
stmt <i> (84)
    on left: 76 77, on right: 75
for_statement (85)
    on left: 80, on right: 23
@18 (86)
    on left: 78, on right: 80
$@19 (87)
    on left: 79, on right: 80
if_statement (88)
    on left: 81 82, on right: 20
if_part <i> (89)
    on left: 85, on right: 81 82
@20 (90)
    on left: 83, on right: 85
$@21 (91)
    on left: 84, on right: 85
case_statement (92)
    on left: 87, on right: 24
$@22 (93)
    on left: 86, on right: 87
cases (94)
    on left: 88 89, on right: 87 89
case (95)
    on left: 91, on right: 88 89
$@23 (96)
    on left: 90, on right: 91
maybe_default (97)
    on left: 92 94, on right: 88 89
$@24 (98)
    on left: 93, on right: 94
maybe_break (99)
    on left: 95 96, on right: 91
rel_exp <i> (100)
    on left: 98, on right: 65 71 74 75 80 85
$@25 (101)
    on left: 97, on right: 98
return_statement (102)
    on left: 99, on right: 21


State 0

    0 $accept: . program $end

    $default  reduce using rule 2 (global_variables)

    program           go to state 1
    global_variables  go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: global_variables . function_list
    3 global_variables: global_variables . global_vars

    _TYPE  shift, and go to state 4

    global_vars    go to state 5
    function_list  go to state 6
    function       go to state 7


State 3

    0 $accept: program $end .

    $default  accept


State 4

    4 global_vars: _TYPE . _ID _SEMICOLON
    8 function: _TYPE . _ID $@1 _LPAREN parameter _RPAREN body

    _ID  shift, and go to state 8


State 5

    3 global_variables: global_variables global_vars .

    $default  reduce using rule 3 (global_variables)


State 6

    1 program: global_variables function_list .
    6 function_list: function_list . function

    _TYPE  shift, and go to state 9

    $default  reduce using rule 1 (program)

    function  go to state 10


State 7

    5 function_list: function .

    $default  reduce using rule 5 (function_list)


State 8

    4 global_vars: _TYPE _ID . _SEMICOLON
    8 function: _TYPE _ID . $@1 _LPAREN parameter _RPAREN body

    _SEMICOLON  shift, and go to state 11

    $default  reduce using rule 7 ($@1)

    $@1  go to state 12


State 9

    8 function: _TYPE . _ID $@1 _LPAREN parameter _RPAREN body

    _ID  shift, and go to state 13


State 10

    6 function_list: function_list function .

    $default  reduce using rule 6 (function_list)


State 11

    4 global_vars: _TYPE _ID _SEMICOLON .

    $default  reduce using rule 4 (global_vars)


State 12

    8 function: _TYPE _ID $@1 . _LPAREN parameter _RPAREN body

    _LPAREN  shift, and go to state 14


State 13

    8 function: _TYPE _ID . $@1 _LPAREN parameter _RPAREN body

    $default  reduce using rule 7 ($@1)

    $@1  go to state 12


State 14

    8 function: _TYPE _ID $@1 _LPAREN . parameter _RPAREN body

    _TYPE  shift, and go to state 15

    $default  reduce using rule 9 (parameter)

    parameter  go to state 16


State 15

   10 parameter: _TYPE . _ID

    _ID  shift, and go to state 17


State 16

    8 function: _TYPE _ID $@1 _LPAREN parameter . _RPAREN body

    _RPAREN  shift, and go to state 18


State 17

   10 parameter: _TYPE _ID .

    $default  reduce using rule 10 (parameter)


State 18

    8 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN . body

    _LBRACKET  shift, and go to state 19

    body  go to state 20


State 19

   12 body: _LBRACKET . variable_list $@2 statement_list _RBRACKET

    $default  reduce using rule 13 (variable_list)

    variable_list  go to state 21


State 20

    8 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN body .

    $default  reduce using rule 8 (function)


State 21

   12 body: _LBRACKET variable_list . $@2 statement_list _RBRACKET
   14 variable_list: variable_list . variable

    _TYPE  shift, and go to state 22

    $default  reduce using rule 11 ($@2)

    $@2       go to state 23
    variable  go to state 24


State 22

   15 variable: _TYPE . _ID _SEMICOLON

    _ID  shift, and go to state 25


State 23

   12 body: _LBRACKET variable_list $@2 . statement_list _RBRACKET

    $default  reduce using rule 16 (statement_list)

    statement_list  go to state 26


State 24

   14 variable_list: variable_list variable .

    $default  reduce using rule 14 (variable_list)


State 25

   15 variable: _TYPE _ID . _SEMICOLON

    _SEMICOLON  shift, and go to state 27


State 26

   12 body: _LBRACKET variable_list $@2 statement_list . _RBRACKET
   17 statement_list: statement_list . statement

    _IF        shift, and go to state 28
    _RETURN    shift, and go to state 29
    _ID        shift, and go to state 30
    _LBRACKET  shift, and go to state 31
    _RBRACKET  shift, and go to state 32
    _FOR       shift, and go to state 33
    _SWITCH    shift, and go to state 34
    _WHILE     shift, and go to state 35
    _DO        shift, and go to state 36
    _ITERATE   shift, and go to state 37

    statement                go to state 38
    compound_statement       go to state 39
    assignment_statement     go to state 40
    iterating_statement      go to state 41
    for_in_range             go to state 42
    postincrement_statement  go to state 43
    basic_for                go to state 44
    for_with_def             go to state 45
    do_while_statement       go to state 46
    while_statement          go to state 47
    for_statement            go to state 48
    if_statement             go to state 49
    if_part                  go to state 50
    case_statement           go to state 51
    return_statement         go to state 52


State 27

   15 variable: _TYPE _ID _SEMICOLON .

    $default  reduce using rule 15 (variable)


State 28

   85 if_part: _IF . _LPAREN @20 rel_exp $@21 _RPAREN statement

    _LPAREN  shift, and go to state 53


State 29

   99 return_statement: _RETURN . num_exp _SEMICOLON

    _ID           shift, and go to state 54
    _INT_NUMBER   shift, and go to state 55
    _UINT_NUMBER  shift, and go to state 56
    _LPAREN       shift, and go to state 57

    num_exp               go to state 58
    exp                   go to state 59
    literal               go to state 60
    function_call         go to state 61
    conditional_operator  go to state 62


State 30

   32 assignment_statement: _ID . _ASSIGN num_exp _SEMICOLON
   41 postincrement_statement: _ID . _PLUSPLUS _SEMICOLON

    _ASSIGN    shift, and go to state 63
    _PLUSPLUS  shift, and go to state 64


State 31

   31 compound_statement: _LBRACKET . statement_list _RBRACKET

    $default  reduce using rule 16 (statement_list)

    statement_list  go to state 65


State 32

   12 body: _LBRACKET variable_list $@2 statement_list _RBRACKET .

    $default  reduce using rule 12 (body)


State 33

   38 for_in_range: _FOR . _ID $@5 _INRANGE _LPAREN literal _COMMA literal @6 maybe_lit _RPAREN statement
   55 basic_for: _FOR . _ID _ASSIGN $@7 literal direction literal @8 maybe_step $@9 statement _NEXT $@10 _SEMICOLON
   65 for_with_def: _FOR . _LPAREN _TYPE _ID _ASSIGN literal @11 _SEMICOLON rel_exp $@12 _SEMICOLON _ID _PLUSPLUS _RPAREN $@13 statement
   80 for_statement: _FOR . _LPAREN _ID _ASSIGN literal _SEMICOLON @18 rel_exp _SEMICOLON _ID _PLUSPLUS _RPAREN $@19 statement

    _ID      shift, and go to state 66
    _LPAREN  shift, and go to state 67


State 34

   87 case_statement: _SWITCH . _LPAREN _ID $@22 _RPAREN _LBRACKET cases _RBRACKET

    _LPAREN  shift, and go to state 68


State 35

   74 while_statement: _WHILE . @16 _LPAREN rel_exp $@17 _RPAREN statement

    $default  reduce using rule 72 (@16)

    @16  go to state 69


State 36

   71 do_while_statement: _DO . @15 statement _WHILE _LPAREN rel_exp _RPAREN _SEMICOLON

    $default  reduce using rule 70 (@15)

    @15  go to state 70


State 37

   35 iterating_statement: _ITERATE . _ID @3 _STEP literal _TO literal $@4 statement

    _ID  shift, and go to state 71


State 38

   17 statement_list: statement_list statement .

    $default  reduce using rule 17 (statement_list)


State 39

   18 statement: compound_statement .

    $default  reduce using rule 18 (statement)


State 40

   19 statement: assignment_statement .

    $default  reduce using rule 19 (statement)


State 41

   28 statement: iterating_statement .

    $default  reduce using rule 28 (statement)


State 42

   30 statement: for_in_range .

    $default  reduce using rule 30 (statement)


State 43

   22 statement: postincrement_statement .

    $default  reduce using rule 22 (statement)


State 44

   27 statement: basic_for .

    $default  reduce using rule 27 (statement)


State 45

   29 statement: for_with_def .

    $default  reduce using rule 29 (statement)


State 46

   26 statement: do_while_statement .

    $default  reduce using rule 26 (statement)


State 47

   25 statement: while_statement .

    $default  reduce using rule 25 (statement)


State 48

   23 statement: for_statement .

    $default  reduce using rule 23 (statement)


State 49

   20 statement: if_statement .

    $default  reduce using rule 20 (statement)


State 50

   81 if_statement: if_part .
   82             | if_part . _ELSE statement

    _ELSE  shift, and go to state 72

    $default  reduce using rule 81 (if_statement)


State 51

   24 statement: case_statement .

    $default  reduce using rule 24 (statement)


State 52

   21 statement: return_statement .

    $default  reduce using rule 21 (statement)


State 53

   85 if_part: _IF _LPAREN . @20 rel_exp $@21 _RPAREN statement

    $default  reduce using rule 83 (@20)

    @20  go to state 73


State 54

   46 exp: _ID .
   49    | _ID . _PLUSPLUS
   67 function_call: _ID . $@14 _LPAREN argument _RPAREN

    _PLUSPLUS  shift, and go to state 74

    _LPAREN   reduce using rule 66 ($@14)
    $default  reduce using rule 46 (exp)

    $@14  go to state 75


State 55

   60 literal: _INT_NUMBER .

    $default  reduce using rule 60 (literal)


State 56

   61 literal: _UINT_NUMBER .

    $default  reduce using rule 61 (literal)


State 57

   48 exp: _LPAREN . num_exp _RPAREN
   75 conditional_operator: _LPAREN . rel_exp _RPAREN _QMARK stmt _COLON stmt

    _ID           shift, and go to state 54
    _INT_NUMBER   shift, and go to state 55
    _UINT_NUMBER  shift, and go to state 56
    _LPAREN       shift, and go to state 57

    num_exp               go to state 76
    exp                   go to state 59
    literal               go to state 60
    function_call         go to state 61
    conditional_operator  go to state 62
    rel_exp               go to state 77


State 58

   43 num_exp: num_exp . _AROP num_exp
   44        | num_exp . _MDROP num_exp
   99 return_statement: _RETURN num_exp . _SEMICOLON

    _SEMICOLON  shift, and go to state 78
    _AROP       shift, and go to state 79
    _MDROP      shift, and go to state 80


State 59

   42 num_exp: exp .

    $default  reduce using rule 42 (num_exp)


State 60

   45 exp: literal .

    $default  reduce using rule 45 (exp)


State 61

   47 exp: function_call .

    $default  reduce using rule 47 (exp)


State 62

   50 exp: conditional_operator .

    $default  reduce using rule 50 (exp)


State 63

   32 assignment_statement: _ID _ASSIGN . num_exp _SEMICOLON

    _ID           shift, and go to state 54
    _INT_NUMBER   shift, and go to state 55
    _UINT_NUMBER  shift, and go to state 56
    _LPAREN       shift, and go to state 57

    num_exp               go to state 81
    exp                   go to state 59
    literal               go to state 60
    function_call         go to state 61
    conditional_operator  go to state 62


State 64

   41 postincrement_statement: _ID _PLUSPLUS . _SEMICOLON

    _SEMICOLON  shift, and go to state 82


State 65

   17 statement_list: statement_list . statement
   31 compound_statement: _LBRACKET statement_list . _RBRACKET

    _IF        shift, and go to state 28
    _RETURN    shift, and go to state 29
    _ID        shift, and go to state 30
    _LBRACKET  shift, and go to state 31
    _RBRACKET  shift, and go to state 83
    _FOR       shift, and go to state 33
    _SWITCH    shift, and go to state 34
    _WHILE     shift, and go to state 35
    _DO        shift, and go to state 36
    _ITERATE   shift, and go to state 37

    statement                go to state 38
    compound_statement       go to state 39
    assignment_statement     go to state 40
    iterating_statement      go to state 41
    for_in_range             go to state 42
    postincrement_statement  go to state 43
    basic_for                go to state 44
    for_with_def             go to state 45
    do_while_statement       go to state 46
    while_statement          go to state 47
    for_statement            go to state 48
    if_statement             go to state 49
    if_part                  go to state 50
    case_statement           go to state 51
    return_statement         go to state 52


State 66

   38 for_in_range: _FOR _ID . $@5 _INRANGE _LPAREN literal _COMMA literal @6 maybe_lit _RPAREN statement
   55 basic_for: _FOR _ID . _ASSIGN $@7 literal direction literal @8 maybe_step $@9 statement _NEXT $@10 _SEMICOLON

    _ASSIGN  shift, and go to state 84

    $default  reduce using rule 36 ($@5)

    $@5  go to state 85


State 67

   65 for_with_def: _FOR _LPAREN . _TYPE _ID _ASSIGN literal @11 _SEMICOLON rel_exp $@12 _SEMICOLON _ID _PLUSPLUS _RPAREN $@13 statement
   80 for_statement: _FOR _LPAREN . _ID _ASSIGN literal _SEMICOLON @18 rel_exp _SEMICOLON _ID _PLUSPLUS _RPAREN $@19 statement

    _TYPE  shift, and go to state 86
    _ID    shift, and go to state 87


State 68

   87 case_statement: _SWITCH _LPAREN . _ID $@22 _RPAREN _LBRACKET cases _RBRACKET

    _ID  shift, and go to state 88


State 69

   74 while_statement: _WHILE @16 . _LPAREN rel_exp $@17 _RPAREN statement

    _LPAREN  shift, and go to state 89


State 70

   71 do_while_statement: _DO @15 . statement _WHILE _LPAREN rel_exp _RPAREN _SEMICOLON

    _IF        shift, and go to state 28
    _RETURN    shift, and go to state 29
    _ID        shift, and go to state 30
    _LBRACKET  shift, and go to state 31
    _FOR       shift, and go to state 33
    _SWITCH    shift, and go to state 34
    _WHILE     shift, and go to state 35
    _DO        shift, and go to state 36
    _ITERATE   shift, and go to state 37

    statement                go to state 90
    compound_statement       go to state 39
    assignment_statement     go to state 40
    iterating_statement      go to state 41
    for_in_range             go to state 42
    postincrement_statement  go to state 43
    basic_for                go to state 44
    for_with_def             go to state 45
    do_while_statement       go to state 46
    while_statement          go to state 47
    for_statement            go to state 48
    if_statement             go to state 49
    if_part                  go to state 50
    case_statement           go to state 51
    return_statement         go to state 52


State 71

   35 iterating_statement: _ITERATE _ID . @3 _STEP literal _TO literal $@4 statement

    $default  reduce using rule 33 (@3)

    @3  go to state 91


State 72

   82 if_statement: if_part _ELSE . statement

    _IF        shift, and go to state 28
    _RETURN    shift, and go to state 29
    _ID        shift, and go to state 30
    _LBRACKET  shift, and go to state 31
    _FOR       shift, and go to state 33
    _SWITCH    shift, and go to state 34
    _WHILE     shift, and go to state 35
    _DO        shift, and go to state 36
    _ITERATE   shift, and go to state 37

    statement                go to state 92
    compound_statement       go to state 39
    assignment_statement     go to state 40
    iterating_statement      go to state 41
    for_in_range             go to state 42
    postincrement_statement  go to state 43
    basic_for                go to state 44
    for_with_def             go to state 45
    do_while_statement       go to state 46
    while_statement          go to state 47
    for_statement            go to state 48
    if_statement             go to state 49
    if_part                  go to state 50
    case_statement           go to state 51
    return_statement         go to state 52


State 73

   85 if_part: _IF _LPAREN @20 . rel_exp $@21 _RPAREN statement

    _ID           shift, and go to state 54
    _INT_NUMBER   shift, and go to state 55
    _UINT_NUMBER  shift, and go to state 56
    _LPAREN       shift, and go to state 57

    num_exp               go to state 93
    exp                   go to state 59
    literal               go to state 60
    function_call         go to state 61
    conditional_operator  go to state 62
    rel_exp               go to state 94


State 74

   49 exp: _ID _PLUSPLUS .

    $default  reduce using rule 49 (exp)


State 75

   67 function_call: _ID $@14 . _LPAREN argument _RPAREN

    _LPAREN  shift, and go to state 95


State 76

   43 num_exp: num_exp . _AROP num_exp
   44        | num_exp . _MDROP num_exp
   48 exp: _LPAREN num_exp . _RPAREN
   98 rel_exp: num_exp . $@25 _RELOP num_exp

    _RPAREN  shift, and go to state 96
    _AROP    shift, and go to state 79
    _MDROP   shift, and go to state 80

    $default  reduce using rule 97 ($@25)

    $@25  go to state 97


State 77

   75 conditional_operator: _LPAREN rel_exp . _RPAREN _QMARK stmt _COLON stmt

    _RPAREN  shift, and go to state 98


State 78

   99 return_statement: _RETURN num_exp _SEMICOLON .

    $default  reduce using rule 99 (return_statement)


State 79

   43 num_exp: num_exp _AROP . num_exp

    _ID           shift, and go to state 54
    _INT_NUMBER   shift, and go to state 55
    _UINT_NUMBER  shift, and go to state 56
    _LPAREN       shift, and go to state 57

    num_exp               go to state 99
    exp                   go to state 59
    literal               go to state 60
    function_call         go to state 61
    conditional_operator  go to state 62


State 80

   44 num_exp: num_exp _MDROP . num_exp

    _ID           shift, and go to state 54
    _INT_NUMBER   shift, and go to state 55
    _UINT_NUMBER  shift, and go to state 56
    _LPAREN       shift, and go to state 57

    num_exp               go to state 100
    exp                   go to state 59
    literal               go to state 60
    function_call         go to state 61
    conditional_operator  go to state 62


State 81

   32 assignment_statement: _ID _ASSIGN num_exp . _SEMICOLON
   43 num_exp: num_exp . _AROP num_exp
   44        | num_exp . _MDROP num_exp

    _SEMICOLON  shift, and go to state 101
    _AROP       shift, and go to state 79
    _MDROP      shift, and go to state 80


State 82

   41 postincrement_statement: _ID _PLUSPLUS _SEMICOLON .

    $default  reduce using rule 41 (postincrement_statement)


State 83

   31 compound_statement: _LBRACKET statement_list _RBRACKET .

    $default  reduce using rule 31 (compound_statement)


State 84

   55 basic_for: _FOR _ID _ASSIGN . $@7 literal direction literal @8 maybe_step $@9 statement _NEXT $@10 _SEMICOLON

    $default  reduce using rule 51 ($@7)

    $@7  go to state 102


State 85

   38 for_in_range: _FOR _ID $@5 . _INRANGE _LPAREN literal _COMMA literal @6 maybe_lit _RPAREN statement

    _INRANGE  shift, and go to state 103


State 86

   65 for_with_def: _FOR _LPAREN _TYPE . _ID _ASSIGN literal @11 _SEMICOLON rel_exp $@12 _SEMICOLON _ID _PLUSPLUS _RPAREN $@13 statement

    _ID  shift, and go to state 104


State 87

   80 for_statement: _FOR _LPAREN _ID . _ASSIGN literal _SEMICOLON @18 rel_exp _SEMICOLON _ID _PLUSPLUS _RPAREN $@19 statement

    _ASSIGN  shift, and go to state 105


State 88

   87 case_statement: _SWITCH _LPAREN _ID . $@22 _RPAREN _LBRACKET cases _RBRACKET

    $default  reduce using rule 86 ($@22)

    $@22  go to state 106


State 89

   74 while_statement: _WHILE @16 _LPAREN . rel_exp $@17 _RPAREN statement

    _ID           shift, and go to state 54
    _INT_NUMBER   shift, and go to state 55
    _UINT_NUMBER  shift, and go to state 56
    _LPAREN       shift, and go to state 57

    num_exp               go to state 93
    exp                   go to state 59
    literal               go to state 60
    function_call         go to state 61
    conditional_operator  go to state 62
    rel_exp               go to state 107


State 90

   71 do_while_statement: _DO @15 statement . _WHILE _LPAREN rel_exp _RPAREN _SEMICOLON

    _WHILE  shift, and go to state 108


State 91

   35 iterating_statement: _ITERATE _ID @3 . _STEP literal _TO literal $@4 statement

    _STEP  shift, and go to state 109


State 92

   82 if_statement: if_part _ELSE statement .

    $default  reduce using rule 82 (if_statement)


State 93

   43 num_exp: num_exp . _AROP num_exp
   44        | num_exp . _MDROP num_exp
   98 rel_exp: num_exp . $@25 _RELOP num_exp

    _AROP   shift, and go to state 79
    _MDROP  shift, and go to state 80

    $default  reduce using rule 97 ($@25)

    $@25  go to state 97


State 94

   85 if_part: _IF _LPAREN @20 rel_exp . $@21 _RPAREN statement

    $default  reduce using rule 84 ($@21)

    $@21  go to state 110


State 95

   67 function_call: _ID $@14 _LPAREN . argument _RPAREN

    _ID           shift, and go to state 54
    _INT_NUMBER   shift, and go to state 55
    _UINT_NUMBER  shift, and go to state 56
    _LPAREN       shift, and go to state 57

    $default  reduce using rule 68 (argument)

    num_exp               go to state 111
    exp                   go to state 59
    literal               go to state 60
    function_call         go to state 61
    argument              go to state 112
    conditional_operator  go to state 62


State 96

   48 exp: _LPAREN num_exp _RPAREN .

    $default  reduce using rule 48 (exp)


State 97

   98 rel_exp: num_exp $@25 . _RELOP num_exp

    _RELOP  shift, and go to state 113


State 98

   75 conditional_operator: _LPAREN rel_exp _RPAREN . _QMARK stmt _COLON stmt

    _QMARK  shift, and go to state 114


State 99

   43 num_exp: num_exp . _AROP num_exp
   43        | num_exp _AROP num_exp .
   44        | num_exp . _MDROP num_exp

    _MDROP  shift, and go to state 80

    $default  reduce using rule 43 (num_exp)


State 100

   43 num_exp: num_exp . _AROP num_exp
   44        | num_exp . _MDROP num_exp
   44        | num_exp _MDROP num_exp .

    $default  reduce using rule 44 (num_exp)


State 101

   32 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON .

    $default  reduce using rule 32 (assignment_statement)


State 102

   55 basic_for: _FOR _ID _ASSIGN $@7 . literal direction literal @8 maybe_step $@9 statement _NEXT $@10 _SEMICOLON

    _INT_NUMBER   shift, and go to state 55
    _UINT_NUMBER  shift, and go to state 56

    literal  go to state 115


State 103

   38 for_in_range: _FOR _ID $@5 _INRANGE . _LPAREN literal _COMMA literal @6 maybe_lit _RPAREN statement

    _LPAREN  shift, and go to state 116


State 104

   65 for_with_def: _FOR _LPAREN _TYPE _ID . _ASSIGN literal @11 _SEMICOLON rel_exp $@12 _SEMICOLON _ID _PLUSPLUS _RPAREN $@13 statement

    _ASSIGN  shift, and go to state 117


State 105

   80 for_statement: _FOR _LPAREN _ID _ASSIGN . literal _SEMICOLON @18 rel_exp _SEMICOLON _ID _PLUSPLUS _RPAREN $@19 statement

    _INT_NUMBER   shift, and go to state 55
    _UINT_NUMBER  shift, and go to state 56

    literal  go to state 118


State 106

   87 case_statement: _SWITCH _LPAREN _ID $@22 . _RPAREN _LBRACKET cases _RBRACKET

    _RPAREN  shift, and go to state 119


State 107

   74 while_statement: _WHILE @16 _LPAREN rel_exp . $@17 _RPAREN statement

    $default  reduce using rule 73 ($@17)

    $@17  go to state 120


State 108

   71 do_while_statement: _DO @15 statement _WHILE . _LPAREN rel_exp _RPAREN _SEMICOLON

    _LPAREN  shift, and go to state 121


State 109

   35 iterating_statement: _ITERATE _ID @3 _STEP . literal _TO literal $@4 statement

    _INT_NUMBER   shift, and go to state 55
    _UINT_NUMBER  shift, and go to state 56

    literal  go to state 122


State 110

   85 if_part: _IF _LPAREN @20 rel_exp $@21 . _RPAREN statement

    _RPAREN  shift, and go to state 123


State 111

   43 num_exp: num_exp . _AROP num_exp
   44        | num_exp . _MDROP num_exp
   69 argument: num_exp .

    _AROP   shift, and go to state 79
    _MDROP  shift, and go to state 80

    $default  reduce using rule 69 (argument)


State 112

   67 function_call: _ID $@14 _LPAREN argument . _RPAREN

    _RPAREN  shift, and go to state 124


State 113

   98 rel_exp: num_exp $@25 _RELOP . num_exp

    _ID           shift, and go to state 54
    _INT_NUMBER   shift, and go to state 55
    _UINT_NUMBER  shift, and go to state 56
    _LPAREN       shift, and go to state 57

    num_exp               go to state 125
    exp                   go to state 59
    literal               go to state 60
    function_call         go to state 61
    conditional_operator  go to state 62


State 114

   75 conditional_operator: _LPAREN rel_exp _RPAREN _QMARK . stmt _COLON stmt

    _ID           shift, and go to state 126
    _INT_NUMBER   shift, and go to state 55
    _UINT_NUMBER  shift, and go to state 56

    literal  go to state 127
    stmt     go to state 128


State 115

   55 basic_for: _FOR _ID _ASSIGN $@7 literal . direction literal @8 maybe_step $@9 statement _NEXT $@10 _SEMICOLON

    _TO      shift, and go to state 129
    _DOWNTO  shift, and go to state 130

    direction  go to state 131


State 116

   38 for_in_range: _FOR _ID $@5 _INRANGE _LPAREN . literal _COMMA literal @6 maybe_lit _RPAREN statement

    _INT_NUMBER   shift, and go to state 55
    _UINT_NUMBER  shift, and go to state 56

    literal  go to state 132


State 117

   65 for_with_def: _FOR _LPAREN _TYPE _ID _ASSIGN . literal @11 _SEMICOLON rel_exp $@12 _SEMICOLON _ID _PLUSPLUS _RPAREN $@13 statement

    _INT_NUMBER   shift, and go to state 55
    _UINT_NUMBER  shift, and go to state 56

    literal  go to state 133


State 118

   80 for_statement: _FOR _LPAREN _ID _ASSIGN literal . _SEMICOLON @18 rel_exp _SEMICOLON _ID _PLUSPLUS _RPAREN $@19 statement

    _SEMICOLON  shift, and go to state 134


State 119

   87 case_statement: _SWITCH _LPAREN _ID $@22 _RPAREN . _LBRACKET cases _RBRACKET

    _LBRACKET  shift, and go to state 135


State 120

   74 while_statement: _WHILE @16 _LPAREN rel_exp $@17 . _RPAREN statement

    _RPAREN  shift, and go to state 136


State 121

   71 do_while_statement: _DO @15 statement _WHILE _LPAREN . rel_exp _RPAREN _SEMICOLON

    _ID           shift, and go to state 54
    _INT_NUMBER   shift, and go to state 55
    _UINT_NUMBER  shift, and go to state 56
    _LPAREN       shift, and go to state 57

    num_exp               go to state 93
    exp                   go to state 59
    literal               go to state 60
    function_call         go to state 61
    conditional_operator  go to state 62
    rel_exp               go to state 137


State 122

   35 iterating_statement: _ITERATE _ID @3 _STEP literal . _TO literal $@4 statement

    _TO  shift, and go to state 138


State 123

   85 if_part: _IF _LPAREN @20 rel_exp $@21 _RPAREN . statement

    _IF        shift, and go to state 28
    _RETURN    shift, and go to state 29
    _ID        shift, and go to state 30
    _LBRACKET  shift, and go to state 31
    _FOR       shift, and go to state 33
    _SWITCH    shift, and go to state 34
    _WHILE     shift, and go to state 35
    _DO        shift, and go to state 36
    _ITERATE   shift, and go to state 37

    statement                go to state 139
    compound_statement       go to state 39
    assignment_statement     go to state 40
    iterating_statement      go to state 41
    for_in_range             go to state 42
    postincrement_statement  go to state 43
    basic_for                go to state 44
    for_with_def             go to state 45
    do_while_statement       go to state 46
    while_statement          go to state 47
    for_statement            go to state 48
    if_statement             go to state 49
    if_part                  go to state 50
    case_statement           go to state 51
    return_statement         go to state 52


State 124

   67 function_call: _ID $@14 _LPAREN argument _RPAREN .

    $default  reduce using rule 67 (function_call)


State 125

   43 num_exp: num_exp . _AROP num_exp
   44        | num_exp . _MDROP num_exp
   98 rel_exp: num_exp $@25 _RELOP num_exp .

    _AROP   shift, and go to state 79
    _MDROP  shift, and go to state 80

    $default  reduce using rule 98 (rel_exp)


State 126

   76 stmt: _ID .

    $default  reduce using rule 76 (stmt)


State 127

   77 stmt: literal .

    $default  reduce using rule 77 (stmt)


State 128

   75 conditional_operator: _LPAREN rel_exp _RPAREN _QMARK stmt . _COLON stmt

    _COLON  shift, and go to state 140


State 129

   56 direction: _TO .

    $default  reduce using rule 56 (direction)


State 130

   57 direction: _DOWNTO .

    $default  reduce using rule 57 (direction)


State 131

   55 basic_for: _FOR _ID _ASSIGN $@7 literal direction . literal @8 maybe_step $@9 statement _NEXT $@10 _SEMICOLON

    _INT_NUMBER   shift, and go to state 55
    _UINT_NUMBER  shift, and go to state 56

    literal  go to state 141


State 132

   38 for_in_range: _FOR _ID $@5 _INRANGE _LPAREN literal . _COMMA literal @6 maybe_lit _RPAREN statement

    _COMMA  shift, and go to state 142


State 133

   65 for_with_def: _FOR _LPAREN _TYPE _ID _ASSIGN literal . @11 _SEMICOLON rel_exp $@12 _SEMICOLON _ID _PLUSPLUS _RPAREN $@13 statement

    $default  reduce using rule 62 (@11)

    @11  go to state 143


State 134

   80 for_statement: _FOR _LPAREN _ID _ASSIGN literal _SEMICOLON . @18 rel_exp _SEMICOLON _ID _PLUSPLUS _RPAREN $@19 statement

    $default  reduce using rule 78 (@18)

    @18  go to state 144


State 135

   87 case_statement: _SWITCH _LPAREN _ID $@22 _RPAREN _LBRACKET . cases _RBRACKET

    _CASE  shift, and go to state 145

    cases  go to state 146
    case   go to state 147


State 136

   74 while_statement: _WHILE @16 _LPAREN rel_exp $@17 _RPAREN . statement

    _IF        shift, and go to state 28
    _RETURN    shift, and go to state 29
    _ID        shift, and go to state 30
    _LBRACKET  shift, and go to state 31
    _FOR       shift, and go to state 33
    _SWITCH    shift, and go to state 34
    _WHILE     shift, and go to state 35
    _DO        shift, and go to state 36
    _ITERATE   shift, and go to state 37

    statement                go to state 148
    compound_statement       go to state 39
    assignment_statement     go to state 40
    iterating_statement      go to state 41
    for_in_range             go to state 42
    postincrement_statement  go to state 43
    basic_for                go to state 44
    for_with_def             go to state 45
    do_while_statement       go to state 46
    while_statement          go to state 47
    for_statement            go to state 48
    if_statement             go to state 49
    if_part                  go to state 50
    case_statement           go to state 51
    return_statement         go to state 52


State 137

   71 do_while_statement: _DO @15 statement _WHILE _LPAREN rel_exp . _RPAREN _SEMICOLON

    _RPAREN  shift, and go to state 149


State 138

   35 iterating_statement: _ITERATE _ID @3 _STEP literal _TO . literal $@4 statement

    _INT_NUMBER   shift, and go to state 55
    _UINT_NUMBER  shift, and go to state 56

    literal  go to state 150


State 139

   85 if_part: _IF _LPAREN @20 rel_exp $@21 _RPAREN statement .

    $default  reduce using rule 85 (if_part)


State 140

   75 conditional_operator: _LPAREN rel_exp _RPAREN _QMARK stmt _COLON . stmt

    _ID           shift, and go to state 126
    _INT_NUMBER   shift, and go to state 55
    _UINT_NUMBER  shift, and go to state 56

    literal  go to state 127
    stmt     go to state 151


State 141

   55 basic_for: _FOR _ID _ASSIGN $@7 literal direction literal . @8 maybe_step $@9 statement _NEXT $@10 _SEMICOLON

    $default  reduce using rule 52 (@8)

    @8  go to state 152


State 142

   38 for_in_range: _FOR _ID $@5 _INRANGE _LPAREN literal _COMMA . literal @6 maybe_lit _RPAREN statement

    _INT_NUMBER   shift, and go to state 55
    _UINT_NUMBER  shift, and go to state 56

    literal  go to state 153


State 143

   65 for_with_def: _FOR _LPAREN _TYPE _ID _ASSIGN literal @11 . _SEMICOLON rel_exp $@12 _SEMICOLON _ID _PLUSPLUS _RPAREN $@13 statement

    _SEMICOLON  shift, and go to state 154


State 144

   80 for_statement: _FOR _LPAREN _ID _ASSIGN literal _SEMICOLON @18 . rel_exp _SEMICOLON _ID _PLUSPLUS _RPAREN $@19 statement

    _ID           shift, and go to state 54
    _INT_NUMBER   shift, and go to state 55
    _UINT_NUMBER  shift, and go to state 56
    _LPAREN       shift, and go to state 57

    num_exp               go to state 93
    exp                   go to state 59
    literal               go to state 60
    function_call         go to state 61
    conditional_operator  go to state 62
    rel_exp               go to state 155


State 145

   91 case: _CASE . literal _COLON $@23 statement maybe_break

    _INT_NUMBER   shift, and go to state 55
    _UINT_NUMBER  shift, and go to state 56

    literal  go to state 156


State 146

   87 case_statement: _SWITCH _LPAREN _ID $@22 _RPAREN _LBRACKET cases . _RBRACKET
   89 cases: cases . case maybe_default

    _RBRACKET  shift, and go to state 157
    _CASE      shift, and go to state 145

    case  go to state 158


State 147

   88 cases: case . maybe_default

    _DEFAULT  shift, and go to state 159

    $default  reduce using rule 92 (maybe_default)

    maybe_default  go to state 160


State 148

   74 while_statement: _WHILE @16 _LPAREN rel_exp $@17 _RPAREN statement .

    $default  reduce using rule 74 (while_statement)


State 149

   71 do_while_statement: _DO @15 statement _WHILE _LPAREN rel_exp _RPAREN . _SEMICOLON

    _SEMICOLON  shift, and go to state 161


State 150

   35 iterating_statement: _ITERATE _ID @3 _STEP literal _TO literal . $@4 statement

    $default  reduce using rule 34 ($@4)

    $@4  go to state 162


State 151

   75 conditional_operator: _LPAREN rel_exp _RPAREN _QMARK stmt _COLON stmt .

    $default  reduce using rule 75 (conditional_operator)


State 152

   55 basic_for: _FOR _ID _ASSIGN $@7 literal direction literal @8 . maybe_step $@9 statement _NEXT $@10 _SEMICOLON

    _STEP  shift, and go to state 163

    $default  reduce using rule 58 (maybe_step)

    maybe_step  go to state 164


State 153

   38 for_in_range: _FOR _ID $@5 _INRANGE _LPAREN literal _COMMA literal . @6 maybe_lit _RPAREN statement

    $default  reduce using rule 37 (@6)

    @6  go to state 165


State 154

   65 for_with_def: _FOR _LPAREN _TYPE _ID _ASSIGN literal @11 _SEMICOLON . rel_exp $@12 _SEMICOLON _ID _PLUSPLUS _RPAREN $@13 statement

    _ID           shift, and go to state 54
    _INT_NUMBER   shift, and go to state 55
    _UINT_NUMBER  shift, and go to state 56
    _LPAREN       shift, and go to state 57

    num_exp               go to state 93
    exp                   go to state 59
    literal               go to state 60
    function_call         go to state 61
    conditional_operator  go to state 62
    rel_exp               go to state 166


State 155

   80 for_statement: _FOR _LPAREN _ID _ASSIGN literal _SEMICOLON @18 rel_exp . _SEMICOLON _ID _PLUSPLUS _RPAREN $@19 statement

    _SEMICOLON  shift, and go to state 167


State 156

   91 case: _CASE literal . _COLON $@23 statement maybe_break

    _COLON  shift, and go to state 168


State 157

   87 case_statement: _SWITCH _LPAREN _ID $@22 _RPAREN _LBRACKET cases _RBRACKET .

    $default  reduce using rule 87 (case_statement)


State 158

   89 cases: cases case . maybe_default

    _DEFAULT  shift, and go to state 159

    $default  reduce using rule 92 (maybe_default)

    maybe_default  go to state 169


State 159

   94 maybe_default: _DEFAULT . _COLON $@24 statement

    _COLON  shift, and go to state 170


State 160

   88 cases: case maybe_default .

    $default  reduce using rule 88 (cases)


State 161

   71 do_while_statement: _DO @15 statement _WHILE _LPAREN rel_exp _RPAREN _SEMICOLON .

    $default  reduce using rule 71 (do_while_statement)


State 162

   35 iterating_statement: _ITERATE _ID @3 _STEP literal _TO literal $@4 . statement

    _IF        shift, and go to state 28
    _RETURN    shift, and go to state 29
    _ID        shift, and go to state 30
    _LBRACKET  shift, and go to state 31
    _FOR       shift, and go to state 33
    _SWITCH    shift, and go to state 34
    _WHILE     shift, and go to state 35
    _DO        shift, and go to state 36
    _ITERATE   shift, and go to state 37

    statement                go to state 171
    compound_statement       go to state 39
    assignment_statement     go to state 40
    iterating_statement      go to state 41
    for_in_range             go to state 42
    postincrement_statement  go to state 43
    basic_for                go to state 44
    for_with_def             go to state 45
    do_while_statement       go to state 46
    while_statement          go to state 47
    for_statement            go to state 48
    if_statement             go to state 49
    if_part                  go to state 50
    case_statement           go to state 51
    return_statement         go to state 52


State 163

   59 maybe_step: _STEP . literal

    _INT_NUMBER   shift, and go to state 55
    _UINT_NUMBER  shift, and go to state 56

    literal  go to state 172


State 164

   55 basic_for: _FOR _ID _ASSIGN $@7 literal direction literal @8 maybe_step . $@9 statement _NEXT $@10 _SEMICOLON

    $default  reduce using rule 53 ($@9)

    $@9  go to state 173


State 165

   38 for_in_range: _FOR _ID $@5 _INRANGE _LPAREN literal _COMMA literal @6 . maybe_lit _RPAREN statement

    _COMMA  shift, and go to state 174

    $default  reduce using rule 39 (maybe_lit)

    maybe_lit  go to state 175


State 166

   65 for_with_def: _FOR _LPAREN _TYPE _ID _ASSIGN literal @11 _SEMICOLON rel_exp . $@12 _SEMICOLON _ID _PLUSPLUS _RPAREN $@13 statement

    $default  reduce using rule 63 ($@12)

    $@12  go to state 176


State 167

   80 for_statement: _FOR _LPAREN _ID _ASSIGN literal _SEMICOLON @18 rel_exp _SEMICOLON . _ID _PLUSPLUS _RPAREN $@19 statement

    _ID  shift, and go to state 177


State 168

   91 case: _CASE literal _COLON . $@23 statement maybe_break

    $default  reduce using rule 90 ($@23)

    $@23  go to state 178


State 169

   89 cases: cases case maybe_default .

    $default  reduce using rule 89 (cases)


State 170

   94 maybe_default: _DEFAULT _COLON . $@24 statement

    $default  reduce using rule 93 ($@24)

    $@24  go to state 179


State 171

   35 iterating_statement: _ITERATE _ID @3 _STEP literal _TO literal $@4 statement .

    $default  reduce using rule 35 (iterating_statement)


State 172

   59 maybe_step: _STEP literal .

    $default  reduce using rule 59 (maybe_step)


State 173

   55 basic_for: _FOR _ID _ASSIGN $@7 literal direction literal @8 maybe_step $@9 . statement _NEXT $@10 _SEMICOLON

    _IF        shift, and go to state 28
    _RETURN    shift, and go to state 29
    _ID        shift, and go to state 30
    _LBRACKET  shift, and go to state 31
    _FOR       shift, and go to state 33
    _SWITCH    shift, and go to state 34
    _WHILE     shift, and go to state 35
    _DO        shift, and go to state 36
    _ITERATE   shift, and go to state 37

    statement                go to state 180
    compound_statement       go to state 39
    assignment_statement     go to state 40
    iterating_statement      go to state 41
    for_in_range             go to state 42
    postincrement_statement  go to state 43
    basic_for                go to state 44
    for_with_def             go to state 45
    do_while_statement       go to state 46
    while_statement          go to state 47
    for_statement            go to state 48
    if_statement             go to state 49
    if_part                  go to state 50
    case_statement           go to state 51
    return_statement         go to state 52


State 174

   40 maybe_lit: _COMMA . literal

    _INT_NUMBER   shift, and go to state 55
    _UINT_NUMBER  shift, and go to state 56

    literal  go to state 181


State 175

   38 for_in_range: _FOR _ID $@5 _INRANGE _LPAREN literal _COMMA literal @6 maybe_lit . _RPAREN statement

    _RPAREN  shift, and go to state 182


State 176

   65 for_with_def: _FOR _LPAREN _TYPE _ID _ASSIGN literal @11 _SEMICOLON rel_exp $@12 . _SEMICOLON _ID _PLUSPLUS _RPAREN $@13 statement

    _SEMICOLON  shift, and go to state 183


State 177

   80 for_statement: _FOR _LPAREN _ID _ASSIGN literal _SEMICOLON @18 rel_exp _SEMICOLON _ID . _PLUSPLUS _RPAREN $@19 statement

    _PLUSPLUS  shift, and go to state 184


State 178

   91 case: _CASE literal _COLON $@23 . statement maybe_break

    _IF        shift, and go to state 28
    _RETURN    shift, and go to state 29
    _ID        shift, and go to state 30
    _LBRACKET  shift, and go to state 31
    _FOR       shift, and go to state 33
    _SWITCH    shift, and go to state 34
    _WHILE     shift, and go to state 35
    _DO        shift, and go to state 36
    _ITERATE   shift, and go to state 37

    statement                go to state 185
    compound_statement       go to state 39
    assignment_statement     go to state 40
    iterating_statement      go to state 41
    for_in_range             go to state 42
    postincrement_statement  go to state 43
    basic_for                go to state 44
    for_with_def             go to state 45
    do_while_statement       go to state 46
    while_statement          go to state 47
    for_statement            go to state 48
    if_statement             go to state 49
    if_part                  go to state 50
    case_statement           go to state 51
    return_statement         go to state 52


State 179

   94 maybe_default: _DEFAULT _COLON $@24 . statement

    _IF        shift, and go to state 28
    _RETURN    shift, and go to state 29
    _ID        shift, and go to state 30
    _LBRACKET  shift, and go to state 31
    _FOR       shift, and go to state 33
    _SWITCH    shift, and go to state 34
    _WHILE     shift, and go to state 35
    _DO        shift, and go to state 36
    _ITERATE   shift, and go to state 37

    statement                go to state 186
    compound_statement       go to state 39
    assignment_statement     go to state 40
    iterating_statement      go to state 41
    for_in_range             go to state 42
    postincrement_statement  go to state 43
    basic_for                go to state 44
    for_with_def             go to state 45
    do_while_statement       go to state 46
    while_statement          go to state 47
    for_statement            go to state 48
    if_statement             go to state 49
    if_part                  go to state 50
    case_statement           go to state 51
    return_statement         go to state 52


State 180

   55 basic_for: _FOR _ID _ASSIGN $@7 literal direction literal @8 maybe_step $@9 statement . _NEXT $@10 _SEMICOLON

    _NEXT  shift, and go to state 187


State 181

   40 maybe_lit: _COMMA literal .

    $default  reduce using rule 40 (maybe_lit)


State 182

   38 for_in_range: _FOR _ID $@5 _INRANGE _LPAREN literal _COMMA literal @6 maybe_lit _RPAREN . statement

    _IF        shift, and go to state 28
    _RETURN    shift, and go to state 29
    _ID        shift, and go to state 30
    _LBRACKET  shift, and go to state 31
    _FOR       shift, and go to state 33
    _SWITCH    shift, and go to state 34
    _WHILE     shift, and go to state 35
    _DO        shift, and go to state 36
    _ITERATE   shift, and go to state 37

    statement                go to state 188
    compound_statement       go to state 39
    assignment_statement     go to state 40
    iterating_statement      go to state 41
    for_in_range             go to state 42
    postincrement_statement  go to state 43
    basic_for                go to state 44
    for_with_def             go to state 45
    do_while_statement       go to state 46
    while_statement          go to state 47
    for_statement            go to state 48
    if_statement             go to state 49
    if_part                  go to state 50
    case_statement           go to state 51
    return_statement         go to state 52


State 183

   65 for_with_def: _FOR _LPAREN _TYPE _ID _ASSIGN literal @11 _SEMICOLON rel_exp $@12 _SEMICOLON . _ID _PLUSPLUS _RPAREN $@13 statement

    _ID  shift, and go to state 189


State 184

   80 for_statement: _FOR _LPAREN _ID _ASSIGN literal _SEMICOLON @18 rel_exp _SEMICOLON _ID _PLUSPLUS . _RPAREN $@19 statement

    _RPAREN  shift, and go to state 190


State 185

   91 case: _CASE literal _COLON $@23 statement . maybe_break

    _BREAK  shift, and go to state 191

    $default  reduce using rule 95 (maybe_break)

    maybe_break  go to state 192


State 186

   94 maybe_default: _DEFAULT _COLON $@24 statement .

    $default  reduce using rule 94 (maybe_default)


State 187

   55 basic_for: _FOR _ID _ASSIGN $@7 literal direction literal @8 maybe_step $@9 statement _NEXT . $@10 _SEMICOLON

    $default  reduce using rule 54 ($@10)

    $@10  go to state 193


State 188

   38 for_in_range: _FOR _ID $@5 _INRANGE _LPAREN literal _COMMA literal @6 maybe_lit _RPAREN statement .

    $default  reduce using rule 38 (for_in_range)


State 189

   65 for_with_def: _FOR _LPAREN _TYPE _ID _ASSIGN literal @11 _SEMICOLON rel_exp $@12 _SEMICOLON _ID . _PLUSPLUS _RPAREN $@13 statement

    _PLUSPLUS  shift, and go to state 194


State 190

   80 for_statement: _FOR _LPAREN _ID _ASSIGN literal _SEMICOLON @18 rel_exp _SEMICOLON _ID _PLUSPLUS _RPAREN . $@19 statement

    $default  reduce using rule 79 ($@19)

    $@19  go to state 195


State 191

   96 maybe_break: _BREAK . _SEMICOLON

    _SEMICOLON  shift, and go to state 196


State 192

   91 case: _CASE literal _COLON $@23 statement maybe_break .

    $default  reduce using rule 91 (case)


State 193

   55 basic_for: _FOR _ID _ASSIGN $@7 literal direction literal @8 maybe_step $@9 statement _NEXT $@10 . _SEMICOLON

    _SEMICOLON  shift, and go to state 197


State 194

   65 for_with_def: _FOR _LPAREN _TYPE _ID _ASSIGN literal @11 _SEMICOLON rel_exp $@12 _SEMICOLON _ID _PLUSPLUS . _RPAREN $@13 statement

    _RPAREN  shift, and go to state 198


State 195

   80 for_statement: _FOR _LPAREN _ID _ASSIGN literal _SEMICOLON @18 rel_exp _SEMICOLON _ID _PLUSPLUS _RPAREN $@19 . statement

    _IF        shift, and go to state 28
    _RETURN    shift, and go to state 29
    _ID        shift, and go to state 30
    _LBRACKET  shift, and go to state 31
    _FOR       shift, and go to state 33
    _SWITCH    shift, and go to state 34
    _WHILE     shift, and go to state 35
    _DO        shift, and go to state 36
    _ITERATE   shift, and go to state 37

    statement                go to state 199
    compound_statement       go to state 39
    assignment_statement     go to state 40
    iterating_statement      go to state 41
    for_in_range             go to state 42
    postincrement_statement  go to state 43
    basic_for                go to state 44
    for_with_def             go to state 45
    do_while_statement       go to state 46
    while_statement          go to state 47
    for_statement            go to state 48
    if_statement             go to state 49
    if_part                  go to state 50
    case_statement           go to state 51
    return_statement         go to state 52


State 196

   96 maybe_break: _BREAK _SEMICOLON .

    $default  reduce using rule 96 (maybe_break)


State 197

   55 basic_for: _FOR _ID _ASSIGN $@7 literal direction literal @8 maybe_step $@9 statement _NEXT $@10 _SEMICOLON .

    $default  reduce using rule 55 (basic_for)


State 198

   65 for_with_def: _FOR _LPAREN _TYPE _ID _ASSIGN literal @11 _SEMICOLON rel_exp $@12 _SEMICOLON _ID _PLUSPLUS _RPAREN . $@13 statement

    $default  reduce using rule 64 ($@13)

    $@13  go to state 200


State 199

   80 for_statement: _FOR _LPAREN _ID _ASSIGN literal _SEMICOLON @18 rel_exp _SEMICOLON _ID _PLUSPLUS _RPAREN $@19 statement .

    $default  reduce using rule 80 (for_statement)


State 200

   65 for_with_def: _FOR _LPAREN _TYPE _ID _ASSIGN literal @11 _SEMICOLON rel_exp $@12 _SEMICOLON _ID _PLUSPLUS _RPAREN $@13 . statement

    _IF        shift, and go to state 28
    _RETURN    shift, and go to state 29
    _ID        shift, and go to state 30
    _LBRACKET  shift, and go to state 31
    _FOR       shift, and go to state 33
    _SWITCH    shift, and go to state 34
    _WHILE     shift, and go to state 35
    _DO        shift, and go to state 36
    _ITERATE   shift, and go to state 37

    statement                go to state 201
    compound_statement       go to state 39
    assignment_statement     go to state 40
    iterating_statement      go to state 41
    for_in_range             go to state 42
    postincrement_statement  go to state 43
    basic_for                go to state 44
    for_with_def             go to state 45
    do_while_statement       go to state 46
    while_statement          go to state 47
    for_statement            go to state 48
    if_statement             go to state 49
    if_part                  go to state 50
    case_statement           go to state 51
    return_statement         go to state 52


State 201

   65 for_with_def: _FOR _LPAREN _TYPE _ID _ASSIGN literal @11 _SEMICOLON rel_exp $@12 _SEMICOLON _ID _PLUSPLUS _RPAREN $@13 statement .

    $default  reduce using rule 65 (for_with_def)
