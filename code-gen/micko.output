Grammar

    0 $accept: program $end

    1 program: global_variables function_list

    2 global_variables: %empty
    3                 | global_variables global_vars

    4 global_vars: _TYPE _ID _SEMICOLON

    5 function_list: function
    6              | function_list function

    7 $@1: %empty

    8 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN body

    9 parameter: %empty
   10          | _TYPE _ID

   11 $@2: %empty

   12 body: _LBRACKET variable_list $@2 statement_list _RBRACKET

   13 variable_list: %empty
   14              | variable_list variable

   15 variable: _TYPE _ID _SEMICOLON

   16 statement_list: %empty
   17               | statement_list statement

   18 statement: compound_statement
   19          | assignment_statement
   20          | if_statement
   21          | return_statement
   22          | postincrement_statement
   23          | for_statement
   24          | case_statement
   25          | while_statement
   26          | do_while_statement
   27          | basic_for
   28          | iterating_statement

   29 compound_statement: _LBRACKET statement_list _RBRACKET

   30 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON

   31 @3: %empty

   32 $@4: %empty

   33 iterating_statement: _ITERATE _ID @3 _STEP literal _TO literal $@4 statement

   34 postincrement_statement: _ID _PLUSPLUS _SEMICOLON

   35 num_exp: exp
   36        | num_exp _AROP num_exp
   37        | num_exp _MDROP num_exp

   38 exp: literal
   39    | _ID
   40    | function_call
   41    | _LPAREN num_exp _RPAREN
   42    | _ID _PLUSPLUS
   43    | conditional_operator

   44 $@5: %empty

   45 @6: %empty

   46 $@7: %empty

   47 $@8: %empty

   48 basic_for: _FOR _ID _ASSIGN $@5 literal direction literal @6 maybe_step $@7 statement _NEXT $@8 _SEMICOLON

   49 direction: _TO
   50          | _DOWNTO

   51 maybe_step: %empty
   52           | _STEP literal

   53 literal: _INT_NUMBER
   54        | _UINT_NUMBER

   55 $@9: %empty

   56 function_call: _ID $@9 _LPAREN argument _RPAREN

   57 argument: %empty
   58         | num_exp

   59 @10: %empty

   60 do_while_statement: _DO @10 statement _WHILE _LPAREN rel_exp _RPAREN _SEMICOLON

   61 @11: %empty

   62 $@12: %empty

   63 while_statement: _WHILE @11 _LPAREN rel_exp $@12 _RPAREN statement

   64 conditional_operator: _LPAREN rel_exp _RPAREN _QMARK stmt _COLON stmt

   65 stmt: _ID
   66     | literal

   67 @13: %empty

   68 $@14: %empty

   69 for_statement: _FOR _LPAREN _ID _ASSIGN literal @13 _SEMICOLON rel_exp $@14 _SEMICOLON _ID _PLUSPLUS _RPAREN statement

   70 if_statement: if_part
   71             | if_part _ELSE statement

   72 @15: %empty

   73 $@16: %empty

   74 if_part: _IF _LPAREN @15 rel_exp $@16 _RPAREN statement

   75 $@17: %empty

   76 case_statement: _SWITCH _LPAREN _ID $@17 _RPAREN _LBRACKET cases _RBRACKET

   77 cases: case maybe_default
   78      | cases case maybe_default

   79 $@18: %empty

   80 case: _CASE literal _COLON $@18 statement maybe_break

   81 maybe_default: %empty

   82 $@19: %empty

   83 maybe_default: _DEFAULT _COLON $@19 statement

   84 maybe_break: %empty
   85            | _BREAK _SEMICOLON

   86 $@20: %empty

   87 rel_exp: num_exp $@20 _RELOP num_exp

   88 return_statement: _RETURN num_exp _SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256)
_TYPE <i> (258) 4 8 10 15
_IF (259) 74
_ELSE (260) 71
_RETURN (261) 88
_ID <s> (262) 4 8 10 15 30 33 34 39 42 48 56 65 69 76
_INT_NUMBER <s> (263) 53
_UINT_NUMBER <s> (264) 54
_LPAREN (265) 8 41 56 60 63 64 69 74 76
_RPAREN (266) 8 41 56 60 63 64 69 74 76
_LBRACKET (267) 12 29 76
_RBRACKET (268) 12 29 76
_ASSIGN (269) 30 48 69
_SEMICOLON (270) 4 15 30 34 48 60 69 85 88
_AROP <i> (271) 36
_MDROP <i> (272) 37
_RELOP <i> (273) 87
_PLUSPLUS (274) 34 42 69
_QMARK (275) 64
_COLON (276) 64 80 83
_FOR (277) 48 69
_SWITCH (278) 76
_CASE (279) 80
_DEFAULT (280) 83
_BREAK (281) 85
_WHILE (282) 60 63
_DO (283) 60
_TO (284) 33 49
_DOWNTO (285) 50
_STEP (286) 33 52
_NEXT (287) 48
_ITERATE (288) 33
ONLY_IF (289)


Nonterminals, with rules where they appear

$accept (35)
    on left: 0
program (36)
    on left: 1, on right: 0
global_variables (37)
    on left: 2 3, on right: 1 3
global_vars (38)
    on left: 4, on right: 3
function_list (39)
    on left: 5 6, on right: 1 6
function (40)
    on left: 8, on right: 5 6
$@1 (41)
    on left: 7, on right: 8
parameter (42)
    on left: 9 10, on right: 8
body (43)
    on left: 12, on right: 8
$@2 (44)
    on left: 11, on right: 12
variable_list (45)
    on left: 13 14, on right: 12 14
variable (46)
    on left: 15, on right: 14
statement_list (47)
    on left: 16 17, on right: 12 17 29
statement (48)
    on left: 18 19 20 21 22 23 24 25 26 27 28, on right: 17 33 48 60
    63 69 71 74 80 83
compound_statement (49)
    on left: 29, on right: 18
assignment_statement (50)
    on left: 30, on right: 19
iterating_statement (51)
    on left: 33, on right: 28
@3 (52)
    on left: 31, on right: 33
$@4 (53)
    on left: 32, on right: 33
postincrement_statement (54)
    on left: 34, on right: 22
num_exp <i> (55)
    on left: 35 36 37, on right: 30 36 37 41 58 87 88
exp <i> (56)
    on left: 38 39 40 41 42 43, on right: 35
basic_for (57)
    on left: 48, on right: 27
$@5 (58)
    on left: 44, on right: 48
@6 (59)
    on left: 45, on right: 48
$@7 (60)
    on left: 46, on right: 48
$@8 (61)
    on left: 47, on right: 48
direction <i> (62)
    on left: 49 50, on right: 48
maybe_step <i> (63)
    on left: 51 52, on right: 48
literal <i> (64)
    on left: 53 54, on right: 33 38 48 52 66 69 80
function_call <i> (65)
    on left: 56, on right: 40
$@9 (66)
    on left: 55, on right: 56
argument <i> (67)
    on left: 57 58, on right: 56
do_while_statement (68)
    on left: 60, on right: 26
@10 (69)
    on left: 59, on right: 60
while_statement (70)
    on left: 63, on right: 25
@11 (71)
    on left: 61, on right: 63
$@12 (72)
    on left: 62, on right: 63
conditional_operator <i> (73)
    on left: 64, on right: 43
stmt <i> (74)
    on left: 65 66, on right: 64
for_statement (75)
    on left: 69, on right: 23
@13 (76)
    on left: 67, on right: 69
$@14 (77)
    on left: 68, on right: 69
if_statement (78)
    on left: 70 71, on right: 20
if_part <i> (79)
    on left: 74, on right: 70 71
@15 (80)
    on left: 72, on right: 74
$@16 (81)
    on left: 73, on right: 74
case_statement (82)
    on left: 76, on right: 24
$@17 (83)
    on left: 75, on right: 76
cases (84)
    on left: 77 78, on right: 76 78
case (85)
    on left: 80, on right: 77 78
$@18 (86)
    on left: 79, on right: 80
maybe_default (87)
    on left: 81 83, on right: 77 78
$@19 (88)
    on left: 82, on right: 83
maybe_break (89)
    on left: 84 85, on right: 80
rel_exp <i> (90)
    on left: 87, on right: 60 63 64 69 74
$@20 (91)
    on left: 86, on right: 87
return_statement (92)
    on left: 88, on right: 21


State 0

    0 $accept: . program $end

    $default  reduce using rule 2 (global_variables)

    program           go to state 1
    global_variables  go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: global_variables . function_list
    3 global_variables: global_variables . global_vars

    _TYPE  shift, and go to state 4

    global_vars    go to state 5
    function_list  go to state 6
    function       go to state 7


State 3

    0 $accept: program $end .

    $default  accept


State 4

    4 global_vars: _TYPE . _ID _SEMICOLON
    8 function: _TYPE . _ID $@1 _LPAREN parameter _RPAREN body

    _ID  shift, and go to state 8


State 5

    3 global_variables: global_variables global_vars .

    $default  reduce using rule 3 (global_variables)


State 6

    1 program: global_variables function_list .
    6 function_list: function_list . function

    _TYPE  shift, and go to state 9

    $default  reduce using rule 1 (program)

    function  go to state 10


State 7

    5 function_list: function .

    $default  reduce using rule 5 (function_list)


State 8

    4 global_vars: _TYPE _ID . _SEMICOLON
    8 function: _TYPE _ID . $@1 _LPAREN parameter _RPAREN body

    _SEMICOLON  shift, and go to state 11

    $default  reduce using rule 7 ($@1)

    $@1  go to state 12


State 9

    8 function: _TYPE . _ID $@1 _LPAREN parameter _RPAREN body

    _ID  shift, and go to state 13


State 10

    6 function_list: function_list function .

    $default  reduce using rule 6 (function_list)


State 11

    4 global_vars: _TYPE _ID _SEMICOLON .

    $default  reduce using rule 4 (global_vars)


State 12

    8 function: _TYPE _ID $@1 . _LPAREN parameter _RPAREN body

    _LPAREN  shift, and go to state 14


State 13

    8 function: _TYPE _ID . $@1 _LPAREN parameter _RPAREN body

    $default  reduce using rule 7 ($@1)

    $@1  go to state 12


State 14

    8 function: _TYPE _ID $@1 _LPAREN . parameter _RPAREN body

    _TYPE  shift, and go to state 15

    $default  reduce using rule 9 (parameter)

    parameter  go to state 16


State 15

   10 parameter: _TYPE . _ID

    _ID  shift, and go to state 17


State 16

    8 function: _TYPE _ID $@1 _LPAREN parameter . _RPAREN body

    _RPAREN  shift, and go to state 18


State 17

   10 parameter: _TYPE _ID .

    $default  reduce using rule 10 (parameter)


State 18

    8 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN . body

    _LBRACKET  shift, and go to state 19

    body  go to state 20


State 19

   12 body: _LBRACKET . variable_list $@2 statement_list _RBRACKET

    $default  reduce using rule 13 (variable_list)

    variable_list  go to state 21


State 20

    8 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN body .

    $default  reduce using rule 8 (function)


State 21

   12 body: _LBRACKET variable_list . $@2 statement_list _RBRACKET
   14 variable_list: variable_list . variable

    _TYPE  shift, and go to state 22

    $default  reduce using rule 11 ($@2)

    $@2       go to state 23
    variable  go to state 24


State 22

   15 variable: _TYPE . _ID _SEMICOLON

    _ID  shift, and go to state 25


State 23

   12 body: _LBRACKET variable_list $@2 . statement_list _RBRACKET

    $default  reduce using rule 16 (statement_list)

    statement_list  go to state 26


State 24

   14 variable_list: variable_list variable .

    $default  reduce using rule 14 (variable_list)


State 25

   15 variable: _TYPE _ID . _SEMICOLON

    _SEMICOLON  shift, and go to state 27


State 26

   12 body: _LBRACKET variable_list $@2 statement_list . _RBRACKET
   17 statement_list: statement_list . statement

    _IF        shift, and go to state 28
    _RETURN    shift, and go to state 29
    _ID        shift, and go to state 30
    _LBRACKET  shift, and go to state 31
    _RBRACKET  shift, and go to state 32
    _FOR       shift, and go to state 33
    _SWITCH    shift, and go to state 34
    _WHILE     shift, and go to state 35
    _DO        shift, and go to state 36
    _ITERATE   shift, and go to state 37

    statement                go to state 38
    compound_statement       go to state 39
    assignment_statement     go to state 40
    iterating_statement      go to state 41
    postincrement_statement  go to state 42
    basic_for                go to state 43
    do_while_statement       go to state 44
    while_statement          go to state 45
    for_statement            go to state 46
    if_statement             go to state 47
    if_part                  go to state 48
    case_statement           go to state 49
    return_statement         go to state 50


State 27

   15 variable: _TYPE _ID _SEMICOLON .

    $default  reduce using rule 15 (variable)


State 28

   74 if_part: _IF . _LPAREN @15 rel_exp $@16 _RPAREN statement

    _LPAREN  shift, and go to state 51


State 29

   88 return_statement: _RETURN . num_exp _SEMICOLON

    _ID           shift, and go to state 52
    _INT_NUMBER   shift, and go to state 53
    _UINT_NUMBER  shift, and go to state 54
    _LPAREN       shift, and go to state 55

    num_exp               go to state 56
    exp                   go to state 57
    literal               go to state 58
    function_call         go to state 59
    conditional_operator  go to state 60


State 30

   30 assignment_statement: _ID . _ASSIGN num_exp _SEMICOLON
   34 postincrement_statement: _ID . _PLUSPLUS _SEMICOLON

    _ASSIGN    shift, and go to state 61
    _PLUSPLUS  shift, and go to state 62


State 31

   29 compound_statement: _LBRACKET . statement_list _RBRACKET

    $default  reduce using rule 16 (statement_list)

    statement_list  go to state 63


State 32

   12 body: _LBRACKET variable_list $@2 statement_list _RBRACKET .

    $default  reduce using rule 12 (body)


State 33

   48 basic_for: _FOR . _ID _ASSIGN $@5 literal direction literal @6 maybe_step $@7 statement _NEXT $@8 _SEMICOLON
   69 for_statement: _FOR . _LPAREN _ID _ASSIGN literal @13 _SEMICOLON rel_exp $@14 _SEMICOLON _ID _PLUSPLUS _RPAREN statement

    _ID      shift, and go to state 64
    _LPAREN  shift, and go to state 65


State 34

   76 case_statement: _SWITCH . _LPAREN _ID $@17 _RPAREN _LBRACKET cases _RBRACKET

    _LPAREN  shift, and go to state 66


State 35

   63 while_statement: _WHILE . @11 _LPAREN rel_exp $@12 _RPAREN statement

    $default  reduce using rule 61 (@11)

    @11  go to state 67


State 36

   60 do_while_statement: _DO . @10 statement _WHILE _LPAREN rel_exp _RPAREN _SEMICOLON

    $default  reduce using rule 59 (@10)

    @10  go to state 68


State 37

   33 iterating_statement: _ITERATE . _ID @3 _STEP literal _TO literal $@4 statement

    _ID  shift, and go to state 69


State 38

   17 statement_list: statement_list statement .

    $default  reduce using rule 17 (statement_list)


State 39

   18 statement: compound_statement .

    $default  reduce using rule 18 (statement)


State 40

   19 statement: assignment_statement .

    $default  reduce using rule 19 (statement)


State 41

   28 statement: iterating_statement .

    $default  reduce using rule 28 (statement)


State 42

   22 statement: postincrement_statement .

    $default  reduce using rule 22 (statement)


State 43

   27 statement: basic_for .

    $default  reduce using rule 27 (statement)


State 44

   26 statement: do_while_statement .

    $default  reduce using rule 26 (statement)


State 45

   25 statement: while_statement .

    $default  reduce using rule 25 (statement)


State 46

   23 statement: for_statement .

    $default  reduce using rule 23 (statement)


State 47

   20 statement: if_statement .

    $default  reduce using rule 20 (statement)


State 48

   70 if_statement: if_part .
   71             | if_part . _ELSE statement

    _ELSE  shift, and go to state 70

    $default  reduce using rule 70 (if_statement)


State 49

   24 statement: case_statement .

    $default  reduce using rule 24 (statement)


State 50

   21 statement: return_statement .

    $default  reduce using rule 21 (statement)


State 51

   74 if_part: _IF _LPAREN . @15 rel_exp $@16 _RPAREN statement

    $default  reduce using rule 72 (@15)

    @15  go to state 71


State 52

   39 exp: _ID .
   42    | _ID . _PLUSPLUS
   56 function_call: _ID . $@9 _LPAREN argument _RPAREN

    _PLUSPLUS  shift, and go to state 72

    _LPAREN   reduce using rule 55 ($@9)
    $default  reduce using rule 39 (exp)

    $@9  go to state 73


State 53

   53 literal: _INT_NUMBER .

    $default  reduce using rule 53 (literal)


State 54

   54 literal: _UINT_NUMBER .

    $default  reduce using rule 54 (literal)


State 55

   41 exp: _LPAREN . num_exp _RPAREN
   64 conditional_operator: _LPAREN . rel_exp _RPAREN _QMARK stmt _COLON stmt

    _ID           shift, and go to state 52
    _INT_NUMBER   shift, and go to state 53
    _UINT_NUMBER  shift, and go to state 54
    _LPAREN       shift, and go to state 55

    num_exp               go to state 74
    exp                   go to state 57
    literal               go to state 58
    function_call         go to state 59
    conditional_operator  go to state 60
    rel_exp               go to state 75


State 56

   36 num_exp: num_exp . _AROP num_exp
   37        | num_exp . _MDROP num_exp
   88 return_statement: _RETURN num_exp . _SEMICOLON

    _SEMICOLON  shift, and go to state 76
    _AROP       shift, and go to state 77
    _MDROP      shift, and go to state 78


State 57

   35 num_exp: exp .

    $default  reduce using rule 35 (num_exp)


State 58

   38 exp: literal .

    $default  reduce using rule 38 (exp)


State 59

   40 exp: function_call .

    $default  reduce using rule 40 (exp)


State 60

   43 exp: conditional_operator .

    $default  reduce using rule 43 (exp)


State 61

   30 assignment_statement: _ID _ASSIGN . num_exp _SEMICOLON

    _ID           shift, and go to state 52
    _INT_NUMBER   shift, and go to state 53
    _UINT_NUMBER  shift, and go to state 54
    _LPAREN       shift, and go to state 55

    num_exp               go to state 79
    exp                   go to state 57
    literal               go to state 58
    function_call         go to state 59
    conditional_operator  go to state 60


State 62

   34 postincrement_statement: _ID _PLUSPLUS . _SEMICOLON

    _SEMICOLON  shift, and go to state 80


State 63

   17 statement_list: statement_list . statement
   29 compound_statement: _LBRACKET statement_list . _RBRACKET

    _IF        shift, and go to state 28
    _RETURN    shift, and go to state 29
    _ID        shift, and go to state 30
    _LBRACKET  shift, and go to state 31
    _RBRACKET  shift, and go to state 81
    _FOR       shift, and go to state 33
    _SWITCH    shift, and go to state 34
    _WHILE     shift, and go to state 35
    _DO        shift, and go to state 36
    _ITERATE   shift, and go to state 37

    statement                go to state 38
    compound_statement       go to state 39
    assignment_statement     go to state 40
    iterating_statement      go to state 41
    postincrement_statement  go to state 42
    basic_for                go to state 43
    do_while_statement       go to state 44
    while_statement          go to state 45
    for_statement            go to state 46
    if_statement             go to state 47
    if_part                  go to state 48
    case_statement           go to state 49
    return_statement         go to state 50


State 64

   48 basic_for: _FOR _ID . _ASSIGN $@5 literal direction literal @6 maybe_step $@7 statement _NEXT $@8 _SEMICOLON

    _ASSIGN  shift, and go to state 82


State 65

   69 for_statement: _FOR _LPAREN . _ID _ASSIGN literal @13 _SEMICOLON rel_exp $@14 _SEMICOLON _ID _PLUSPLUS _RPAREN statement

    _ID  shift, and go to state 83


State 66

   76 case_statement: _SWITCH _LPAREN . _ID $@17 _RPAREN _LBRACKET cases _RBRACKET

    _ID  shift, and go to state 84


State 67

   63 while_statement: _WHILE @11 . _LPAREN rel_exp $@12 _RPAREN statement

    _LPAREN  shift, and go to state 85


State 68

   60 do_while_statement: _DO @10 . statement _WHILE _LPAREN rel_exp _RPAREN _SEMICOLON

    _IF        shift, and go to state 28
    _RETURN    shift, and go to state 29
    _ID        shift, and go to state 30
    _LBRACKET  shift, and go to state 31
    _FOR       shift, and go to state 33
    _SWITCH    shift, and go to state 34
    _WHILE     shift, and go to state 35
    _DO        shift, and go to state 36
    _ITERATE   shift, and go to state 37

    statement                go to state 86
    compound_statement       go to state 39
    assignment_statement     go to state 40
    iterating_statement      go to state 41
    postincrement_statement  go to state 42
    basic_for                go to state 43
    do_while_statement       go to state 44
    while_statement          go to state 45
    for_statement            go to state 46
    if_statement             go to state 47
    if_part                  go to state 48
    case_statement           go to state 49
    return_statement         go to state 50


State 69

   33 iterating_statement: _ITERATE _ID . @3 _STEP literal _TO literal $@4 statement

    $default  reduce using rule 31 (@3)

    @3  go to state 87


State 70

   71 if_statement: if_part _ELSE . statement

    _IF        shift, and go to state 28
    _RETURN    shift, and go to state 29
    _ID        shift, and go to state 30
    _LBRACKET  shift, and go to state 31
    _FOR       shift, and go to state 33
    _SWITCH    shift, and go to state 34
    _WHILE     shift, and go to state 35
    _DO        shift, and go to state 36
    _ITERATE   shift, and go to state 37

    statement                go to state 88
    compound_statement       go to state 39
    assignment_statement     go to state 40
    iterating_statement      go to state 41
    postincrement_statement  go to state 42
    basic_for                go to state 43
    do_while_statement       go to state 44
    while_statement          go to state 45
    for_statement            go to state 46
    if_statement             go to state 47
    if_part                  go to state 48
    case_statement           go to state 49
    return_statement         go to state 50


State 71

   74 if_part: _IF _LPAREN @15 . rel_exp $@16 _RPAREN statement

    _ID           shift, and go to state 52
    _INT_NUMBER   shift, and go to state 53
    _UINT_NUMBER  shift, and go to state 54
    _LPAREN       shift, and go to state 55

    num_exp               go to state 89
    exp                   go to state 57
    literal               go to state 58
    function_call         go to state 59
    conditional_operator  go to state 60
    rel_exp               go to state 90


State 72

   42 exp: _ID _PLUSPLUS .

    $default  reduce using rule 42 (exp)


State 73

   56 function_call: _ID $@9 . _LPAREN argument _RPAREN

    _LPAREN  shift, and go to state 91


State 74

   36 num_exp: num_exp . _AROP num_exp
   37        | num_exp . _MDROP num_exp
   41 exp: _LPAREN num_exp . _RPAREN
   87 rel_exp: num_exp . $@20 _RELOP num_exp

    _RPAREN  shift, and go to state 92
    _AROP    shift, and go to state 77
    _MDROP   shift, and go to state 78

    $default  reduce using rule 86 ($@20)

    $@20  go to state 93


State 75

   64 conditional_operator: _LPAREN rel_exp . _RPAREN _QMARK stmt _COLON stmt

    _RPAREN  shift, and go to state 94


State 76

   88 return_statement: _RETURN num_exp _SEMICOLON .

    $default  reduce using rule 88 (return_statement)


State 77

   36 num_exp: num_exp _AROP . num_exp

    _ID           shift, and go to state 52
    _INT_NUMBER   shift, and go to state 53
    _UINT_NUMBER  shift, and go to state 54
    _LPAREN       shift, and go to state 55

    num_exp               go to state 95
    exp                   go to state 57
    literal               go to state 58
    function_call         go to state 59
    conditional_operator  go to state 60


State 78

   37 num_exp: num_exp _MDROP . num_exp

    _ID           shift, and go to state 52
    _INT_NUMBER   shift, and go to state 53
    _UINT_NUMBER  shift, and go to state 54
    _LPAREN       shift, and go to state 55

    num_exp               go to state 96
    exp                   go to state 57
    literal               go to state 58
    function_call         go to state 59
    conditional_operator  go to state 60


State 79

   30 assignment_statement: _ID _ASSIGN num_exp . _SEMICOLON
   36 num_exp: num_exp . _AROP num_exp
   37        | num_exp . _MDROP num_exp

    _SEMICOLON  shift, and go to state 97
    _AROP       shift, and go to state 77
    _MDROP      shift, and go to state 78


State 80

   34 postincrement_statement: _ID _PLUSPLUS _SEMICOLON .

    $default  reduce using rule 34 (postincrement_statement)


State 81

   29 compound_statement: _LBRACKET statement_list _RBRACKET .

    $default  reduce using rule 29 (compound_statement)


State 82

   48 basic_for: _FOR _ID _ASSIGN . $@5 literal direction literal @6 maybe_step $@7 statement _NEXT $@8 _SEMICOLON

    $default  reduce using rule 44 ($@5)

    $@5  go to state 98


State 83

   69 for_statement: _FOR _LPAREN _ID . _ASSIGN literal @13 _SEMICOLON rel_exp $@14 _SEMICOLON _ID _PLUSPLUS _RPAREN statement

    _ASSIGN  shift, and go to state 99


State 84

   76 case_statement: _SWITCH _LPAREN _ID . $@17 _RPAREN _LBRACKET cases _RBRACKET

    $default  reduce using rule 75 ($@17)

    $@17  go to state 100


State 85

   63 while_statement: _WHILE @11 _LPAREN . rel_exp $@12 _RPAREN statement

    _ID           shift, and go to state 52
    _INT_NUMBER   shift, and go to state 53
    _UINT_NUMBER  shift, and go to state 54
    _LPAREN       shift, and go to state 55

    num_exp               go to state 89
    exp                   go to state 57
    literal               go to state 58
    function_call         go to state 59
    conditional_operator  go to state 60
    rel_exp               go to state 101


State 86

   60 do_while_statement: _DO @10 statement . _WHILE _LPAREN rel_exp _RPAREN _SEMICOLON

    _WHILE  shift, and go to state 102


State 87

   33 iterating_statement: _ITERATE _ID @3 . _STEP literal _TO literal $@4 statement

    _STEP  shift, and go to state 103


State 88

   71 if_statement: if_part _ELSE statement .

    $default  reduce using rule 71 (if_statement)


State 89

   36 num_exp: num_exp . _AROP num_exp
   37        | num_exp . _MDROP num_exp
   87 rel_exp: num_exp . $@20 _RELOP num_exp

    _AROP   shift, and go to state 77
    _MDROP  shift, and go to state 78

    $default  reduce using rule 86 ($@20)

    $@20  go to state 93


State 90

   74 if_part: _IF _LPAREN @15 rel_exp . $@16 _RPAREN statement

    $default  reduce using rule 73 ($@16)

    $@16  go to state 104


State 91

   56 function_call: _ID $@9 _LPAREN . argument _RPAREN

    _ID           shift, and go to state 52
    _INT_NUMBER   shift, and go to state 53
    _UINT_NUMBER  shift, and go to state 54
    _LPAREN       shift, and go to state 55

    $default  reduce using rule 57 (argument)

    num_exp               go to state 105
    exp                   go to state 57
    literal               go to state 58
    function_call         go to state 59
    argument              go to state 106
    conditional_operator  go to state 60


State 92

   41 exp: _LPAREN num_exp _RPAREN .

    $default  reduce using rule 41 (exp)


State 93

   87 rel_exp: num_exp $@20 . _RELOP num_exp

    _RELOP  shift, and go to state 107


State 94

   64 conditional_operator: _LPAREN rel_exp _RPAREN . _QMARK stmt _COLON stmt

    _QMARK  shift, and go to state 108


State 95

   36 num_exp: num_exp . _AROP num_exp
   36        | num_exp _AROP num_exp .
   37        | num_exp . _MDROP num_exp

    _MDROP  shift, and go to state 78

    $default  reduce using rule 36 (num_exp)


State 96

   36 num_exp: num_exp . _AROP num_exp
   37        | num_exp . _MDROP num_exp
   37        | num_exp _MDROP num_exp .

    $default  reduce using rule 37 (num_exp)


State 97

   30 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON .

    $default  reduce using rule 30 (assignment_statement)


State 98

   48 basic_for: _FOR _ID _ASSIGN $@5 . literal direction literal @6 maybe_step $@7 statement _NEXT $@8 _SEMICOLON

    _INT_NUMBER   shift, and go to state 53
    _UINT_NUMBER  shift, and go to state 54

    literal  go to state 109


State 99

   69 for_statement: _FOR _LPAREN _ID _ASSIGN . literal @13 _SEMICOLON rel_exp $@14 _SEMICOLON _ID _PLUSPLUS _RPAREN statement

    _INT_NUMBER   shift, and go to state 53
    _UINT_NUMBER  shift, and go to state 54

    literal  go to state 110


State 100

   76 case_statement: _SWITCH _LPAREN _ID $@17 . _RPAREN _LBRACKET cases _RBRACKET

    _RPAREN  shift, and go to state 111


State 101

   63 while_statement: _WHILE @11 _LPAREN rel_exp . $@12 _RPAREN statement

    $default  reduce using rule 62 ($@12)

    $@12  go to state 112


State 102

   60 do_while_statement: _DO @10 statement _WHILE . _LPAREN rel_exp _RPAREN _SEMICOLON

    _LPAREN  shift, and go to state 113


State 103

   33 iterating_statement: _ITERATE _ID @3 _STEP . literal _TO literal $@4 statement

    _INT_NUMBER   shift, and go to state 53
    _UINT_NUMBER  shift, and go to state 54

    literal  go to state 114


State 104

   74 if_part: _IF _LPAREN @15 rel_exp $@16 . _RPAREN statement

    _RPAREN  shift, and go to state 115


State 105

   36 num_exp: num_exp . _AROP num_exp
   37        | num_exp . _MDROP num_exp
   58 argument: num_exp .

    _AROP   shift, and go to state 77
    _MDROP  shift, and go to state 78

    $default  reduce using rule 58 (argument)


State 106

   56 function_call: _ID $@9 _LPAREN argument . _RPAREN

    _RPAREN  shift, and go to state 116


State 107

   87 rel_exp: num_exp $@20 _RELOP . num_exp

    _ID           shift, and go to state 52
    _INT_NUMBER   shift, and go to state 53
    _UINT_NUMBER  shift, and go to state 54
    _LPAREN       shift, and go to state 55

    num_exp               go to state 117
    exp                   go to state 57
    literal               go to state 58
    function_call         go to state 59
    conditional_operator  go to state 60


State 108

   64 conditional_operator: _LPAREN rel_exp _RPAREN _QMARK . stmt _COLON stmt

    _ID           shift, and go to state 118
    _INT_NUMBER   shift, and go to state 53
    _UINT_NUMBER  shift, and go to state 54

    literal  go to state 119
    stmt     go to state 120


State 109

   48 basic_for: _FOR _ID _ASSIGN $@5 literal . direction literal @6 maybe_step $@7 statement _NEXT $@8 _SEMICOLON

    _TO      shift, and go to state 121
    _DOWNTO  shift, and go to state 122

    direction  go to state 123


State 110

   69 for_statement: _FOR _LPAREN _ID _ASSIGN literal . @13 _SEMICOLON rel_exp $@14 _SEMICOLON _ID _PLUSPLUS _RPAREN statement

    $default  reduce using rule 67 (@13)

    @13  go to state 124


State 111

   76 case_statement: _SWITCH _LPAREN _ID $@17 _RPAREN . _LBRACKET cases _RBRACKET

    _LBRACKET  shift, and go to state 125


State 112

   63 while_statement: _WHILE @11 _LPAREN rel_exp $@12 . _RPAREN statement

    _RPAREN  shift, and go to state 126


State 113

   60 do_while_statement: _DO @10 statement _WHILE _LPAREN . rel_exp _RPAREN _SEMICOLON

    _ID           shift, and go to state 52
    _INT_NUMBER   shift, and go to state 53
    _UINT_NUMBER  shift, and go to state 54
    _LPAREN       shift, and go to state 55

    num_exp               go to state 89
    exp                   go to state 57
    literal               go to state 58
    function_call         go to state 59
    conditional_operator  go to state 60
    rel_exp               go to state 127


State 114

   33 iterating_statement: _ITERATE _ID @3 _STEP literal . _TO literal $@4 statement

    _TO  shift, and go to state 128


State 115

   74 if_part: _IF _LPAREN @15 rel_exp $@16 _RPAREN . statement

    _IF        shift, and go to state 28
    _RETURN    shift, and go to state 29
    _ID        shift, and go to state 30
    _LBRACKET  shift, and go to state 31
    _FOR       shift, and go to state 33
    _SWITCH    shift, and go to state 34
    _WHILE     shift, and go to state 35
    _DO        shift, and go to state 36
    _ITERATE   shift, and go to state 37

    statement                go to state 129
    compound_statement       go to state 39
    assignment_statement     go to state 40
    iterating_statement      go to state 41
    postincrement_statement  go to state 42
    basic_for                go to state 43
    do_while_statement       go to state 44
    while_statement          go to state 45
    for_statement            go to state 46
    if_statement             go to state 47
    if_part                  go to state 48
    case_statement           go to state 49
    return_statement         go to state 50


State 116

   56 function_call: _ID $@9 _LPAREN argument _RPAREN .

    $default  reduce using rule 56 (function_call)


State 117

   36 num_exp: num_exp . _AROP num_exp
   37        | num_exp . _MDROP num_exp
   87 rel_exp: num_exp $@20 _RELOP num_exp .

    _AROP   shift, and go to state 77
    _MDROP  shift, and go to state 78

    $default  reduce using rule 87 (rel_exp)


State 118

   65 stmt: _ID .

    $default  reduce using rule 65 (stmt)


State 119

   66 stmt: literal .

    $default  reduce using rule 66 (stmt)


State 120

   64 conditional_operator: _LPAREN rel_exp _RPAREN _QMARK stmt . _COLON stmt

    _COLON  shift, and go to state 130


State 121

   49 direction: _TO .

    $default  reduce using rule 49 (direction)


State 122

   50 direction: _DOWNTO .

    $default  reduce using rule 50 (direction)


State 123

   48 basic_for: _FOR _ID _ASSIGN $@5 literal direction . literal @6 maybe_step $@7 statement _NEXT $@8 _SEMICOLON

    _INT_NUMBER   shift, and go to state 53
    _UINT_NUMBER  shift, and go to state 54

    literal  go to state 131


State 124

   69 for_statement: _FOR _LPAREN _ID _ASSIGN literal @13 . _SEMICOLON rel_exp $@14 _SEMICOLON _ID _PLUSPLUS _RPAREN statement

    _SEMICOLON  shift, and go to state 132


State 125

   76 case_statement: _SWITCH _LPAREN _ID $@17 _RPAREN _LBRACKET . cases _RBRACKET

    _CASE  shift, and go to state 133

    cases  go to state 134
    case   go to state 135


State 126

   63 while_statement: _WHILE @11 _LPAREN rel_exp $@12 _RPAREN . statement

    _IF        shift, and go to state 28
    _RETURN    shift, and go to state 29
    _ID        shift, and go to state 30
    _LBRACKET  shift, and go to state 31
    _FOR       shift, and go to state 33
    _SWITCH    shift, and go to state 34
    _WHILE     shift, and go to state 35
    _DO        shift, and go to state 36
    _ITERATE   shift, and go to state 37

    statement                go to state 136
    compound_statement       go to state 39
    assignment_statement     go to state 40
    iterating_statement      go to state 41
    postincrement_statement  go to state 42
    basic_for                go to state 43
    do_while_statement       go to state 44
    while_statement          go to state 45
    for_statement            go to state 46
    if_statement             go to state 47
    if_part                  go to state 48
    case_statement           go to state 49
    return_statement         go to state 50


State 127

   60 do_while_statement: _DO @10 statement _WHILE _LPAREN rel_exp . _RPAREN _SEMICOLON

    _RPAREN  shift, and go to state 137


State 128

   33 iterating_statement: _ITERATE _ID @3 _STEP literal _TO . literal $@4 statement

    _INT_NUMBER   shift, and go to state 53
    _UINT_NUMBER  shift, and go to state 54

    literal  go to state 138


State 129

   74 if_part: _IF _LPAREN @15 rel_exp $@16 _RPAREN statement .

    $default  reduce using rule 74 (if_part)


State 130

   64 conditional_operator: _LPAREN rel_exp _RPAREN _QMARK stmt _COLON . stmt

    _ID           shift, and go to state 118
    _INT_NUMBER   shift, and go to state 53
    _UINT_NUMBER  shift, and go to state 54

    literal  go to state 119
    stmt     go to state 139


State 131

   48 basic_for: _FOR _ID _ASSIGN $@5 literal direction literal . @6 maybe_step $@7 statement _NEXT $@8 _SEMICOLON

    $default  reduce using rule 45 (@6)

    @6  go to state 140


State 132

   69 for_statement: _FOR _LPAREN _ID _ASSIGN literal @13 _SEMICOLON . rel_exp $@14 _SEMICOLON _ID _PLUSPLUS _RPAREN statement

    _ID           shift, and go to state 52
    _INT_NUMBER   shift, and go to state 53
    _UINT_NUMBER  shift, and go to state 54
    _LPAREN       shift, and go to state 55

    num_exp               go to state 89
    exp                   go to state 57
    literal               go to state 58
    function_call         go to state 59
    conditional_operator  go to state 60
    rel_exp               go to state 141


State 133

   80 case: _CASE . literal _COLON $@18 statement maybe_break

    _INT_NUMBER   shift, and go to state 53
    _UINT_NUMBER  shift, and go to state 54

    literal  go to state 142


State 134

   76 case_statement: _SWITCH _LPAREN _ID $@17 _RPAREN _LBRACKET cases . _RBRACKET
   78 cases: cases . case maybe_default

    _RBRACKET  shift, and go to state 143
    _CASE      shift, and go to state 133

    case  go to state 144


State 135

   77 cases: case . maybe_default

    _DEFAULT  shift, and go to state 145

    $default  reduce using rule 81 (maybe_default)

    maybe_default  go to state 146


State 136

   63 while_statement: _WHILE @11 _LPAREN rel_exp $@12 _RPAREN statement .

    $default  reduce using rule 63 (while_statement)


State 137

   60 do_while_statement: _DO @10 statement _WHILE _LPAREN rel_exp _RPAREN . _SEMICOLON

    _SEMICOLON  shift, and go to state 147


State 138

   33 iterating_statement: _ITERATE _ID @3 _STEP literal _TO literal . $@4 statement

    $default  reduce using rule 32 ($@4)

    $@4  go to state 148


State 139

   64 conditional_operator: _LPAREN rel_exp _RPAREN _QMARK stmt _COLON stmt .

    $default  reduce using rule 64 (conditional_operator)


State 140

   48 basic_for: _FOR _ID _ASSIGN $@5 literal direction literal @6 . maybe_step $@7 statement _NEXT $@8 _SEMICOLON

    _STEP  shift, and go to state 149

    $default  reduce using rule 51 (maybe_step)

    maybe_step  go to state 150


State 141

   69 for_statement: _FOR _LPAREN _ID _ASSIGN literal @13 _SEMICOLON rel_exp . $@14 _SEMICOLON _ID _PLUSPLUS _RPAREN statement

    $default  reduce using rule 68 ($@14)

    $@14  go to state 151


State 142

   80 case: _CASE literal . _COLON $@18 statement maybe_break

    _COLON  shift, and go to state 152


State 143

   76 case_statement: _SWITCH _LPAREN _ID $@17 _RPAREN _LBRACKET cases _RBRACKET .

    $default  reduce using rule 76 (case_statement)


State 144

   78 cases: cases case . maybe_default

    _DEFAULT  shift, and go to state 145

    $default  reduce using rule 81 (maybe_default)

    maybe_default  go to state 153


State 145

   83 maybe_default: _DEFAULT . _COLON $@19 statement

    _COLON  shift, and go to state 154


State 146

   77 cases: case maybe_default .

    $default  reduce using rule 77 (cases)


State 147

   60 do_while_statement: _DO @10 statement _WHILE _LPAREN rel_exp _RPAREN _SEMICOLON .

    $default  reduce using rule 60 (do_while_statement)


State 148

   33 iterating_statement: _ITERATE _ID @3 _STEP literal _TO literal $@4 . statement

    _IF        shift, and go to state 28
    _RETURN    shift, and go to state 29
    _ID        shift, and go to state 30
    _LBRACKET  shift, and go to state 31
    _FOR       shift, and go to state 33
    _SWITCH    shift, and go to state 34
    _WHILE     shift, and go to state 35
    _DO        shift, and go to state 36
    _ITERATE   shift, and go to state 37

    statement                go to state 155
    compound_statement       go to state 39
    assignment_statement     go to state 40
    iterating_statement      go to state 41
    postincrement_statement  go to state 42
    basic_for                go to state 43
    do_while_statement       go to state 44
    while_statement          go to state 45
    for_statement            go to state 46
    if_statement             go to state 47
    if_part                  go to state 48
    case_statement           go to state 49
    return_statement         go to state 50


State 149

   52 maybe_step: _STEP . literal

    _INT_NUMBER   shift, and go to state 53
    _UINT_NUMBER  shift, and go to state 54

    literal  go to state 156


State 150

   48 basic_for: _FOR _ID _ASSIGN $@5 literal direction literal @6 maybe_step . $@7 statement _NEXT $@8 _SEMICOLON

    $default  reduce using rule 46 ($@7)

    $@7  go to state 157


State 151

   69 for_statement: _FOR _LPAREN _ID _ASSIGN literal @13 _SEMICOLON rel_exp $@14 . _SEMICOLON _ID _PLUSPLUS _RPAREN statement

    _SEMICOLON  shift, and go to state 158


State 152

   80 case: _CASE literal _COLON . $@18 statement maybe_break

    $default  reduce using rule 79 ($@18)

    $@18  go to state 159


State 153

   78 cases: cases case maybe_default .

    $default  reduce using rule 78 (cases)


State 154

   83 maybe_default: _DEFAULT _COLON . $@19 statement

    $default  reduce using rule 82 ($@19)

    $@19  go to state 160


State 155

   33 iterating_statement: _ITERATE _ID @3 _STEP literal _TO literal $@4 statement .

    $default  reduce using rule 33 (iterating_statement)


State 156

   52 maybe_step: _STEP literal .

    $default  reduce using rule 52 (maybe_step)


State 157

   48 basic_for: _FOR _ID _ASSIGN $@5 literal direction literal @6 maybe_step $@7 . statement _NEXT $@8 _SEMICOLON

    _IF        shift, and go to state 28
    _RETURN    shift, and go to state 29
    _ID        shift, and go to state 30
    _LBRACKET  shift, and go to state 31
    _FOR       shift, and go to state 33
    _SWITCH    shift, and go to state 34
    _WHILE     shift, and go to state 35
    _DO        shift, and go to state 36
    _ITERATE   shift, and go to state 37

    statement                go to state 161
    compound_statement       go to state 39
    assignment_statement     go to state 40
    iterating_statement      go to state 41
    postincrement_statement  go to state 42
    basic_for                go to state 43
    do_while_statement       go to state 44
    while_statement          go to state 45
    for_statement            go to state 46
    if_statement             go to state 47
    if_part                  go to state 48
    case_statement           go to state 49
    return_statement         go to state 50


State 158

   69 for_statement: _FOR _LPAREN _ID _ASSIGN literal @13 _SEMICOLON rel_exp $@14 _SEMICOLON . _ID _PLUSPLUS _RPAREN statement

    _ID  shift, and go to state 162


State 159

   80 case: _CASE literal _COLON $@18 . statement maybe_break

    _IF        shift, and go to state 28
    _RETURN    shift, and go to state 29
    _ID        shift, and go to state 30
    _LBRACKET  shift, and go to state 31
    _FOR       shift, and go to state 33
    _SWITCH    shift, and go to state 34
    _WHILE     shift, and go to state 35
    _DO        shift, and go to state 36
    _ITERATE   shift, and go to state 37

    statement                go to state 163
    compound_statement       go to state 39
    assignment_statement     go to state 40
    iterating_statement      go to state 41
    postincrement_statement  go to state 42
    basic_for                go to state 43
    do_while_statement       go to state 44
    while_statement          go to state 45
    for_statement            go to state 46
    if_statement             go to state 47
    if_part                  go to state 48
    case_statement           go to state 49
    return_statement         go to state 50


State 160

   83 maybe_default: _DEFAULT _COLON $@19 . statement

    _IF        shift, and go to state 28
    _RETURN    shift, and go to state 29
    _ID        shift, and go to state 30
    _LBRACKET  shift, and go to state 31
    _FOR       shift, and go to state 33
    _SWITCH    shift, and go to state 34
    _WHILE     shift, and go to state 35
    _DO        shift, and go to state 36
    _ITERATE   shift, and go to state 37

    statement                go to state 164
    compound_statement       go to state 39
    assignment_statement     go to state 40
    iterating_statement      go to state 41
    postincrement_statement  go to state 42
    basic_for                go to state 43
    do_while_statement       go to state 44
    while_statement          go to state 45
    for_statement            go to state 46
    if_statement             go to state 47
    if_part                  go to state 48
    case_statement           go to state 49
    return_statement         go to state 50


State 161

   48 basic_for: _FOR _ID _ASSIGN $@5 literal direction literal @6 maybe_step $@7 statement . _NEXT $@8 _SEMICOLON

    _NEXT  shift, and go to state 165


State 162

   69 for_statement: _FOR _LPAREN _ID _ASSIGN literal @13 _SEMICOLON rel_exp $@14 _SEMICOLON _ID . _PLUSPLUS _RPAREN statement

    _PLUSPLUS  shift, and go to state 166


State 163

   80 case: _CASE literal _COLON $@18 statement . maybe_break

    _BREAK  shift, and go to state 167

    $default  reduce using rule 84 (maybe_break)

    maybe_break  go to state 168


State 164

   83 maybe_default: _DEFAULT _COLON $@19 statement .

    $default  reduce using rule 83 (maybe_default)


State 165

   48 basic_for: _FOR _ID _ASSIGN $@5 literal direction literal @6 maybe_step $@7 statement _NEXT . $@8 _SEMICOLON

    $default  reduce using rule 47 ($@8)

    $@8  go to state 169


State 166

   69 for_statement: _FOR _LPAREN _ID _ASSIGN literal @13 _SEMICOLON rel_exp $@14 _SEMICOLON _ID _PLUSPLUS . _RPAREN statement

    _RPAREN  shift, and go to state 170


State 167

   85 maybe_break: _BREAK . _SEMICOLON

    _SEMICOLON  shift, and go to state 171


State 168

   80 case: _CASE literal _COLON $@18 statement maybe_break .

    $default  reduce using rule 80 (case)


State 169

   48 basic_for: _FOR _ID _ASSIGN $@5 literal direction literal @6 maybe_step $@7 statement _NEXT $@8 . _SEMICOLON

    _SEMICOLON  shift, and go to state 172


State 170

   69 for_statement: _FOR _LPAREN _ID _ASSIGN literal @13 _SEMICOLON rel_exp $@14 _SEMICOLON _ID _PLUSPLUS _RPAREN . statement

    _IF        shift, and go to state 28
    _RETURN    shift, and go to state 29
    _ID        shift, and go to state 30
    _LBRACKET  shift, and go to state 31
    _FOR       shift, and go to state 33
    _SWITCH    shift, and go to state 34
    _WHILE     shift, and go to state 35
    _DO        shift, and go to state 36
    _ITERATE   shift, and go to state 37

    statement                go to state 173
    compound_statement       go to state 39
    assignment_statement     go to state 40
    iterating_statement      go to state 41
    postincrement_statement  go to state 42
    basic_for                go to state 43
    do_while_statement       go to state 44
    while_statement          go to state 45
    for_statement            go to state 46
    if_statement             go to state 47
    if_part                  go to state 48
    case_statement           go to state 49
    return_statement         go to state 50


State 171

   85 maybe_break: _BREAK _SEMICOLON .

    $default  reduce using rule 85 (maybe_break)


State 172

   48 basic_for: _FOR _ID _ASSIGN $@5 literal direction literal @6 maybe_step $@7 statement _NEXT $@8 _SEMICOLON .

    $default  reduce using rule 48 (basic_for)


State 173

   69 for_statement: _FOR _LPAREN _ID _ASSIGN literal @13 _SEMICOLON rel_exp $@14 _SEMICOLON _ID _PLUSPLUS _RPAREN statement .

    $default  reduce using rule 69 (for_statement)
