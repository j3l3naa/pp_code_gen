Grammar

    0 $accept: program $end

    1 program: global_variables function_list

    2 global_variables: %empty
    3                 | global_variables global_vars

    4 global_vars: _TYPE _ID _SEMICOLON

    5 function_list: function
    6              | function_list function

    7 $@1: %empty

    8 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN body

    9 parameter: %empty
   10          | _TYPE _ID

   11 $@2: %empty

   12 body: _LBRACKET variable_list $@2 statement_list _RBRACKET

   13 variable_list: %empty
   14              | variable_list variable

   15 variable: _TYPE _ID _SEMICOLON

   16 statement_list: %empty
   17               | statement_list statement

   18 statement: compound_statement
   19          | assignment_statement
   20          | if_statement
   21          | return_statement
   22          | postincrement_statement
   23          | for_statement
   24          | case_statement
   25          | while_statement
   26          | do_while_statement
   27          | basic_for
   28          | iterating_statement
   29          | for_with_def
   30          | for_in_range
   31          | petljaj

   32 compound_statement: _LBRACKET statement_list _RBRACKET

   33 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON

   34 $@3: %empty

   35 @4: %empty

   36 petljaj: _PETLJAJ _ID $@3 _UOPSEGU literal _COMMA literal @4 statement

   37 @5: %empty

   38 $@6: %empty

   39 iterating_statement: _ITERATE _ID @5 _STEP literal _TO literal $@6 statement

   40 $@7: %empty

   41 @8: %empty

   42 for_in_range: _FOR _ID $@7 _INRANGE _LPAREN literal _COMMA literal @8 maybe_lit _RPAREN statement

   43 maybe_lit: %empty
   44          | _COMMA literal

   45 postincrement_statement: _ID _PLUSPLUS _SEMICOLON

   46 num_exp: exp
   47        | num_exp _AROP num_exp
   48        | num_exp _MDROP num_exp

   49 exp: literal
   50    | _ID
   51    | function_call
   52    | _LPAREN num_exp _RPAREN
   53    | _ID _PLUSPLUS
   54    | conditional_operator

   55 $@9: %empty

   56 @10: %empty

   57 $@11: %empty

   58 $@12: %empty

   59 basic_for: _FOR _ID _ASSIGN $@9 literal direction literal @10 maybe_step $@11 statement _NEXT $@12 _SEMICOLON

   60 direction: _TO
   61          | _DOWNTO

   62 maybe_step: %empty
   63           | _STEP literal

   64 literal: _INT_NUMBER
   65        | _UINT_NUMBER

   66 @13: %empty

   67 $@14: %empty

   68 $@15: %empty

   69 for_with_def: _FOR _LPAREN _TYPE _ID _ASSIGN literal @13 _SEMICOLON rel_exp $@14 _SEMICOLON _ID _PLUSPLUS _RPAREN $@15 statement

   70 $@16: %empty

   71 function_call: _ID $@16 _LPAREN argument _RPAREN

   72 argument: %empty
   73         | num_exp

   74 @17: %empty

   75 do_while_statement: _DO @17 statement _WHILE _LPAREN rel_exp _RPAREN _SEMICOLON

   76 @18: %empty

   77 $@19: %empty

   78 while_statement: _WHILE @18 _LPAREN rel_exp $@19 _RPAREN statement

   79 conditional_operator: _LPAREN rel_exp _RPAREN _QMARK stmt _COLON stmt

   80 stmt: _ID
   81     | literal

   82 @20: %empty

   83 $@21: %empty

   84 for_statement: _FOR _LPAREN _ID _ASSIGN literal _SEMICOLON @20 rel_exp _SEMICOLON _ID _PLUSPLUS _RPAREN $@21 statement

   85 if_statement: if_part
   86             | if_part _ELSE statement

   87 @22: %empty

   88 $@23: %empty

   89 if_part: _IF _LPAREN @22 rel_exp $@23 _RPAREN statement

   90 $@24: %empty

   91 case_statement: _SWITCH _LPAREN _ID $@24 _RPAREN _LBRACKET cases _RBRACKET

   92 cases: case maybe_default
   93      | cases case maybe_default

   94 $@25: %empty

   95 case: _CASE literal _COLON $@25 statement maybe_break

   96 maybe_default: %empty

   97 $@26: %empty

   98 maybe_default: _DEFAULT _COLON $@26 statement

   99 maybe_break: %empty
  100            | _BREAK _SEMICOLON

  101 $@27: %empty

  102 rel_exp: num_exp $@27 _RELOP num_exp

  103 return_statement: _RETURN num_exp _SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256)
_TYPE <i> (258) 4 8 10 15 69
_IF (259) 89
_ELSE (260) 86
_RETURN (261) 103
_ID <s> (262) 4 8 10 15 33 36 39 42 45 50 53 59 69 71 80 84 91
_INT_NUMBER <s> (263) 64
_UINT_NUMBER <s> (264) 65
_LPAREN (265) 8 42 52 69 71 75 78 79 84 89 91
_RPAREN (266) 8 42 52 69 71 75 78 79 84 89 91
_LBRACKET (267) 12 32 91
_RBRACKET (268) 12 32 91
_ASSIGN (269) 33 59 69 84
_SEMICOLON (270) 4 15 33 45 59 69 75 84 100 103
_AROP <i> (271) 47
_MDROP <i> (272) 48
_RELOP <i> (273) 102
_PLUSPLUS (274) 45 53 69 84
_QMARK (275) 79
_COLON (276) 79 95 98
_FOR (277) 42 59 69 84
_SWITCH (278) 91
_CASE (279) 95
_DEFAULT (280) 98
_BREAK (281) 100
_WHILE (282) 75 78
_DO (283) 75
_TO (284) 39 60
_DOWNTO (285) 61
_STEP (286) 39 63
_NEXT (287) 59
_ITERATE (288) 39
_INRANGE (289) 42
_COMMA (290) 36 42 44
_PETLJAJ (291) 36
_UOPSEGU (292) 36
ONLY_IF (293)


Nonterminals, with rules where they appear

$accept (39)
    on left: 0
program (40)
    on left: 1, on right: 0
global_variables (41)
    on left: 2 3, on right: 1 3
global_vars (42)
    on left: 4, on right: 3
function_list (43)
    on left: 5 6, on right: 1 6
function (44)
    on left: 8, on right: 5 6
$@1 (45)
    on left: 7, on right: 8
parameter (46)
    on left: 9 10, on right: 8
body (47)
    on left: 12, on right: 8
$@2 (48)
    on left: 11, on right: 12
variable_list (49)
    on left: 13 14, on right: 12 14
variable (50)
    on left: 15, on right: 14
statement_list (51)
    on left: 16 17, on right: 12 17 32
statement (52)
    on left: 18 19 20 21 22 23 24 25 26 27 28 29 30 31, on right: 17
    36 39 42 59 69 75 78 84 86 89 95 98
compound_statement (53)
    on left: 32, on right: 18
assignment_statement (54)
    on left: 33, on right: 19
petljaj (55)
    on left: 36, on right: 31
$@3 (56)
    on left: 34, on right: 36
@4 (57)
    on left: 35, on right: 36
iterating_statement (58)
    on left: 39, on right: 28
@5 (59)
    on left: 37, on right: 39
$@6 (60)
    on left: 38, on right: 39
for_in_range (61)
    on left: 42, on right: 30
$@7 (62)
    on left: 40, on right: 42
@8 (63)
    on left: 41, on right: 42
maybe_lit <i> (64)
    on left: 43 44, on right: 42
postincrement_statement (65)
    on left: 45, on right: 22
num_exp <i> (66)
    on left: 46 47 48, on right: 33 47 48 52 73 102 103
exp <i> (67)
    on left: 49 50 51 52 53 54, on right: 46
basic_for (68)
    on left: 59, on right: 27
$@9 (69)
    on left: 55, on right: 59
@10 (70)
    on left: 56, on right: 59
$@11 (71)
    on left: 57, on right: 59
$@12 (72)
    on left: 58, on right: 59
direction <i> (73)
    on left: 60 61, on right: 59
maybe_step <i> (74)
    on left: 62 63, on right: 59
literal <i> (75)
    on left: 64 65, on right: 36 39 42 44 49 59 63 69 81 84 95
for_with_def (76)
    on left: 69, on right: 29
@13 (77)
    on left: 66, on right: 69
$@14 (78)
    on left: 67, on right: 69
$@15 (79)
    on left: 68, on right: 69
function_call <i> (80)
    on left: 71, on right: 51
$@16 (81)
    on left: 70, on right: 71
argument <i> (82)
    on left: 72 73, on right: 71
do_while_statement (83)
    on left: 75, on right: 26
@17 (84)
    on left: 74, on right: 75
while_statement (85)
    on left: 78, on right: 25
@18 (86)
    on left: 76, on right: 78
$@19 (87)
    on left: 77, on right: 78
conditional_operator <i> (88)
    on left: 79, on right: 54
stmt <i> (89)
    on left: 80 81, on right: 79
for_statement (90)
    on left: 84, on right: 23
@20 (91)
    on left: 82, on right: 84
$@21 (92)
    on left: 83, on right: 84
if_statement (93)
    on left: 85 86, on right: 20
if_part <i> (94)
    on left: 89, on right: 85 86
@22 (95)
    on left: 87, on right: 89
$@23 (96)
    on left: 88, on right: 89
case_statement (97)
    on left: 91, on right: 24
$@24 (98)
    on left: 90, on right: 91
cases (99)
    on left: 92 93, on right: 91 93
case (100)
    on left: 95, on right: 92 93
$@25 (101)
    on left: 94, on right: 95
maybe_default (102)
    on left: 96 98, on right: 92 93
$@26 (103)
    on left: 97, on right: 98
maybe_break (104)
    on left: 99 100, on right: 95
rel_exp <i> (105)
    on left: 102, on right: 69 75 78 79 84 89
$@27 (106)
    on left: 101, on right: 102
return_statement (107)
    on left: 103, on right: 21


State 0

    0 $accept: . program $end

    $default  reduce using rule 2 (global_variables)

    program           go to state 1
    global_variables  go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: global_variables . function_list
    3 global_variables: global_variables . global_vars

    _TYPE  shift, and go to state 4

    global_vars    go to state 5
    function_list  go to state 6
    function       go to state 7


State 3

    0 $accept: program $end .

    $default  accept


State 4

    4 global_vars: _TYPE . _ID _SEMICOLON
    8 function: _TYPE . _ID $@1 _LPAREN parameter _RPAREN body

    _ID  shift, and go to state 8


State 5

    3 global_variables: global_variables global_vars .

    $default  reduce using rule 3 (global_variables)


State 6

    1 program: global_variables function_list .
    6 function_list: function_list . function

    _TYPE  shift, and go to state 9

    $default  reduce using rule 1 (program)

    function  go to state 10


State 7

    5 function_list: function .

    $default  reduce using rule 5 (function_list)


State 8

    4 global_vars: _TYPE _ID . _SEMICOLON
    8 function: _TYPE _ID . $@1 _LPAREN parameter _RPAREN body

    _SEMICOLON  shift, and go to state 11

    $default  reduce using rule 7 ($@1)

    $@1  go to state 12


State 9

    8 function: _TYPE . _ID $@1 _LPAREN parameter _RPAREN body

    _ID  shift, and go to state 13


State 10

    6 function_list: function_list function .

    $default  reduce using rule 6 (function_list)


State 11

    4 global_vars: _TYPE _ID _SEMICOLON .

    $default  reduce using rule 4 (global_vars)


State 12

    8 function: _TYPE _ID $@1 . _LPAREN parameter _RPAREN body

    _LPAREN  shift, and go to state 14


State 13

    8 function: _TYPE _ID . $@1 _LPAREN parameter _RPAREN body

    $default  reduce using rule 7 ($@1)

    $@1  go to state 12


State 14

    8 function: _TYPE _ID $@1 _LPAREN . parameter _RPAREN body

    _TYPE  shift, and go to state 15

    $default  reduce using rule 9 (parameter)

    parameter  go to state 16


State 15

   10 parameter: _TYPE . _ID

    _ID  shift, and go to state 17


State 16

    8 function: _TYPE _ID $@1 _LPAREN parameter . _RPAREN body

    _RPAREN  shift, and go to state 18


State 17

   10 parameter: _TYPE _ID .

    $default  reduce using rule 10 (parameter)


State 18

    8 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN . body

    _LBRACKET  shift, and go to state 19

    body  go to state 20


State 19

   12 body: _LBRACKET . variable_list $@2 statement_list _RBRACKET

    $default  reduce using rule 13 (variable_list)

    variable_list  go to state 21


State 20

    8 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN body .

    $default  reduce using rule 8 (function)


State 21

   12 body: _LBRACKET variable_list . $@2 statement_list _RBRACKET
   14 variable_list: variable_list . variable

    _TYPE  shift, and go to state 22

    $default  reduce using rule 11 ($@2)

    $@2       go to state 23
    variable  go to state 24


State 22

   15 variable: _TYPE . _ID _SEMICOLON

    _ID  shift, and go to state 25


State 23

   12 body: _LBRACKET variable_list $@2 . statement_list _RBRACKET

    $default  reduce using rule 16 (statement_list)

    statement_list  go to state 26


State 24

   14 variable_list: variable_list variable .

    $default  reduce using rule 14 (variable_list)


State 25

   15 variable: _TYPE _ID . _SEMICOLON

    _SEMICOLON  shift, and go to state 27


State 26

   12 body: _LBRACKET variable_list $@2 statement_list . _RBRACKET
   17 statement_list: statement_list . statement

    _IF        shift, and go to state 28
    _RETURN    shift, and go to state 29
    _ID        shift, and go to state 30
    _LBRACKET  shift, and go to state 31
    _RBRACKET  shift, and go to state 32
    _FOR       shift, and go to state 33
    _SWITCH    shift, and go to state 34
    _WHILE     shift, and go to state 35
    _DO        shift, and go to state 36
    _ITERATE   shift, and go to state 37
    _PETLJAJ   shift, and go to state 38

    statement                go to state 39
    compound_statement       go to state 40
    assignment_statement     go to state 41
    petljaj                  go to state 42
    iterating_statement      go to state 43
    for_in_range             go to state 44
    postincrement_statement  go to state 45
    basic_for                go to state 46
    for_with_def             go to state 47
    do_while_statement       go to state 48
    while_statement          go to state 49
    for_statement            go to state 50
    if_statement             go to state 51
    if_part                  go to state 52
    case_statement           go to state 53
    return_statement         go to state 54


State 27

   15 variable: _TYPE _ID _SEMICOLON .

    $default  reduce using rule 15 (variable)


State 28

   89 if_part: _IF . _LPAREN @22 rel_exp $@23 _RPAREN statement

    _LPAREN  shift, and go to state 55


State 29

  103 return_statement: _RETURN . num_exp _SEMICOLON

    _ID           shift, and go to state 56
    _INT_NUMBER   shift, and go to state 57
    _UINT_NUMBER  shift, and go to state 58
    _LPAREN       shift, and go to state 59

    num_exp               go to state 60
    exp                   go to state 61
    literal               go to state 62
    function_call         go to state 63
    conditional_operator  go to state 64


State 30

   33 assignment_statement: _ID . _ASSIGN num_exp _SEMICOLON
   45 postincrement_statement: _ID . _PLUSPLUS _SEMICOLON

    _ASSIGN    shift, and go to state 65
    _PLUSPLUS  shift, and go to state 66


State 31

   32 compound_statement: _LBRACKET . statement_list _RBRACKET

    $default  reduce using rule 16 (statement_list)

    statement_list  go to state 67


State 32

   12 body: _LBRACKET variable_list $@2 statement_list _RBRACKET .

    $default  reduce using rule 12 (body)


State 33

   42 for_in_range: _FOR . _ID $@7 _INRANGE _LPAREN literal _COMMA literal @8 maybe_lit _RPAREN statement
   59 basic_for: _FOR . _ID _ASSIGN $@9 literal direction literal @10 maybe_step $@11 statement _NEXT $@12 _SEMICOLON
   69 for_with_def: _FOR . _LPAREN _TYPE _ID _ASSIGN literal @13 _SEMICOLON rel_exp $@14 _SEMICOLON _ID _PLUSPLUS _RPAREN $@15 statement
   84 for_statement: _FOR . _LPAREN _ID _ASSIGN literal _SEMICOLON @20 rel_exp _SEMICOLON _ID _PLUSPLUS _RPAREN $@21 statement

    _ID      shift, and go to state 68
    _LPAREN  shift, and go to state 69


State 34

   91 case_statement: _SWITCH . _LPAREN _ID $@24 _RPAREN _LBRACKET cases _RBRACKET

    _LPAREN  shift, and go to state 70


State 35

   78 while_statement: _WHILE . @18 _LPAREN rel_exp $@19 _RPAREN statement

    $default  reduce using rule 76 (@18)

    @18  go to state 71


State 36

   75 do_while_statement: _DO . @17 statement _WHILE _LPAREN rel_exp _RPAREN _SEMICOLON

    $default  reduce using rule 74 (@17)

    @17  go to state 72


State 37

   39 iterating_statement: _ITERATE . _ID @5 _STEP literal _TO literal $@6 statement

    _ID  shift, and go to state 73


State 38

   36 petljaj: _PETLJAJ . _ID $@3 _UOPSEGU literal _COMMA literal @4 statement

    _ID  shift, and go to state 74


State 39

   17 statement_list: statement_list statement .

    $default  reduce using rule 17 (statement_list)


State 40

   18 statement: compound_statement .

    $default  reduce using rule 18 (statement)


State 41

   19 statement: assignment_statement .

    $default  reduce using rule 19 (statement)


State 42

   31 statement: petljaj .

    $default  reduce using rule 31 (statement)


State 43

   28 statement: iterating_statement .

    $default  reduce using rule 28 (statement)


State 44

   30 statement: for_in_range .

    $default  reduce using rule 30 (statement)


State 45

   22 statement: postincrement_statement .

    $default  reduce using rule 22 (statement)


State 46

   27 statement: basic_for .

    $default  reduce using rule 27 (statement)


State 47

   29 statement: for_with_def .

    $default  reduce using rule 29 (statement)


State 48

   26 statement: do_while_statement .

    $default  reduce using rule 26 (statement)


State 49

   25 statement: while_statement .

    $default  reduce using rule 25 (statement)


State 50

   23 statement: for_statement .

    $default  reduce using rule 23 (statement)


State 51

   20 statement: if_statement .

    $default  reduce using rule 20 (statement)


State 52

   85 if_statement: if_part .
   86             | if_part . _ELSE statement

    _ELSE  shift, and go to state 75

    $default  reduce using rule 85 (if_statement)


State 53

   24 statement: case_statement .

    $default  reduce using rule 24 (statement)


State 54

   21 statement: return_statement .

    $default  reduce using rule 21 (statement)


State 55

   89 if_part: _IF _LPAREN . @22 rel_exp $@23 _RPAREN statement

    $default  reduce using rule 87 (@22)

    @22  go to state 76


State 56

   50 exp: _ID .
   53    | _ID . _PLUSPLUS
   71 function_call: _ID . $@16 _LPAREN argument _RPAREN

    _PLUSPLUS  shift, and go to state 77

    _LPAREN   reduce using rule 70 ($@16)
    $default  reduce using rule 50 (exp)

    $@16  go to state 78


State 57

   64 literal: _INT_NUMBER .

    $default  reduce using rule 64 (literal)


State 58

   65 literal: _UINT_NUMBER .

    $default  reduce using rule 65 (literal)


State 59

   52 exp: _LPAREN . num_exp _RPAREN
   79 conditional_operator: _LPAREN . rel_exp _RPAREN _QMARK stmt _COLON stmt

    _ID           shift, and go to state 56
    _INT_NUMBER   shift, and go to state 57
    _UINT_NUMBER  shift, and go to state 58
    _LPAREN       shift, and go to state 59

    num_exp               go to state 79
    exp                   go to state 61
    literal               go to state 62
    function_call         go to state 63
    conditional_operator  go to state 64
    rel_exp               go to state 80


State 60

   47 num_exp: num_exp . _AROP num_exp
   48        | num_exp . _MDROP num_exp
  103 return_statement: _RETURN num_exp . _SEMICOLON

    _SEMICOLON  shift, and go to state 81
    _AROP       shift, and go to state 82
    _MDROP      shift, and go to state 83


State 61

   46 num_exp: exp .

    $default  reduce using rule 46 (num_exp)


State 62

   49 exp: literal .

    $default  reduce using rule 49 (exp)


State 63

   51 exp: function_call .

    $default  reduce using rule 51 (exp)


State 64

   54 exp: conditional_operator .

    $default  reduce using rule 54 (exp)


State 65

   33 assignment_statement: _ID _ASSIGN . num_exp _SEMICOLON

    _ID           shift, and go to state 56
    _INT_NUMBER   shift, and go to state 57
    _UINT_NUMBER  shift, and go to state 58
    _LPAREN       shift, and go to state 59

    num_exp               go to state 84
    exp                   go to state 61
    literal               go to state 62
    function_call         go to state 63
    conditional_operator  go to state 64


State 66

   45 postincrement_statement: _ID _PLUSPLUS . _SEMICOLON

    _SEMICOLON  shift, and go to state 85


State 67

   17 statement_list: statement_list . statement
   32 compound_statement: _LBRACKET statement_list . _RBRACKET

    _IF        shift, and go to state 28
    _RETURN    shift, and go to state 29
    _ID        shift, and go to state 30
    _LBRACKET  shift, and go to state 31
    _RBRACKET  shift, and go to state 86
    _FOR       shift, and go to state 33
    _SWITCH    shift, and go to state 34
    _WHILE     shift, and go to state 35
    _DO        shift, and go to state 36
    _ITERATE   shift, and go to state 37
    _PETLJAJ   shift, and go to state 38

    statement                go to state 39
    compound_statement       go to state 40
    assignment_statement     go to state 41
    petljaj                  go to state 42
    iterating_statement      go to state 43
    for_in_range             go to state 44
    postincrement_statement  go to state 45
    basic_for                go to state 46
    for_with_def             go to state 47
    do_while_statement       go to state 48
    while_statement          go to state 49
    for_statement            go to state 50
    if_statement             go to state 51
    if_part                  go to state 52
    case_statement           go to state 53
    return_statement         go to state 54


State 68

   42 for_in_range: _FOR _ID . $@7 _INRANGE _LPAREN literal _COMMA literal @8 maybe_lit _RPAREN statement
   59 basic_for: _FOR _ID . _ASSIGN $@9 literal direction literal @10 maybe_step $@11 statement _NEXT $@12 _SEMICOLON

    _ASSIGN  shift, and go to state 87

    $default  reduce using rule 40 ($@7)

    $@7  go to state 88


State 69

   69 for_with_def: _FOR _LPAREN . _TYPE _ID _ASSIGN literal @13 _SEMICOLON rel_exp $@14 _SEMICOLON _ID _PLUSPLUS _RPAREN $@15 statement
   84 for_statement: _FOR _LPAREN . _ID _ASSIGN literal _SEMICOLON @20 rel_exp _SEMICOLON _ID _PLUSPLUS _RPAREN $@21 statement

    _TYPE  shift, and go to state 89
    _ID    shift, and go to state 90


State 70

   91 case_statement: _SWITCH _LPAREN . _ID $@24 _RPAREN _LBRACKET cases _RBRACKET

    _ID  shift, and go to state 91


State 71

   78 while_statement: _WHILE @18 . _LPAREN rel_exp $@19 _RPAREN statement

    _LPAREN  shift, and go to state 92


State 72

   75 do_while_statement: _DO @17 . statement _WHILE _LPAREN rel_exp _RPAREN _SEMICOLON

    _IF        shift, and go to state 28
    _RETURN    shift, and go to state 29
    _ID        shift, and go to state 30
    _LBRACKET  shift, and go to state 31
    _FOR       shift, and go to state 33
    _SWITCH    shift, and go to state 34
    _WHILE     shift, and go to state 35
    _DO        shift, and go to state 36
    _ITERATE   shift, and go to state 37
    _PETLJAJ   shift, and go to state 38

    statement                go to state 93
    compound_statement       go to state 40
    assignment_statement     go to state 41
    petljaj                  go to state 42
    iterating_statement      go to state 43
    for_in_range             go to state 44
    postincrement_statement  go to state 45
    basic_for                go to state 46
    for_with_def             go to state 47
    do_while_statement       go to state 48
    while_statement          go to state 49
    for_statement            go to state 50
    if_statement             go to state 51
    if_part                  go to state 52
    case_statement           go to state 53
    return_statement         go to state 54


State 73

   39 iterating_statement: _ITERATE _ID . @5 _STEP literal _TO literal $@6 statement

    $default  reduce using rule 37 (@5)

    @5  go to state 94


State 74

   36 petljaj: _PETLJAJ _ID . $@3 _UOPSEGU literal _COMMA literal @4 statement

    $default  reduce using rule 34 ($@3)

    $@3  go to state 95


State 75

   86 if_statement: if_part _ELSE . statement

    _IF        shift, and go to state 28
    _RETURN    shift, and go to state 29
    _ID        shift, and go to state 30
    _LBRACKET  shift, and go to state 31
    _FOR       shift, and go to state 33
    _SWITCH    shift, and go to state 34
    _WHILE     shift, and go to state 35
    _DO        shift, and go to state 36
    _ITERATE   shift, and go to state 37
    _PETLJAJ   shift, and go to state 38

    statement                go to state 96
    compound_statement       go to state 40
    assignment_statement     go to state 41
    petljaj                  go to state 42
    iterating_statement      go to state 43
    for_in_range             go to state 44
    postincrement_statement  go to state 45
    basic_for                go to state 46
    for_with_def             go to state 47
    do_while_statement       go to state 48
    while_statement          go to state 49
    for_statement            go to state 50
    if_statement             go to state 51
    if_part                  go to state 52
    case_statement           go to state 53
    return_statement         go to state 54


State 76

   89 if_part: _IF _LPAREN @22 . rel_exp $@23 _RPAREN statement

    _ID           shift, and go to state 56
    _INT_NUMBER   shift, and go to state 57
    _UINT_NUMBER  shift, and go to state 58
    _LPAREN       shift, and go to state 59

    num_exp               go to state 97
    exp                   go to state 61
    literal               go to state 62
    function_call         go to state 63
    conditional_operator  go to state 64
    rel_exp               go to state 98


State 77

   53 exp: _ID _PLUSPLUS .

    $default  reduce using rule 53 (exp)


State 78

   71 function_call: _ID $@16 . _LPAREN argument _RPAREN

    _LPAREN  shift, and go to state 99


State 79

   47 num_exp: num_exp . _AROP num_exp
   48        | num_exp . _MDROP num_exp
   52 exp: _LPAREN num_exp . _RPAREN
  102 rel_exp: num_exp . $@27 _RELOP num_exp

    _RPAREN  shift, and go to state 100
    _AROP    shift, and go to state 82
    _MDROP   shift, and go to state 83

    $default  reduce using rule 101 ($@27)

    $@27  go to state 101


State 80

   79 conditional_operator: _LPAREN rel_exp . _RPAREN _QMARK stmt _COLON stmt

    _RPAREN  shift, and go to state 102


State 81

  103 return_statement: _RETURN num_exp _SEMICOLON .

    $default  reduce using rule 103 (return_statement)


State 82

   47 num_exp: num_exp _AROP . num_exp

    _ID           shift, and go to state 56
    _INT_NUMBER   shift, and go to state 57
    _UINT_NUMBER  shift, and go to state 58
    _LPAREN       shift, and go to state 59

    num_exp               go to state 103
    exp                   go to state 61
    literal               go to state 62
    function_call         go to state 63
    conditional_operator  go to state 64


State 83

   48 num_exp: num_exp _MDROP . num_exp

    _ID           shift, and go to state 56
    _INT_NUMBER   shift, and go to state 57
    _UINT_NUMBER  shift, and go to state 58
    _LPAREN       shift, and go to state 59

    num_exp               go to state 104
    exp                   go to state 61
    literal               go to state 62
    function_call         go to state 63
    conditional_operator  go to state 64


State 84

   33 assignment_statement: _ID _ASSIGN num_exp . _SEMICOLON
   47 num_exp: num_exp . _AROP num_exp
   48        | num_exp . _MDROP num_exp

    _SEMICOLON  shift, and go to state 105
    _AROP       shift, and go to state 82
    _MDROP      shift, and go to state 83


State 85

   45 postincrement_statement: _ID _PLUSPLUS _SEMICOLON .

    $default  reduce using rule 45 (postincrement_statement)


State 86

   32 compound_statement: _LBRACKET statement_list _RBRACKET .

    $default  reduce using rule 32 (compound_statement)


State 87

   59 basic_for: _FOR _ID _ASSIGN . $@9 literal direction literal @10 maybe_step $@11 statement _NEXT $@12 _SEMICOLON

    $default  reduce using rule 55 ($@9)

    $@9  go to state 106


State 88

   42 for_in_range: _FOR _ID $@7 . _INRANGE _LPAREN literal _COMMA literal @8 maybe_lit _RPAREN statement

    _INRANGE  shift, and go to state 107


State 89

   69 for_with_def: _FOR _LPAREN _TYPE . _ID _ASSIGN literal @13 _SEMICOLON rel_exp $@14 _SEMICOLON _ID _PLUSPLUS _RPAREN $@15 statement

    _ID  shift, and go to state 108


State 90

   84 for_statement: _FOR _LPAREN _ID . _ASSIGN literal _SEMICOLON @20 rel_exp _SEMICOLON _ID _PLUSPLUS _RPAREN $@21 statement

    _ASSIGN  shift, and go to state 109


State 91

   91 case_statement: _SWITCH _LPAREN _ID . $@24 _RPAREN _LBRACKET cases _RBRACKET

    $default  reduce using rule 90 ($@24)

    $@24  go to state 110


State 92

   78 while_statement: _WHILE @18 _LPAREN . rel_exp $@19 _RPAREN statement

    _ID           shift, and go to state 56
    _INT_NUMBER   shift, and go to state 57
    _UINT_NUMBER  shift, and go to state 58
    _LPAREN       shift, and go to state 59

    num_exp               go to state 97
    exp                   go to state 61
    literal               go to state 62
    function_call         go to state 63
    conditional_operator  go to state 64
    rel_exp               go to state 111


State 93

   75 do_while_statement: _DO @17 statement . _WHILE _LPAREN rel_exp _RPAREN _SEMICOLON

    _WHILE  shift, and go to state 112


State 94

   39 iterating_statement: _ITERATE _ID @5 . _STEP literal _TO literal $@6 statement

    _STEP  shift, and go to state 113


State 95

   36 petljaj: _PETLJAJ _ID $@3 . _UOPSEGU literal _COMMA literal @4 statement

    _UOPSEGU  shift, and go to state 114


State 96

   86 if_statement: if_part _ELSE statement .

    $default  reduce using rule 86 (if_statement)


State 97

   47 num_exp: num_exp . _AROP num_exp
   48        | num_exp . _MDROP num_exp
  102 rel_exp: num_exp . $@27 _RELOP num_exp

    _AROP   shift, and go to state 82
    _MDROP  shift, and go to state 83

    $default  reduce using rule 101 ($@27)

    $@27  go to state 101


State 98

   89 if_part: _IF _LPAREN @22 rel_exp . $@23 _RPAREN statement

    $default  reduce using rule 88 ($@23)

    $@23  go to state 115


State 99

   71 function_call: _ID $@16 _LPAREN . argument _RPAREN

    _ID           shift, and go to state 56
    _INT_NUMBER   shift, and go to state 57
    _UINT_NUMBER  shift, and go to state 58
    _LPAREN       shift, and go to state 59

    $default  reduce using rule 72 (argument)

    num_exp               go to state 116
    exp                   go to state 61
    literal               go to state 62
    function_call         go to state 63
    argument              go to state 117
    conditional_operator  go to state 64


State 100

   52 exp: _LPAREN num_exp _RPAREN .

    $default  reduce using rule 52 (exp)


State 101

  102 rel_exp: num_exp $@27 . _RELOP num_exp

    _RELOP  shift, and go to state 118


State 102

   79 conditional_operator: _LPAREN rel_exp _RPAREN . _QMARK stmt _COLON stmt

    _QMARK  shift, and go to state 119


State 103

   47 num_exp: num_exp . _AROP num_exp
   47        | num_exp _AROP num_exp .
   48        | num_exp . _MDROP num_exp

    _MDROP  shift, and go to state 83

    $default  reduce using rule 47 (num_exp)


State 104

   47 num_exp: num_exp . _AROP num_exp
   48        | num_exp . _MDROP num_exp
   48        | num_exp _MDROP num_exp .

    $default  reduce using rule 48 (num_exp)


State 105

   33 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON .

    $default  reduce using rule 33 (assignment_statement)


State 106

   59 basic_for: _FOR _ID _ASSIGN $@9 . literal direction literal @10 maybe_step $@11 statement _NEXT $@12 _SEMICOLON

    _INT_NUMBER   shift, and go to state 57
    _UINT_NUMBER  shift, and go to state 58

    literal  go to state 120


State 107

   42 for_in_range: _FOR _ID $@7 _INRANGE . _LPAREN literal _COMMA literal @8 maybe_lit _RPAREN statement

    _LPAREN  shift, and go to state 121


State 108

   69 for_with_def: _FOR _LPAREN _TYPE _ID . _ASSIGN literal @13 _SEMICOLON rel_exp $@14 _SEMICOLON _ID _PLUSPLUS _RPAREN $@15 statement

    _ASSIGN  shift, and go to state 122


State 109

   84 for_statement: _FOR _LPAREN _ID _ASSIGN . literal _SEMICOLON @20 rel_exp _SEMICOLON _ID _PLUSPLUS _RPAREN $@21 statement

    _INT_NUMBER   shift, and go to state 57
    _UINT_NUMBER  shift, and go to state 58

    literal  go to state 123


State 110

   91 case_statement: _SWITCH _LPAREN _ID $@24 . _RPAREN _LBRACKET cases _RBRACKET

    _RPAREN  shift, and go to state 124


State 111

   78 while_statement: _WHILE @18 _LPAREN rel_exp . $@19 _RPAREN statement

    $default  reduce using rule 77 ($@19)

    $@19  go to state 125


State 112

   75 do_while_statement: _DO @17 statement _WHILE . _LPAREN rel_exp _RPAREN _SEMICOLON

    _LPAREN  shift, and go to state 126


State 113

   39 iterating_statement: _ITERATE _ID @5 _STEP . literal _TO literal $@6 statement

    _INT_NUMBER   shift, and go to state 57
    _UINT_NUMBER  shift, and go to state 58

    literal  go to state 127


State 114

   36 petljaj: _PETLJAJ _ID $@3 _UOPSEGU . literal _COMMA literal @4 statement

    _INT_NUMBER   shift, and go to state 57
    _UINT_NUMBER  shift, and go to state 58

    literal  go to state 128


State 115

   89 if_part: _IF _LPAREN @22 rel_exp $@23 . _RPAREN statement

    _RPAREN  shift, and go to state 129


State 116

   47 num_exp: num_exp . _AROP num_exp
   48        | num_exp . _MDROP num_exp
   73 argument: num_exp .

    _AROP   shift, and go to state 82
    _MDROP  shift, and go to state 83

    $default  reduce using rule 73 (argument)


State 117

   71 function_call: _ID $@16 _LPAREN argument . _RPAREN

    _RPAREN  shift, and go to state 130


State 118

  102 rel_exp: num_exp $@27 _RELOP . num_exp

    _ID           shift, and go to state 56
    _INT_NUMBER   shift, and go to state 57
    _UINT_NUMBER  shift, and go to state 58
    _LPAREN       shift, and go to state 59

    num_exp               go to state 131
    exp                   go to state 61
    literal               go to state 62
    function_call         go to state 63
    conditional_operator  go to state 64


State 119

   79 conditional_operator: _LPAREN rel_exp _RPAREN _QMARK . stmt _COLON stmt

    _ID           shift, and go to state 132
    _INT_NUMBER   shift, and go to state 57
    _UINT_NUMBER  shift, and go to state 58

    literal  go to state 133
    stmt     go to state 134


State 120

   59 basic_for: _FOR _ID _ASSIGN $@9 literal . direction literal @10 maybe_step $@11 statement _NEXT $@12 _SEMICOLON

    _TO      shift, and go to state 135
    _DOWNTO  shift, and go to state 136

    direction  go to state 137


State 121

   42 for_in_range: _FOR _ID $@7 _INRANGE _LPAREN . literal _COMMA literal @8 maybe_lit _RPAREN statement

    _INT_NUMBER   shift, and go to state 57
    _UINT_NUMBER  shift, and go to state 58

    literal  go to state 138


State 122

   69 for_with_def: _FOR _LPAREN _TYPE _ID _ASSIGN . literal @13 _SEMICOLON rel_exp $@14 _SEMICOLON _ID _PLUSPLUS _RPAREN $@15 statement

    _INT_NUMBER   shift, and go to state 57
    _UINT_NUMBER  shift, and go to state 58

    literal  go to state 139


State 123

   84 for_statement: _FOR _LPAREN _ID _ASSIGN literal . _SEMICOLON @20 rel_exp _SEMICOLON _ID _PLUSPLUS _RPAREN $@21 statement

    _SEMICOLON  shift, and go to state 140


State 124

   91 case_statement: _SWITCH _LPAREN _ID $@24 _RPAREN . _LBRACKET cases _RBRACKET

    _LBRACKET  shift, and go to state 141


State 125

   78 while_statement: _WHILE @18 _LPAREN rel_exp $@19 . _RPAREN statement

    _RPAREN  shift, and go to state 142


State 126

   75 do_while_statement: _DO @17 statement _WHILE _LPAREN . rel_exp _RPAREN _SEMICOLON

    _ID           shift, and go to state 56
    _INT_NUMBER   shift, and go to state 57
    _UINT_NUMBER  shift, and go to state 58
    _LPAREN       shift, and go to state 59

    num_exp               go to state 97
    exp                   go to state 61
    literal               go to state 62
    function_call         go to state 63
    conditional_operator  go to state 64
    rel_exp               go to state 143


State 127

   39 iterating_statement: _ITERATE _ID @5 _STEP literal . _TO literal $@6 statement

    _TO  shift, and go to state 144


State 128

   36 petljaj: _PETLJAJ _ID $@3 _UOPSEGU literal . _COMMA literal @4 statement

    _COMMA  shift, and go to state 145


State 129

   89 if_part: _IF _LPAREN @22 rel_exp $@23 _RPAREN . statement

    _IF        shift, and go to state 28
    _RETURN    shift, and go to state 29
    _ID        shift, and go to state 30
    _LBRACKET  shift, and go to state 31
    _FOR       shift, and go to state 33
    _SWITCH    shift, and go to state 34
    _WHILE     shift, and go to state 35
    _DO        shift, and go to state 36
    _ITERATE   shift, and go to state 37
    _PETLJAJ   shift, and go to state 38

    statement                go to state 146
    compound_statement       go to state 40
    assignment_statement     go to state 41
    petljaj                  go to state 42
    iterating_statement      go to state 43
    for_in_range             go to state 44
    postincrement_statement  go to state 45
    basic_for                go to state 46
    for_with_def             go to state 47
    do_while_statement       go to state 48
    while_statement          go to state 49
    for_statement            go to state 50
    if_statement             go to state 51
    if_part                  go to state 52
    case_statement           go to state 53
    return_statement         go to state 54


State 130

   71 function_call: _ID $@16 _LPAREN argument _RPAREN .

    $default  reduce using rule 71 (function_call)


State 131

   47 num_exp: num_exp . _AROP num_exp
   48        | num_exp . _MDROP num_exp
  102 rel_exp: num_exp $@27 _RELOP num_exp .

    _AROP   shift, and go to state 82
    _MDROP  shift, and go to state 83

    $default  reduce using rule 102 (rel_exp)


State 132

   80 stmt: _ID .

    $default  reduce using rule 80 (stmt)


State 133

   81 stmt: literal .

    $default  reduce using rule 81 (stmt)


State 134

   79 conditional_operator: _LPAREN rel_exp _RPAREN _QMARK stmt . _COLON stmt

    _COLON  shift, and go to state 147


State 135

   60 direction: _TO .

    $default  reduce using rule 60 (direction)


State 136

   61 direction: _DOWNTO .

    $default  reduce using rule 61 (direction)


State 137

   59 basic_for: _FOR _ID _ASSIGN $@9 literal direction . literal @10 maybe_step $@11 statement _NEXT $@12 _SEMICOLON

    _INT_NUMBER   shift, and go to state 57
    _UINT_NUMBER  shift, and go to state 58

    literal  go to state 148


State 138

   42 for_in_range: _FOR _ID $@7 _INRANGE _LPAREN literal . _COMMA literal @8 maybe_lit _RPAREN statement

    _COMMA  shift, and go to state 149


State 139

   69 for_with_def: _FOR _LPAREN _TYPE _ID _ASSIGN literal . @13 _SEMICOLON rel_exp $@14 _SEMICOLON _ID _PLUSPLUS _RPAREN $@15 statement

    $default  reduce using rule 66 (@13)

    @13  go to state 150


State 140

   84 for_statement: _FOR _LPAREN _ID _ASSIGN literal _SEMICOLON . @20 rel_exp _SEMICOLON _ID _PLUSPLUS _RPAREN $@21 statement

    $default  reduce using rule 82 (@20)

    @20  go to state 151


State 141

   91 case_statement: _SWITCH _LPAREN _ID $@24 _RPAREN _LBRACKET . cases _RBRACKET

    _CASE  shift, and go to state 152

    cases  go to state 153
    case   go to state 154


State 142

   78 while_statement: _WHILE @18 _LPAREN rel_exp $@19 _RPAREN . statement

    _IF        shift, and go to state 28
    _RETURN    shift, and go to state 29
    _ID        shift, and go to state 30
    _LBRACKET  shift, and go to state 31
    _FOR       shift, and go to state 33
    _SWITCH    shift, and go to state 34
    _WHILE     shift, and go to state 35
    _DO        shift, and go to state 36
    _ITERATE   shift, and go to state 37
    _PETLJAJ   shift, and go to state 38

    statement                go to state 155
    compound_statement       go to state 40
    assignment_statement     go to state 41
    petljaj                  go to state 42
    iterating_statement      go to state 43
    for_in_range             go to state 44
    postincrement_statement  go to state 45
    basic_for                go to state 46
    for_with_def             go to state 47
    do_while_statement       go to state 48
    while_statement          go to state 49
    for_statement            go to state 50
    if_statement             go to state 51
    if_part                  go to state 52
    case_statement           go to state 53
    return_statement         go to state 54


State 143

   75 do_while_statement: _DO @17 statement _WHILE _LPAREN rel_exp . _RPAREN _SEMICOLON

    _RPAREN  shift, and go to state 156


State 144

   39 iterating_statement: _ITERATE _ID @5 _STEP literal _TO . literal $@6 statement

    _INT_NUMBER   shift, and go to state 57
    _UINT_NUMBER  shift, and go to state 58

    literal  go to state 157


State 145

   36 petljaj: _PETLJAJ _ID $@3 _UOPSEGU literal _COMMA . literal @4 statement

    _INT_NUMBER   shift, and go to state 57
    _UINT_NUMBER  shift, and go to state 58

    literal  go to state 158


State 146

   89 if_part: _IF _LPAREN @22 rel_exp $@23 _RPAREN statement .

    $default  reduce using rule 89 (if_part)


State 147

   79 conditional_operator: _LPAREN rel_exp _RPAREN _QMARK stmt _COLON . stmt

    _ID           shift, and go to state 132
    _INT_NUMBER   shift, and go to state 57
    _UINT_NUMBER  shift, and go to state 58

    literal  go to state 133
    stmt     go to state 159


State 148

   59 basic_for: _FOR _ID _ASSIGN $@9 literal direction literal . @10 maybe_step $@11 statement _NEXT $@12 _SEMICOLON

    $default  reduce using rule 56 (@10)

    @10  go to state 160


State 149

   42 for_in_range: _FOR _ID $@7 _INRANGE _LPAREN literal _COMMA . literal @8 maybe_lit _RPAREN statement

    _INT_NUMBER   shift, and go to state 57
    _UINT_NUMBER  shift, and go to state 58

    literal  go to state 161


State 150

   69 for_with_def: _FOR _LPAREN _TYPE _ID _ASSIGN literal @13 . _SEMICOLON rel_exp $@14 _SEMICOLON _ID _PLUSPLUS _RPAREN $@15 statement

    _SEMICOLON  shift, and go to state 162


State 151

   84 for_statement: _FOR _LPAREN _ID _ASSIGN literal _SEMICOLON @20 . rel_exp _SEMICOLON _ID _PLUSPLUS _RPAREN $@21 statement

    _ID           shift, and go to state 56
    _INT_NUMBER   shift, and go to state 57
    _UINT_NUMBER  shift, and go to state 58
    _LPAREN       shift, and go to state 59

    num_exp               go to state 97
    exp                   go to state 61
    literal               go to state 62
    function_call         go to state 63
    conditional_operator  go to state 64
    rel_exp               go to state 163


State 152

   95 case: _CASE . literal _COLON $@25 statement maybe_break

    _INT_NUMBER   shift, and go to state 57
    _UINT_NUMBER  shift, and go to state 58

    literal  go to state 164


State 153

   91 case_statement: _SWITCH _LPAREN _ID $@24 _RPAREN _LBRACKET cases . _RBRACKET
   93 cases: cases . case maybe_default

    _RBRACKET  shift, and go to state 165
    _CASE      shift, and go to state 152

    case  go to state 166


State 154

   92 cases: case . maybe_default

    _DEFAULT  shift, and go to state 167

    $default  reduce using rule 96 (maybe_default)

    maybe_default  go to state 168


State 155

   78 while_statement: _WHILE @18 _LPAREN rel_exp $@19 _RPAREN statement .

    $default  reduce using rule 78 (while_statement)


State 156

   75 do_while_statement: _DO @17 statement _WHILE _LPAREN rel_exp _RPAREN . _SEMICOLON

    _SEMICOLON  shift, and go to state 169


State 157

   39 iterating_statement: _ITERATE _ID @5 _STEP literal _TO literal . $@6 statement

    $default  reduce using rule 38 ($@6)

    $@6  go to state 170


State 158

   36 petljaj: _PETLJAJ _ID $@3 _UOPSEGU literal _COMMA literal . @4 statement

    $default  reduce using rule 35 (@4)

    @4  go to state 171


State 159

   79 conditional_operator: _LPAREN rel_exp _RPAREN _QMARK stmt _COLON stmt .

    $default  reduce using rule 79 (conditional_operator)


State 160

   59 basic_for: _FOR _ID _ASSIGN $@9 literal direction literal @10 . maybe_step $@11 statement _NEXT $@12 _SEMICOLON

    _STEP  shift, and go to state 172

    $default  reduce using rule 62 (maybe_step)

    maybe_step  go to state 173


State 161

   42 for_in_range: _FOR _ID $@7 _INRANGE _LPAREN literal _COMMA literal . @8 maybe_lit _RPAREN statement

    $default  reduce using rule 41 (@8)

    @8  go to state 174


State 162

   69 for_with_def: _FOR _LPAREN _TYPE _ID _ASSIGN literal @13 _SEMICOLON . rel_exp $@14 _SEMICOLON _ID _PLUSPLUS _RPAREN $@15 statement

    _ID           shift, and go to state 56
    _INT_NUMBER   shift, and go to state 57
    _UINT_NUMBER  shift, and go to state 58
    _LPAREN       shift, and go to state 59

    num_exp               go to state 97
    exp                   go to state 61
    literal               go to state 62
    function_call         go to state 63
    conditional_operator  go to state 64
    rel_exp               go to state 175


State 163

   84 for_statement: _FOR _LPAREN _ID _ASSIGN literal _SEMICOLON @20 rel_exp . _SEMICOLON _ID _PLUSPLUS _RPAREN $@21 statement

    _SEMICOLON  shift, and go to state 176


State 164

   95 case: _CASE literal . _COLON $@25 statement maybe_break

    _COLON  shift, and go to state 177


State 165

   91 case_statement: _SWITCH _LPAREN _ID $@24 _RPAREN _LBRACKET cases _RBRACKET .

    $default  reduce using rule 91 (case_statement)


State 166

   93 cases: cases case . maybe_default

    _DEFAULT  shift, and go to state 167

    $default  reduce using rule 96 (maybe_default)

    maybe_default  go to state 178


State 167

   98 maybe_default: _DEFAULT . _COLON $@26 statement

    _COLON  shift, and go to state 179


State 168

   92 cases: case maybe_default .

    $default  reduce using rule 92 (cases)


State 169

   75 do_while_statement: _DO @17 statement _WHILE _LPAREN rel_exp _RPAREN _SEMICOLON .

    $default  reduce using rule 75 (do_while_statement)


State 170

   39 iterating_statement: _ITERATE _ID @5 _STEP literal _TO literal $@6 . statement

    _IF        shift, and go to state 28
    _RETURN    shift, and go to state 29
    _ID        shift, and go to state 30
    _LBRACKET  shift, and go to state 31
    _FOR       shift, and go to state 33
    _SWITCH    shift, and go to state 34
    _WHILE     shift, and go to state 35
    _DO        shift, and go to state 36
    _ITERATE   shift, and go to state 37
    _PETLJAJ   shift, and go to state 38

    statement                go to state 180
    compound_statement       go to state 40
    assignment_statement     go to state 41
    petljaj                  go to state 42
    iterating_statement      go to state 43
    for_in_range             go to state 44
    postincrement_statement  go to state 45
    basic_for                go to state 46
    for_with_def             go to state 47
    do_while_statement       go to state 48
    while_statement          go to state 49
    for_statement            go to state 50
    if_statement             go to state 51
    if_part                  go to state 52
    case_statement           go to state 53
    return_statement         go to state 54


State 171

   36 petljaj: _PETLJAJ _ID $@3 _UOPSEGU literal _COMMA literal @4 . statement

    _IF        shift, and go to state 28
    _RETURN    shift, and go to state 29
    _ID        shift, and go to state 30
    _LBRACKET  shift, and go to state 31
    _FOR       shift, and go to state 33
    _SWITCH    shift, and go to state 34
    _WHILE     shift, and go to state 35
    _DO        shift, and go to state 36
    _ITERATE   shift, and go to state 37
    _PETLJAJ   shift, and go to state 38

    statement                go to state 181
    compound_statement       go to state 40
    assignment_statement     go to state 41
    petljaj                  go to state 42
    iterating_statement      go to state 43
    for_in_range             go to state 44
    postincrement_statement  go to state 45
    basic_for                go to state 46
    for_with_def             go to state 47
    do_while_statement       go to state 48
    while_statement          go to state 49
    for_statement            go to state 50
    if_statement             go to state 51
    if_part                  go to state 52
    case_statement           go to state 53
    return_statement         go to state 54


State 172

   63 maybe_step: _STEP . literal

    _INT_NUMBER   shift, and go to state 57
    _UINT_NUMBER  shift, and go to state 58

    literal  go to state 182


State 173

   59 basic_for: _FOR _ID _ASSIGN $@9 literal direction literal @10 maybe_step . $@11 statement _NEXT $@12 _SEMICOLON

    $default  reduce using rule 57 ($@11)

    $@11  go to state 183


State 174

   42 for_in_range: _FOR _ID $@7 _INRANGE _LPAREN literal _COMMA literal @8 . maybe_lit _RPAREN statement

    _COMMA  shift, and go to state 184

    $default  reduce using rule 43 (maybe_lit)

    maybe_lit  go to state 185


State 175

   69 for_with_def: _FOR _LPAREN _TYPE _ID _ASSIGN literal @13 _SEMICOLON rel_exp . $@14 _SEMICOLON _ID _PLUSPLUS _RPAREN $@15 statement

    $default  reduce using rule 67 ($@14)

    $@14  go to state 186


State 176

   84 for_statement: _FOR _LPAREN _ID _ASSIGN literal _SEMICOLON @20 rel_exp _SEMICOLON . _ID _PLUSPLUS _RPAREN $@21 statement

    _ID  shift, and go to state 187


State 177

   95 case: _CASE literal _COLON . $@25 statement maybe_break

    $default  reduce using rule 94 ($@25)

    $@25  go to state 188


State 178

   93 cases: cases case maybe_default .

    $default  reduce using rule 93 (cases)


State 179

   98 maybe_default: _DEFAULT _COLON . $@26 statement

    $default  reduce using rule 97 ($@26)

    $@26  go to state 189


State 180

   39 iterating_statement: _ITERATE _ID @5 _STEP literal _TO literal $@6 statement .

    $default  reduce using rule 39 (iterating_statement)


State 181

   36 petljaj: _PETLJAJ _ID $@3 _UOPSEGU literal _COMMA literal @4 statement .

    $default  reduce using rule 36 (petljaj)


State 182

   63 maybe_step: _STEP literal .

    $default  reduce using rule 63 (maybe_step)


State 183

   59 basic_for: _FOR _ID _ASSIGN $@9 literal direction literal @10 maybe_step $@11 . statement _NEXT $@12 _SEMICOLON

    _IF        shift, and go to state 28
    _RETURN    shift, and go to state 29
    _ID        shift, and go to state 30
    _LBRACKET  shift, and go to state 31
    _FOR       shift, and go to state 33
    _SWITCH    shift, and go to state 34
    _WHILE     shift, and go to state 35
    _DO        shift, and go to state 36
    _ITERATE   shift, and go to state 37
    _PETLJAJ   shift, and go to state 38

    statement                go to state 190
    compound_statement       go to state 40
    assignment_statement     go to state 41
    petljaj                  go to state 42
    iterating_statement      go to state 43
    for_in_range             go to state 44
    postincrement_statement  go to state 45
    basic_for                go to state 46
    for_with_def             go to state 47
    do_while_statement       go to state 48
    while_statement          go to state 49
    for_statement            go to state 50
    if_statement             go to state 51
    if_part                  go to state 52
    case_statement           go to state 53
    return_statement         go to state 54


State 184

   44 maybe_lit: _COMMA . literal

    _INT_NUMBER   shift, and go to state 57
    _UINT_NUMBER  shift, and go to state 58

    literal  go to state 191


State 185

   42 for_in_range: _FOR _ID $@7 _INRANGE _LPAREN literal _COMMA literal @8 maybe_lit . _RPAREN statement

    _RPAREN  shift, and go to state 192


State 186

   69 for_with_def: _FOR _LPAREN _TYPE _ID _ASSIGN literal @13 _SEMICOLON rel_exp $@14 . _SEMICOLON _ID _PLUSPLUS _RPAREN $@15 statement

    _SEMICOLON  shift, and go to state 193


State 187

   84 for_statement: _FOR _LPAREN _ID _ASSIGN literal _SEMICOLON @20 rel_exp _SEMICOLON _ID . _PLUSPLUS _RPAREN $@21 statement

    _PLUSPLUS  shift, and go to state 194


State 188

   95 case: _CASE literal _COLON $@25 . statement maybe_break

    _IF        shift, and go to state 28
    _RETURN    shift, and go to state 29
    _ID        shift, and go to state 30
    _LBRACKET  shift, and go to state 31
    _FOR       shift, and go to state 33
    _SWITCH    shift, and go to state 34
    _WHILE     shift, and go to state 35
    _DO        shift, and go to state 36
    _ITERATE   shift, and go to state 37
    _PETLJAJ   shift, and go to state 38

    statement                go to state 195
    compound_statement       go to state 40
    assignment_statement     go to state 41
    petljaj                  go to state 42
    iterating_statement      go to state 43
    for_in_range             go to state 44
    postincrement_statement  go to state 45
    basic_for                go to state 46
    for_with_def             go to state 47
    do_while_statement       go to state 48
    while_statement          go to state 49
    for_statement            go to state 50
    if_statement             go to state 51
    if_part                  go to state 52
    case_statement           go to state 53
    return_statement         go to state 54


State 189

   98 maybe_default: _DEFAULT _COLON $@26 . statement

    _IF        shift, and go to state 28
    _RETURN    shift, and go to state 29
    _ID        shift, and go to state 30
    _LBRACKET  shift, and go to state 31
    _FOR       shift, and go to state 33
    _SWITCH    shift, and go to state 34
    _WHILE     shift, and go to state 35
    _DO        shift, and go to state 36
    _ITERATE   shift, and go to state 37
    _PETLJAJ   shift, and go to state 38

    statement                go to state 196
    compound_statement       go to state 40
    assignment_statement     go to state 41
    petljaj                  go to state 42
    iterating_statement      go to state 43
    for_in_range             go to state 44
    postincrement_statement  go to state 45
    basic_for                go to state 46
    for_with_def             go to state 47
    do_while_statement       go to state 48
    while_statement          go to state 49
    for_statement            go to state 50
    if_statement             go to state 51
    if_part                  go to state 52
    case_statement           go to state 53
    return_statement         go to state 54


State 190

   59 basic_for: _FOR _ID _ASSIGN $@9 literal direction literal @10 maybe_step $@11 statement . _NEXT $@12 _SEMICOLON

    _NEXT  shift, and go to state 197


State 191

   44 maybe_lit: _COMMA literal .

    $default  reduce using rule 44 (maybe_lit)


State 192

   42 for_in_range: _FOR _ID $@7 _INRANGE _LPAREN literal _COMMA literal @8 maybe_lit _RPAREN . statement

    _IF        shift, and go to state 28
    _RETURN    shift, and go to state 29
    _ID        shift, and go to state 30
    _LBRACKET  shift, and go to state 31
    _FOR       shift, and go to state 33
    _SWITCH    shift, and go to state 34
    _WHILE     shift, and go to state 35
    _DO        shift, and go to state 36
    _ITERATE   shift, and go to state 37
    _PETLJAJ   shift, and go to state 38

    statement                go to state 198
    compound_statement       go to state 40
    assignment_statement     go to state 41
    petljaj                  go to state 42
    iterating_statement      go to state 43
    for_in_range             go to state 44
    postincrement_statement  go to state 45
    basic_for                go to state 46
    for_with_def             go to state 47
    do_while_statement       go to state 48
    while_statement          go to state 49
    for_statement            go to state 50
    if_statement             go to state 51
    if_part                  go to state 52
    case_statement           go to state 53
    return_statement         go to state 54


State 193

   69 for_with_def: _FOR _LPAREN _TYPE _ID _ASSIGN literal @13 _SEMICOLON rel_exp $@14 _SEMICOLON . _ID _PLUSPLUS _RPAREN $@15 statement

    _ID  shift, and go to state 199


State 194

   84 for_statement: _FOR _LPAREN _ID _ASSIGN literal _SEMICOLON @20 rel_exp _SEMICOLON _ID _PLUSPLUS . _RPAREN $@21 statement

    _RPAREN  shift, and go to state 200


State 195

   95 case: _CASE literal _COLON $@25 statement . maybe_break

    _BREAK  shift, and go to state 201

    $default  reduce using rule 99 (maybe_break)

    maybe_break  go to state 202


State 196

   98 maybe_default: _DEFAULT _COLON $@26 statement .

    $default  reduce using rule 98 (maybe_default)


State 197

   59 basic_for: _FOR _ID _ASSIGN $@9 literal direction literal @10 maybe_step $@11 statement _NEXT . $@12 _SEMICOLON

    $default  reduce using rule 58 ($@12)

    $@12  go to state 203


State 198

   42 for_in_range: _FOR _ID $@7 _INRANGE _LPAREN literal _COMMA literal @8 maybe_lit _RPAREN statement .

    $default  reduce using rule 42 (for_in_range)


State 199

   69 for_with_def: _FOR _LPAREN _TYPE _ID _ASSIGN literal @13 _SEMICOLON rel_exp $@14 _SEMICOLON _ID . _PLUSPLUS _RPAREN $@15 statement

    _PLUSPLUS  shift, and go to state 204


State 200

   84 for_statement: _FOR _LPAREN _ID _ASSIGN literal _SEMICOLON @20 rel_exp _SEMICOLON _ID _PLUSPLUS _RPAREN . $@21 statement

    $default  reduce using rule 83 ($@21)

    $@21  go to state 205


State 201

  100 maybe_break: _BREAK . _SEMICOLON

    _SEMICOLON  shift, and go to state 206


State 202

   95 case: _CASE literal _COLON $@25 statement maybe_break .

    $default  reduce using rule 95 (case)


State 203

   59 basic_for: _FOR _ID _ASSIGN $@9 literal direction literal @10 maybe_step $@11 statement _NEXT $@12 . _SEMICOLON

    _SEMICOLON  shift, and go to state 207


State 204

   69 for_with_def: _FOR _LPAREN _TYPE _ID _ASSIGN literal @13 _SEMICOLON rel_exp $@14 _SEMICOLON _ID _PLUSPLUS . _RPAREN $@15 statement

    _RPAREN  shift, and go to state 208


State 205

   84 for_statement: _FOR _LPAREN _ID _ASSIGN literal _SEMICOLON @20 rel_exp _SEMICOLON _ID _PLUSPLUS _RPAREN $@21 . statement

    _IF        shift, and go to state 28
    _RETURN    shift, and go to state 29
    _ID        shift, and go to state 30
    _LBRACKET  shift, and go to state 31
    _FOR       shift, and go to state 33
    _SWITCH    shift, and go to state 34
    _WHILE     shift, and go to state 35
    _DO        shift, and go to state 36
    _ITERATE   shift, and go to state 37
    _PETLJAJ   shift, and go to state 38

    statement                go to state 209
    compound_statement       go to state 40
    assignment_statement     go to state 41
    petljaj                  go to state 42
    iterating_statement      go to state 43
    for_in_range             go to state 44
    postincrement_statement  go to state 45
    basic_for                go to state 46
    for_with_def             go to state 47
    do_while_statement       go to state 48
    while_statement          go to state 49
    for_statement            go to state 50
    if_statement             go to state 51
    if_part                  go to state 52
    case_statement           go to state 53
    return_statement         go to state 54


State 206

  100 maybe_break: _BREAK _SEMICOLON .

    $default  reduce using rule 100 (maybe_break)


State 207

   59 basic_for: _FOR _ID _ASSIGN $@9 literal direction literal @10 maybe_step $@11 statement _NEXT $@12 _SEMICOLON .

    $default  reduce using rule 59 (basic_for)


State 208

   69 for_with_def: _FOR _LPAREN _TYPE _ID _ASSIGN literal @13 _SEMICOLON rel_exp $@14 _SEMICOLON _ID _PLUSPLUS _RPAREN . $@15 statement

    $default  reduce using rule 68 ($@15)

    $@15  go to state 210


State 209

   84 for_statement: _FOR _LPAREN _ID _ASSIGN literal _SEMICOLON @20 rel_exp _SEMICOLON _ID _PLUSPLUS _RPAREN $@21 statement .

    $default  reduce using rule 84 (for_statement)


State 210

   69 for_with_def: _FOR _LPAREN _TYPE _ID _ASSIGN literal @13 _SEMICOLON rel_exp $@14 _SEMICOLON _ID _PLUSPLUS _RPAREN $@15 . statement

    _IF        shift, and go to state 28
    _RETURN    shift, and go to state 29
    _ID        shift, and go to state 30
    _LBRACKET  shift, and go to state 31
    _FOR       shift, and go to state 33
    _SWITCH    shift, and go to state 34
    _WHILE     shift, and go to state 35
    _DO        shift, and go to state 36
    _ITERATE   shift, and go to state 37
    _PETLJAJ   shift, and go to state 38

    statement                go to state 211
    compound_statement       go to state 40
    assignment_statement     go to state 41
    petljaj                  go to state 42
    iterating_statement      go to state 43
    for_in_range             go to state 44
    postincrement_statement  go to state 45
    basic_for                go to state 46
    for_with_def             go to state 47
    do_while_statement       go to state 48
    while_statement          go to state 49
    for_statement            go to state 50
    if_statement             go to state 51
    if_part                  go to state 52
    case_statement           go to state 53
    return_statement         go to state 54


State 211

   69 for_with_def: _FOR _LPAREN _TYPE _ID _ASSIGN literal @13 _SEMICOLON rel_exp $@14 _SEMICOLON _ID _PLUSPLUS _RPAREN $@15 statement .

    $default  reduce using rule 69 (for_with_def)
