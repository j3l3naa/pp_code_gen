Grammar

    0 $accept: program $end

    1 program: global_variables function_list

    2 global_variables: %empty
    3                 | global_variables global_vars

    4 global_vars: _TYPE _ID _SEMICOLON

    5 function_list: function
    6              | function_list function

    7 $@1: %empty

    8 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN body

    9 parameter: %empty
   10          | _TYPE _ID

   11 $@2: %empty

   12 body: _LBRACKET variable_list $@2 statement_list _RBRACKET

   13 variable_list: %empty
   14              | variable_list variable

   15 variable: _TYPE _ID _SEMICOLON

   16 statement_list: %empty
   17               | statement_list statement

   18 statement: compound_statement
   19          | assignment_statement
   20          | if_statement
   21          | return_statement
   22          | postincrement_statement
   23          | for_statement
   24          | case_statement
   25          | while_statement
   26          | do_while_statement
   27          | basic_for
   28          | iterating_statement
   29          | for_with_def

   30 compound_statement: _LBRACKET statement_list _RBRACKET

   31 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON

   32 @3: %empty

   33 $@4: %empty

   34 iterating_statement: _ITERATE _ID @3 _STEP literal _TO literal $@4 statement

   35 postincrement_statement: _ID _PLUSPLUS _SEMICOLON

   36 num_exp: exp
   37        | num_exp _AROP num_exp
   38        | num_exp _MDROP num_exp

   39 exp: literal
   40    | _ID
   41    | function_call
   42    | _LPAREN num_exp _RPAREN
   43    | _ID _PLUSPLUS
   44    | conditional_operator

   45 $@5: %empty

   46 @6: %empty

   47 $@7: %empty

   48 $@8: %empty

   49 basic_for: _FOR _ID _ASSIGN $@5 literal direction literal @6 maybe_step $@7 statement _NEXT $@8 _SEMICOLON

   50 direction: _TO
   51          | _DOWNTO

   52 maybe_step: %empty
   53           | _STEP literal

   54 literal: _INT_NUMBER
   55        | _UINT_NUMBER

   56 @9: %empty

   57 $@10: %empty

   58 $@11: %empty

   59 for_with_def: _FOR _LPAREN _TYPE _ID _ASSIGN literal @9 _SEMICOLON rel_exp $@10 _SEMICOLON _ID _PLUSPLUS _RPAREN $@11 statement

   60 $@12: %empty

   61 function_call: _ID $@12 _LPAREN argument _RPAREN

   62 argument: %empty
   63         | num_exp

   64 @13: %empty

   65 do_while_statement: _DO @13 statement _WHILE _LPAREN rel_exp _RPAREN _SEMICOLON

   66 @14: %empty

   67 $@15: %empty

   68 while_statement: _WHILE @14 _LPAREN rel_exp $@15 _RPAREN statement

   69 conditional_operator: _LPAREN rel_exp _RPAREN _QMARK stmt _COLON stmt

   70 stmt: _ID
   71     | literal

   72 @16: %empty

   73 $@17: %empty

   74 for_statement: _FOR _LPAREN _ID _ASSIGN literal _SEMICOLON @16 rel_exp _SEMICOLON _ID _PLUSPLUS _RPAREN $@17 statement

   75 if_statement: if_part
   76             | if_part _ELSE statement

   77 @18: %empty

   78 $@19: %empty

   79 if_part: _IF _LPAREN @18 rel_exp $@19 _RPAREN statement

   80 $@20: %empty

   81 case_statement: _SWITCH _LPAREN _ID $@20 _RPAREN _LBRACKET cases _RBRACKET

   82 cases: case maybe_default
   83      | cases case maybe_default

   84 $@21: %empty

   85 case: _CASE literal _COLON $@21 statement maybe_break

   86 maybe_default: %empty

   87 $@22: %empty

   88 maybe_default: _DEFAULT _COLON $@22 statement

   89 maybe_break: %empty
   90            | _BREAK _SEMICOLON

   91 $@23: %empty

   92 rel_exp: num_exp $@23 _RELOP num_exp

   93 return_statement: _RETURN num_exp _SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256)
_TYPE <i> (258) 4 8 10 15 59
_IF (259) 79
_ELSE (260) 76
_RETURN (261) 93
_ID <s> (262) 4 8 10 15 31 34 35 40 43 49 59 61 70 74 81
_INT_NUMBER <s> (263) 54
_UINT_NUMBER <s> (264) 55
_LPAREN (265) 8 42 59 61 65 68 69 74 79 81
_RPAREN (266) 8 42 59 61 65 68 69 74 79 81
_LBRACKET (267) 12 30 81
_RBRACKET (268) 12 30 81
_ASSIGN (269) 31 49 59 74
_SEMICOLON (270) 4 15 31 35 49 59 65 74 90 93
_AROP <i> (271) 37
_MDROP <i> (272) 38
_RELOP <i> (273) 92
_PLUSPLUS (274) 35 43 59 74
_QMARK (275) 69
_COLON (276) 69 85 88
_FOR (277) 49 59 74
_SWITCH (278) 81
_CASE (279) 85
_DEFAULT (280) 88
_BREAK (281) 90
_WHILE (282) 65 68
_DO (283) 65
_TO (284) 34 50
_DOWNTO (285) 51
_STEP (286) 34 53
_NEXT (287) 49
_ITERATE (288) 34
ONLY_IF (289)


Nonterminals, with rules where they appear

$accept (35)
    on left: 0
program (36)
    on left: 1, on right: 0
global_variables (37)
    on left: 2 3, on right: 1 3
global_vars (38)
    on left: 4, on right: 3
function_list (39)
    on left: 5 6, on right: 1 6
function (40)
    on left: 8, on right: 5 6
$@1 (41)
    on left: 7, on right: 8
parameter (42)
    on left: 9 10, on right: 8
body (43)
    on left: 12, on right: 8
$@2 (44)
    on left: 11, on right: 12
variable_list (45)
    on left: 13 14, on right: 12 14
variable (46)
    on left: 15, on right: 14
statement_list (47)
    on left: 16 17, on right: 12 17 30
statement (48)
    on left: 18 19 20 21 22 23 24 25 26 27 28 29, on right: 17 34 49
    59 65 68 74 76 79 85 88
compound_statement (49)
    on left: 30, on right: 18
assignment_statement (50)
    on left: 31, on right: 19
iterating_statement (51)
    on left: 34, on right: 28
@3 (52)
    on left: 32, on right: 34
$@4 (53)
    on left: 33, on right: 34
postincrement_statement (54)
    on left: 35, on right: 22
num_exp <i> (55)
    on left: 36 37 38, on right: 31 37 38 42 63 92 93
exp <i> (56)
    on left: 39 40 41 42 43 44, on right: 36
basic_for (57)
    on left: 49, on right: 27
$@5 (58)
    on left: 45, on right: 49
@6 (59)
    on left: 46, on right: 49
$@7 (60)
    on left: 47, on right: 49
$@8 (61)
    on left: 48, on right: 49
direction <i> (62)
    on left: 50 51, on right: 49
maybe_step <i> (63)
    on left: 52 53, on right: 49
literal <i> (64)
    on left: 54 55, on right: 34 39 49 53 59 71 74 85
for_with_def (65)
    on left: 59, on right: 29
@9 (66)
    on left: 56, on right: 59
$@10 (67)
    on left: 57, on right: 59
$@11 (68)
    on left: 58, on right: 59
function_call <i> (69)
    on left: 61, on right: 41
$@12 (70)
    on left: 60, on right: 61
argument <i> (71)
    on left: 62 63, on right: 61
do_while_statement (72)
    on left: 65, on right: 26
@13 (73)
    on left: 64, on right: 65
while_statement (74)
    on left: 68, on right: 25
@14 (75)
    on left: 66, on right: 68
$@15 (76)
    on left: 67, on right: 68
conditional_operator <i> (77)
    on left: 69, on right: 44
stmt <i> (78)
    on left: 70 71, on right: 69
for_statement (79)
    on left: 74, on right: 23
@16 (80)
    on left: 72, on right: 74
$@17 (81)
    on left: 73, on right: 74
if_statement (82)
    on left: 75 76, on right: 20
if_part <i> (83)
    on left: 79, on right: 75 76
@18 (84)
    on left: 77, on right: 79
$@19 (85)
    on left: 78, on right: 79
case_statement (86)
    on left: 81, on right: 24
$@20 (87)
    on left: 80, on right: 81
cases (88)
    on left: 82 83, on right: 81 83
case (89)
    on left: 85, on right: 82 83
$@21 (90)
    on left: 84, on right: 85
maybe_default (91)
    on left: 86 88, on right: 82 83
$@22 (92)
    on left: 87, on right: 88
maybe_break (93)
    on left: 89 90, on right: 85
rel_exp <i> (94)
    on left: 92, on right: 59 65 68 69 74 79
$@23 (95)
    on left: 91, on right: 92
return_statement (96)
    on left: 93, on right: 21


State 0

    0 $accept: . program $end

    $default  reduce using rule 2 (global_variables)

    program           go to state 1
    global_variables  go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: global_variables . function_list
    3 global_variables: global_variables . global_vars

    _TYPE  shift, and go to state 4

    global_vars    go to state 5
    function_list  go to state 6
    function       go to state 7


State 3

    0 $accept: program $end .

    $default  accept


State 4

    4 global_vars: _TYPE . _ID _SEMICOLON
    8 function: _TYPE . _ID $@1 _LPAREN parameter _RPAREN body

    _ID  shift, and go to state 8


State 5

    3 global_variables: global_variables global_vars .

    $default  reduce using rule 3 (global_variables)


State 6

    1 program: global_variables function_list .
    6 function_list: function_list . function

    _TYPE  shift, and go to state 9

    $default  reduce using rule 1 (program)

    function  go to state 10


State 7

    5 function_list: function .

    $default  reduce using rule 5 (function_list)


State 8

    4 global_vars: _TYPE _ID . _SEMICOLON
    8 function: _TYPE _ID . $@1 _LPAREN parameter _RPAREN body

    _SEMICOLON  shift, and go to state 11

    $default  reduce using rule 7 ($@1)

    $@1  go to state 12


State 9

    8 function: _TYPE . _ID $@1 _LPAREN parameter _RPAREN body

    _ID  shift, and go to state 13


State 10

    6 function_list: function_list function .

    $default  reduce using rule 6 (function_list)


State 11

    4 global_vars: _TYPE _ID _SEMICOLON .

    $default  reduce using rule 4 (global_vars)


State 12

    8 function: _TYPE _ID $@1 . _LPAREN parameter _RPAREN body

    _LPAREN  shift, and go to state 14


State 13

    8 function: _TYPE _ID . $@1 _LPAREN parameter _RPAREN body

    $default  reduce using rule 7 ($@1)

    $@1  go to state 12


State 14

    8 function: _TYPE _ID $@1 _LPAREN . parameter _RPAREN body

    _TYPE  shift, and go to state 15

    $default  reduce using rule 9 (parameter)

    parameter  go to state 16


State 15

   10 parameter: _TYPE . _ID

    _ID  shift, and go to state 17


State 16

    8 function: _TYPE _ID $@1 _LPAREN parameter . _RPAREN body

    _RPAREN  shift, and go to state 18


State 17

   10 parameter: _TYPE _ID .

    $default  reduce using rule 10 (parameter)


State 18

    8 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN . body

    _LBRACKET  shift, and go to state 19

    body  go to state 20


State 19

   12 body: _LBRACKET . variable_list $@2 statement_list _RBRACKET

    $default  reduce using rule 13 (variable_list)

    variable_list  go to state 21


State 20

    8 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN body .

    $default  reduce using rule 8 (function)


State 21

   12 body: _LBRACKET variable_list . $@2 statement_list _RBRACKET
   14 variable_list: variable_list . variable

    _TYPE  shift, and go to state 22

    $default  reduce using rule 11 ($@2)

    $@2       go to state 23
    variable  go to state 24


State 22

   15 variable: _TYPE . _ID _SEMICOLON

    _ID  shift, and go to state 25


State 23

   12 body: _LBRACKET variable_list $@2 . statement_list _RBRACKET

    $default  reduce using rule 16 (statement_list)

    statement_list  go to state 26


State 24

   14 variable_list: variable_list variable .

    $default  reduce using rule 14 (variable_list)


State 25

   15 variable: _TYPE _ID . _SEMICOLON

    _SEMICOLON  shift, and go to state 27


State 26

   12 body: _LBRACKET variable_list $@2 statement_list . _RBRACKET
   17 statement_list: statement_list . statement

    _IF        shift, and go to state 28
    _RETURN    shift, and go to state 29
    _ID        shift, and go to state 30
    _LBRACKET  shift, and go to state 31
    _RBRACKET  shift, and go to state 32
    _FOR       shift, and go to state 33
    _SWITCH    shift, and go to state 34
    _WHILE     shift, and go to state 35
    _DO        shift, and go to state 36
    _ITERATE   shift, and go to state 37

    statement                go to state 38
    compound_statement       go to state 39
    assignment_statement     go to state 40
    iterating_statement      go to state 41
    postincrement_statement  go to state 42
    basic_for                go to state 43
    for_with_def             go to state 44
    do_while_statement       go to state 45
    while_statement          go to state 46
    for_statement            go to state 47
    if_statement             go to state 48
    if_part                  go to state 49
    case_statement           go to state 50
    return_statement         go to state 51


State 27

   15 variable: _TYPE _ID _SEMICOLON .

    $default  reduce using rule 15 (variable)


State 28

   79 if_part: _IF . _LPAREN @18 rel_exp $@19 _RPAREN statement

    _LPAREN  shift, and go to state 52


State 29

   93 return_statement: _RETURN . num_exp _SEMICOLON

    _ID           shift, and go to state 53
    _INT_NUMBER   shift, and go to state 54
    _UINT_NUMBER  shift, and go to state 55
    _LPAREN       shift, and go to state 56

    num_exp               go to state 57
    exp                   go to state 58
    literal               go to state 59
    function_call         go to state 60
    conditional_operator  go to state 61


State 30

   31 assignment_statement: _ID . _ASSIGN num_exp _SEMICOLON
   35 postincrement_statement: _ID . _PLUSPLUS _SEMICOLON

    _ASSIGN    shift, and go to state 62
    _PLUSPLUS  shift, and go to state 63


State 31

   30 compound_statement: _LBRACKET . statement_list _RBRACKET

    $default  reduce using rule 16 (statement_list)

    statement_list  go to state 64


State 32

   12 body: _LBRACKET variable_list $@2 statement_list _RBRACKET .

    $default  reduce using rule 12 (body)


State 33

   49 basic_for: _FOR . _ID _ASSIGN $@5 literal direction literal @6 maybe_step $@7 statement _NEXT $@8 _SEMICOLON
   59 for_with_def: _FOR . _LPAREN _TYPE _ID _ASSIGN literal @9 _SEMICOLON rel_exp $@10 _SEMICOLON _ID _PLUSPLUS _RPAREN $@11 statement
   74 for_statement: _FOR . _LPAREN _ID _ASSIGN literal _SEMICOLON @16 rel_exp _SEMICOLON _ID _PLUSPLUS _RPAREN $@17 statement

    _ID      shift, and go to state 65
    _LPAREN  shift, and go to state 66


State 34

   81 case_statement: _SWITCH . _LPAREN _ID $@20 _RPAREN _LBRACKET cases _RBRACKET

    _LPAREN  shift, and go to state 67


State 35

   68 while_statement: _WHILE . @14 _LPAREN rel_exp $@15 _RPAREN statement

    $default  reduce using rule 66 (@14)

    @14  go to state 68


State 36

   65 do_while_statement: _DO . @13 statement _WHILE _LPAREN rel_exp _RPAREN _SEMICOLON

    $default  reduce using rule 64 (@13)

    @13  go to state 69


State 37

   34 iterating_statement: _ITERATE . _ID @3 _STEP literal _TO literal $@4 statement

    _ID  shift, and go to state 70


State 38

   17 statement_list: statement_list statement .

    $default  reduce using rule 17 (statement_list)


State 39

   18 statement: compound_statement .

    $default  reduce using rule 18 (statement)


State 40

   19 statement: assignment_statement .

    $default  reduce using rule 19 (statement)


State 41

   28 statement: iterating_statement .

    $default  reduce using rule 28 (statement)


State 42

   22 statement: postincrement_statement .

    $default  reduce using rule 22 (statement)


State 43

   27 statement: basic_for .

    $default  reduce using rule 27 (statement)


State 44

   29 statement: for_with_def .

    $default  reduce using rule 29 (statement)


State 45

   26 statement: do_while_statement .

    $default  reduce using rule 26 (statement)


State 46

   25 statement: while_statement .

    $default  reduce using rule 25 (statement)


State 47

   23 statement: for_statement .

    $default  reduce using rule 23 (statement)


State 48

   20 statement: if_statement .

    $default  reduce using rule 20 (statement)


State 49

   75 if_statement: if_part .
   76             | if_part . _ELSE statement

    _ELSE  shift, and go to state 71

    $default  reduce using rule 75 (if_statement)


State 50

   24 statement: case_statement .

    $default  reduce using rule 24 (statement)


State 51

   21 statement: return_statement .

    $default  reduce using rule 21 (statement)


State 52

   79 if_part: _IF _LPAREN . @18 rel_exp $@19 _RPAREN statement

    $default  reduce using rule 77 (@18)

    @18  go to state 72


State 53

   40 exp: _ID .
   43    | _ID . _PLUSPLUS
   61 function_call: _ID . $@12 _LPAREN argument _RPAREN

    _PLUSPLUS  shift, and go to state 73

    _LPAREN   reduce using rule 60 ($@12)
    $default  reduce using rule 40 (exp)

    $@12  go to state 74


State 54

   54 literal: _INT_NUMBER .

    $default  reduce using rule 54 (literal)


State 55

   55 literal: _UINT_NUMBER .

    $default  reduce using rule 55 (literal)


State 56

   42 exp: _LPAREN . num_exp _RPAREN
   69 conditional_operator: _LPAREN . rel_exp _RPAREN _QMARK stmt _COLON stmt

    _ID           shift, and go to state 53
    _INT_NUMBER   shift, and go to state 54
    _UINT_NUMBER  shift, and go to state 55
    _LPAREN       shift, and go to state 56

    num_exp               go to state 75
    exp                   go to state 58
    literal               go to state 59
    function_call         go to state 60
    conditional_operator  go to state 61
    rel_exp               go to state 76


State 57

   37 num_exp: num_exp . _AROP num_exp
   38        | num_exp . _MDROP num_exp
   93 return_statement: _RETURN num_exp . _SEMICOLON

    _SEMICOLON  shift, and go to state 77
    _AROP       shift, and go to state 78
    _MDROP      shift, and go to state 79


State 58

   36 num_exp: exp .

    $default  reduce using rule 36 (num_exp)


State 59

   39 exp: literal .

    $default  reduce using rule 39 (exp)


State 60

   41 exp: function_call .

    $default  reduce using rule 41 (exp)


State 61

   44 exp: conditional_operator .

    $default  reduce using rule 44 (exp)


State 62

   31 assignment_statement: _ID _ASSIGN . num_exp _SEMICOLON

    _ID           shift, and go to state 53
    _INT_NUMBER   shift, and go to state 54
    _UINT_NUMBER  shift, and go to state 55
    _LPAREN       shift, and go to state 56

    num_exp               go to state 80
    exp                   go to state 58
    literal               go to state 59
    function_call         go to state 60
    conditional_operator  go to state 61


State 63

   35 postincrement_statement: _ID _PLUSPLUS . _SEMICOLON

    _SEMICOLON  shift, and go to state 81


State 64

   17 statement_list: statement_list . statement
   30 compound_statement: _LBRACKET statement_list . _RBRACKET

    _IF        shift, and go to state 28
    _RETURN    shift, and go to state 29
    _ID        shift, and go to state 30
    _LBRACKET  shift, and go to state 31
    _RBRACKET  shift, and go to state 82
    _FOR       shift, and go to state 33
    _SWITCH    shift, and go to state 34
    _WHILE     shift, and go to state 35
    _DO        shift, and go to state 36
    _ITERATE   shift, and go to state 37

    statement                go to state 38
    compound_statement       go to state 39
    assignment_statement     go to state 40
    iterating_statement      go to state 41
    postincrement_statement  go to state 42
    basic_for                go to state 43
    for_with_def             go to state 44
    do_while_statement       go to state 45
    while_statement          go to state 46
    for_statement            go to state 47
    if_statement             go to state 48
    if_part                  go to state 49
    case_statement           go to state 50
    return_statement         go to state 51


State 65

   49 basic_for: _FOR _ID . _ASSIGN $@5 literal direction literal @6 maybe_step $@7 statement _NEXT $@8 _SEMICOLON

    _ASSIGN  shift, and go to state 83


State 66

   59 for_with_def: _FOR _LPAREN . _TYPE _ID _ASSIGN literal @9 _SEMICOLON rel_exp $@10 _SEMICOLON _ID _PLUSPLUS _RPAREN $@11 statement
   74 for_statement: _FOR _LPAREN . _ID _ASSIGN literal _SEMICOLON @16 rel_exp _SEMICOLON _ID _PLUSPLUS _RPAREN $@17 statement

    _TYPE  shift, and go to state 84
    _ID    shift, and go to state 85


State 67

   81 case_statement: _SWITCH _LPAREN . _ID $@20 _RPAREN _LBRACKET cases _RBRACKET

    _ID  shift, and go to state 86


State 68

   68 while_statement: _WHILE @14 . _LPAREN rel_exp $@15 _RPAREN statement

    _LPAREN  shift, and go to state 87


State 69

   65 do_while_statement: _DO @13 . statement _WHILE _LPAREN rel_exp _RPAREN _SEMICOLON

    _IF        shift, and go to state 28
    _RETURN    shift, and go to state 29
    _ID        shift, and go to state 30
    _LBRACKET  shift, and go to state 31
    _FOR       shift, and go to state 33
    _SWITCH    shift, and go to state 34
    _WHILE     shift, and go to state 35
    _DO        shift, and go to state 36
    _ITERATE   shift, and go to state 37

    statement                go to state 88
    compound_statement       go to state 39
    assignment_statement     go to state 40
    iterating_statement      go to state 41
    postincrement_statement  go to state 42
    basic_for                go to state 43
    for_with_def             go to state 44
    do_while_statement       go to state 45
    while_statement          go to state 46
    for_statement            go to state 47
    if_statement             go to state 48
    if_part                  go to state 49
    case_statement           go to state 50
    return_statement         go to state 51


State 70

   34 iterating_statement: _ITERATE _ID . @3 _STEP literal _TO literal $@4 statement

    $default  reduce using rule 32 (@3)

    @3  go to state 89


State 71

   76 if_statement: if_part _ELSE . statement

    _IF        shift, and go to state 28
    _RETURN    shift, and go to state 29
    _ID        shift, and go to state 30
    _LBRACKET  shift, and go to state 31
    _FOR       shift, and go to state 33
    _SWITCH    shift, and go to state 34
    _WHILE     shift, and go to state 35
    _DO        shift, and go to state 36
    _ITERATE   shift, and go to state 37

    statement                go to state 90
    compound_statement       go to state 39
    assignment_statement     go to state 40
    iterating_statement      go to state 41
    postincrement_statement  go to state 42
    basic_for                go to state 43
    for_with_def             go to state 44
    do_while_statement       go to state 45
    while_statement          go to state 46
    for_statement            go to state 47
    if_statement             go to state 48
    if_part                  go to state 49
    case_statement           go to state 50
    return_statement         go to state 51


State 72

   79 if_part: _IF _LPAREN @18 . rel_exp $@19 _RPAREN statement

    _ID           shift, and go to state 53
    _INT_NUMBER   shift, and go to state 54
    _UINT_NUMBER  shift, and go to state 55
    _LPAREN       shift, and go to state 56

    num_exp               go to state 91
    exp                   go to state 58
    literal               go to state 59
    function_call         go to state 60
    conditional_operator  go to state 61
    rel_exp               go to state 92


State 73

   43 exp: _ID _PLUSPLUS .

    $default  reduce using rule 43 (exp)


State 74

   61 function_call: _ID $@12 . _LPAREN argument _RPAREN

    _LPAREN  shift, and go to state 93


State 75

   37 num_exp: num_exp . _AROP num_exp
   38        | num_exp . _MDROP num_exp
   42 exp: _LPAREN num_exp . _RPAREN
   92 rel_exp: num_exp . $@23 _RELOP num_exp

    _RPAREN  shift, and go to state 94
    _AROP    shift, and go to state 78
    _MDROP   shift, and go to state 79

    $default  reduce using rule 91 ($@23)

    $@23  go to state 95


State 76

   69 conditional_operator: _LPAREN rel_exp . _RPAREN _QMARK stmt _COLON stmt

    _RPAREN  shift, and go to state 96


State 77

   93 return_statement: _RETURN num_exp _SEMICOLON .

    $default  reduce using rule 93 (return_statement)


State 78

   37 num_exp: num_exp _AROP . num_exp

    _ID           shift, and go to state 53
    _INT_NUMBER   shift, and go to state 54
    _UINT_NUMBER  shift, and go to state 55
    _LPAREN       shift, and go to state 56

    num_exp               go to state 97
    exp                   go to state 58
    literal               go to state 59
    function_call         go to state 60
    conditional_operator  go to state 61


State 79

   38 num_exp: num_exp _MDROP . num_exp

    _ID           shift, and go to state 53
    _INT_NUMBER   shift, and go to state 54
    _UINT_NUMBER  shift, and go to state 55
    _LPAREN       shift, and go to state 56

    num_exp               go to state 98
    exp                   go to state 58
    literal               go to state 59
    function_call         go to state 60
    conditional_operator  go to state 61


State 80

   31 assignment_statement: _ID _ASSIGN num_exp . _SEMICOLON
   37 num_exp: num_exp . _AROP num_exp
   38        | num_exp . _MDROP num_exp

    _SEMICOLON  shift, and go to state 99
    _AROP       shift, and go to state 78
    _MDROP      shift, and go to state 79


State 81

   35 postincrement_statement: _ID _PLUSPLUS _SEMICOLON .

    $default  reduce using rule 35 (postincrement_statement)


State 82

   30 compound_statement: _LBRACKET statement_list _RBRACKET .

    $default  reduce using rule 30 (compound_statement)


State 83

   49 basic_for: _FOR _ID _ASSIGN . $@5 literal direction literal @6 maybe_step $@7 statement _NEXT $@8 _SEMICOLON

    $default  reduce using rule 45 ($@5)

    $@5  go to state 100


State 84

   59 for_with_def: _FOR _LPAREN _TYPE . _ID _ASSIGN literal @9 _SEMICOLON rel_exp $@10 _SEMICOLON _ID _PLUSPLUS _RPAREN $@11 statement

    _ID  shift, and go to state 101


State 85

   74 for_statement: _FOR _LPAREN _ID . _ASSIGN literal _SEMICOLON @16 rel_exp _SEMICOLON _ID _PLUSPLUS _RPAREN $@17 statement

    _ASSIGN  shift, and go to state 102


State 86

   81 case_statement: _SWITCH _LPAREN _ID . $@20 _RPAREN _LBRACKET cases _RBRACKET

    $default  reduce using rule 80 ($@20)

    $@20  go to state 103


State 87

   68 while_statement: _WHILE @14 _LPAREN . rel_exp $@15 _RPAREN statement

    _ID           shift, and go to state 53
    _INT_NUMBER   shift, and go to state 54
    _UINT_NUMBER  shift, and go to state 55
    _LPAREN       shift, and go to state 56

    num_exp               go to state 91
    exp                   go to state 58
    literal               go to state 59
    function_call         go to state 60
    conditional_operator  go to state 61
    rel_exp               go to state 104


State 88

   65 do_while_statement: _DO @13 statement . _WHILE _LPAREN rel_exp _RPAREN _SEMICOLON

    _WHILE  shift, and go to state 105


State 89

   34 iterating_statement: _ITERATE _ID @3 . _STEP literal _TO literal $@4 statement

    _STEP  shift, and go to state 106


State 90

   76 if_statement: if_part _ELSE statement .

    $default  reduce using rule 76 (if_statement)


State 91

   37 num_exp: num_exp . _AROP num_exp
   38        | num_exp . _MDROP num_exp
   92 rel_exp: num_exp . $@23 _RELOP num_exp

    _AROP   shift, and go to state 78
    _MDROP  shift, and go to state 79

    $default  reduce using rule 91 ($@23)

    $@23  go to state 95


State 92

   79 if_part: _IF _LPAREN @18 rel_exp . $@19 _RPAREN statement

    $default  reduce using rule 78 ($@19)

    $@19  go to state 107


State 93

   61 function_call: _ID $@12 _LPAREN . argument _RPAREN

    _ID           shift, and go to state 53
    _INT_NUMBER   shift, and go to state 54
    _UINT_NUMBER  shift, and go to state 55
    _LPAREN       shift, and go to state 56

    $default  reduce using rule 62 (argument)

    num_exp               go to state 108
    exp                   go to state 58
    literal               go to state 59
    function_call         go to state 60
    argument              go to state 109
    conditional_operator  go to state 61


State 94

   42 exp: _LPAREN num_exp _RPAREN .

    $default  reduce using rule 42 (exp)


State 95

   92 rel_exp: num_exp $@23 . _RELOP num_exp

    _RELOP  shift, and go to state 110


State 96

   69 conditional_operator: _LPAREN rel_exp _RPAREN . _QMARK stmt _COLON stmt

    _QMARK  shift, and go to state 111


State 97

   37 num_exp: num_exp . _AROP num_exp
   37        | num_exp _AROP num_exp .
   38        | num_exp . _MDROP num_exp

    _MDROP  shift, and go to state 79

    $default  reduce using rule 37 (num_exp)


State 98

   37 num_exp: num_exp . _AROP num_exp
   38        | num_exp . _MDROP num_exp
   38        | num_exp _MDROP num_exp .

    $default  reduce using rule 38 (num_exp)


State 99

   31 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON .

    $default  reduce using rule 31 (assignment_statement)


State 100

   49 basic_for: _FOR _ID _ASSIGN $@5 . literal direction literal @6 maybe_step $@7 statement _NEXT $@8 _SEMICOLON

    _INT_NUMBER   shift, and go to state 54
    _UINT_NUMBER  shift, and go to state 55

    literal  go to state 112


State 101

   59 for_with_def: _FOR _LPAREN _TYPE _ID . _ASSIGN literal @9 _SEMICOLON rel_exp $@10 _SEMICOLON _ID _PLUSPLUS _RPAREN $@11 statement

    _ASSIGN  shift, and go to state 113


State 102

   74 for_statement: _FOR _LPAREN _ID _ASSIGN . literal _SEMICOLON @16 rel_exp _SEMICOLON _ID _PLUSPLUS _RPAREN $@17 statement

    _INT_NUMBER   shift, and go to state 54
    _UINT_NUMBER  shift, and go to state 55

    literal  go to state 114


State 103

   81 case_statement: _SWITCH _LPAREN _ID $@20 . _RPAREN _LBRACKET cases _RBRACKET

    _RPAREN  shift, and go to state 115


State 104

   68 while_statement: _WHILE @14 _LPAREN rel_exp . $@15 _RPAREN statement

    $default  reduce using rule 67 ($@15)

    $@15  go to state 116


State 105

   65 do_while_statement: _DO @13 statement _WHILE . _LPAREN rel_exp _RPAREN _SEMICOLON

    _LPAREN  shift, and go to state 117


State 106

   34 iterating_statement: _ITERATE _ID @3 _STEP . literal _TO literal $@4 statement

    _INT_NUMBER   shift, and go to state 54
    _UINT_NUMBER  shift, and go to state 55

    literal  go to state 118


State 107

   79 if_part: _IF _LPAREN @18 rel_exp $@19 . _RPAREN statement

    _RPAREN  shift, and go to state 119


State 108

   37 num_exp: num_exp . _AROP num_exp
   38        | num_exp . _MDROP num_exp
   63 argument: num_exp .

    _AROP   shift, and go to state 78
    _MDROP  shift, and go to state 79

    $default  reduce using rule 63 (argument)


State 109

   61 function_call: _ID $@12 _LPAREN argument . _RPAREN

    _RPAREN  shift, and go to state 120


State 110

   92 rel_exp: num_exp $@23 _RELOP . num_exp

    _ID           shift, and go to state 53
    _INT_NUMBER   shift, and go to state 54
    _UINT_NUMBER  shift, and go to state 55
    _LPAREN       shift, and go to state 56

    num_exp               go to state 121
    exp                   go to state 58
    literal               go to state 59
    function_call         go to state 60
    conditional_operator  go to state 61


State 111

   69 conditional_operator: _LPAREN rel_exp _RPAREN _QMARK . stmt _COLON stmt

    _ID           shift, and go to state 122
    _INT_NUMBER   shift, and go to state 54
    _UINT_NUMBER  shift, and go to state 55

    literal  go to state 123
    stmt     go to state 124


State 112

   49 basic_for: _FOR _ID _ASSIGN $@5 literal . direction literal @6 maybe_step $@7 statement _NEXT $@8 _SEMICOLON

    _TO      shift, and go to state 125
    _DOWNTO  shift, and go to state 126

    direction  go to state 127


State 113

   59 for_with_def: _FOR _LPAREN _TYPE _ID _ASSIGN . literal @9 _SEMICOLON rel_exp $@10 _SEMICOLON _ID _PLUSPLUS _RPAREN $@11 statement

    _INT_NUMBER   shift, and go to state 54
    _UINT_NUMBER  shift, and go to state 55

    literal  go to state 128


State 114

   74 for_statement: _FOR _LPAREN _ID _ASSIGN literal . _SEMICOLON @16 rel_exp _SEMICOLON _ID _PLUSPLUS _RPAREN $@17 statement

    _SEMICOLON  shift, and go to state 129


State 115

   81 case_statement: _SWITCH _LPAREN _ID $@20 _RPAREN . _LBRACKET cases _RBRACKET

    _LBRACKET  shift, and go to state 130


State 116

   68 while_statement: _WHILE @14 _LPAREN rel_exp $@15 . _RPAREN statement

    _RPAREN  shift, and go to state 131


State 117

   65 do_while_statement: _DO @13 statement _WHILE _LPAREN . rel_exp _RPAREN _SEMICOLON

    _ID           shift, and go to state 53
    _INT_NUMBER   shift, and go to state 54
    _UINT_NUMBER  shift, and go to state 55
    _LPAREN       shift, and go to state 56

    num_exp               go to state 91
    exp                   go to state 58
    literal               go to state 59
    function_call         go to state 60
    conditional_operator  go to state 61
    rel_exp               go to state 132


State 118

   34 iterating_statement: _ITERATE _ID @3 _STEP literal . _TO literal $@4 statement

    _TO  shift, and go to state 133


State 119

   79 if_part: _IF _LPAREN @18 rel_exp $@19 _RPAREN . statement

    _IF        shift, and go to state 28
    _RETURN    shift, and go to state 29
    _ID        shift, and go to state 30
    _LBRACKET  shift, and go to state 31
    _FOR       shift, and go to state 33
    _SWITCH    shift, and go to state 34
    _WHILE     shift, and go to state 35
    _DO        shift, and go to state 36
    _ITERATE   shift, and go to state 37

    statement                go to state 134
    compound_statement       go to state 39
    assignment_statement     go to state 40
    iterating_statement      go to state 41
    postincrement_statement  go to state 42
    basic_for                go to state 43
    for_with_def             go to state 44
    do_while_statement       go to state 45
    while_statement          go to state 46
    for_statement            go to state 47
    if_statement             go to state 48
    if_part                  go to state 49
    case_statement           go to state 50
    return_statement         go to state 51


State 120

   61 function_call: _ID $@12 _LPAREN argument _RPAREN .

    $default  reduce using rule 61 (function_call)


State 121

   37 num_exp: num_exp . _AROP num_exp
   38        | num_exp . _MDROP num_exp
   92 rel_exp: num_exp $@23 _RELOP num_exp .

    _AROP   shift, and go to state 78
    _MDROP  shift, and go to state 79

    $default  reduce using rule 92 (rel_exp)


State 122

   70 stmt: _ID .

    $default  reduce using rule 70 (stmt)


State 123

   71 stmt: literal .

    $default  reduce using rule 71 (stmt)


State 124

   69 conditional_operator: _LPAREN rel_exp _RPAREN _QMARK stmt . _COLON stmt

    _COLON  shift, and go to state 135


State 125

   50 direction: _TO .

    $default  reduce using rule 50 (direction)


State 126

   51 direction: _DOWNTO .

    $default  reduce using rule 51 (direction)


State 127

   49 basic_for: _FOR _ID _ASSIGN $@5 literal direction . literal @6 maybe_step $@7 statement _NEXT $@8 _SEMICOLON

    _INT_NUMBER   shift, and go to state 54
    _UINT_NUMBER  shift, and go to state 55

    literal  go to state 136


State 128

   59 for_with_def: _FOR _LPAREN _TYPE _ID _ASSIGN literal . @9 _SEMICOLON rel_exp $@10 _SEMICOLON _ID _PLUSPLUS _RPAREN $@11 statement

    $default  reduce using rule 56 (@9)

    @9  go to state 137


State 129

   74 for_statement: _FOR _LPAREN _ID _ASSIGN literal _SEMICOLON . @16 rel_exp _SEMICOLON _ID _PLUSPLUS _RPAREN $@17 statement

    $default  reduce using rule 72 (@16)

    @16  go to state 138


State 130

   81 case_statement: _SWITCH _LPAREN _ID $@20 _RPAREN _LBRACKET . cases _RBRACKET

    _CASE  shift, and go to state 139

    cases  go to state 140
    case   go to state 141


State 131

   68 while_statement: _WHILE @14 _LPAREN rel_exp $@15 _RPAREN . statement

    _IF        shift, and go to state 28
    _RETURN    shift, and go to state 29
    _ID        shift, and go to state 30
    _LBRACKET  shift, and go to state 31
    _FOR       shift, and go to state 33
    _SWITCH    shift, and go to state 34
    _WHILE     shift, and go to state 35
    _DO        shift, and go to state 36
    _ITERATE   shift, and go to state 37

    statement                go to state 142
    compound_statement       go to state 39
    assignment_statement     go to state 40
    iterating_statement      go to state 41
    postincrement_statement  go to state 42
    basic_for                go to state 43
    for_with_def             go to state 44
    do_while_statement       go to state 45
    while_statement          go to state 46
    for_statement            go to state 47
    if_statement             go to state 48
    if_part                  go to state 49
    case_statement           go to state 50
    return_statement         go to state 51


State 132

   65 do_while_statement: _DO @13 statement _WHILE _LPAREN rel_exp . _RPAREN _SEMICOLON

    _RPAREN  shift, and go to state 143


State 133

   34 iterating_statement: _ITERATE _ID @3 _STEP literal _TO . literal $@4 statement

    _INT_NUMBER   shift, and go to state 54
    _UINT_NUMBER  shift, and go to state 55

    literal  go to state 144


State 134

   79 if_part: _IF _LPAREN @18 rel_exp $@19 _RPAREN statement .

    $default  reduce using rule 79 (if_part)


State 135

   69 conditional_operator: _LPAREN rel_exp _RPAREN _QMARK stmt _COLON . stmt

    _ID           shift, and go to state 122
    _INT_NUMBER   shift, and go to state 54
    _UINT_NUMBER  shift, and go to state 55

    literal  go to state 123
    stmt     go to state 145


State 136

   49 basic_for: _FOR _ID _ASSIGN $@5 literal direction literal . @6 maybe_step $@7 statement _NEXT $@8 _SEMICOLON

    $default  reduce using rule 46 (@6)

    @6  go to state 146


State 137

   59 for_with_def: _FOR _LPAREN _TYPE _ID _ASSIGN literal @9 . _SEMICOLON rel_exp $@10 _SEMICOLON _ID _PLUSPLUS _RPAREN $@11 statement

    _SEMICOLON  shift, and go to state 147


State 138

   74 for_statement: _FOR _LPAREN _ID _ASSIGN literal _SEMICOLON @16 . rel_exp _SEMICOLON _ID _PLUSPLUS _RPAREN $@17 statement

    _ID           shift, and go to state 53
    _INT_NUMBER   shift, and go to state 54
    _UINT_NUMBER  shift, and go to state 55
    _LPAREN       shift, and go to state 56

    num_exp               go to state 91
    exp                   go to state 58
    literal               go to state 59
    function_call         go to state 60
    conditional_operator  go to state 61
    rel_exp               go to state 148


State 139

   85 case: _CASE . literal _COLON $@21 statement maybe_break

    _INT_NUMBER   shift, and go to state 54
    _UINT_NUMBER  shift, and go to state 55

    literal  go to state 149


State 140

   81 case_statement: _SWITCH _LPAREN _ID $@20 _RPAREN _LBRACKET cases . _RBRACKET
   83 cases: cases . case maybe_default

    _RBRACKET  shift, and go to state 150
    _CASE      shift, and go to state 139

    case  go to state 151


State 141

   82 cases: case . maybe_default

    _DEFAULT  shift, and go to state 152

    $default  reduce using rule 86 (maybe_default)

    maybe_default  go to state 153


State 142

   68 while_statement: _WHILE @14 _LPAREN rel_exp $@15 _RPAREN statement .

    $default  reduce using rule 68 (while_statement)


State 143

   65 do_while_statement: _DO @13 statement _WHILE _LPAREN rel_exp _RPAREN . _SEMICOLON

    _SEMICOLON  shift, and go to state 154


State 144

   34 iterating_statement: _ITERATE _ID @3 _STEP literal _TO literal . $@4 statement

    $default  reduce using rule 33 ($@4)

    $@4  go to state 155


State 145

   69 conditional_operator: _LPAREN rel_exp _RPAREN _QMARK stmt _COLON stmt .

    $default  reduce using rule 69 (conditional_operator)


State 146

   49 basic_for: _FOR _ID _ASSIGN $@5 literal direction literal @6 . maybe_step $@7 statement _NEXT $@8 _SEMICOLON

    _STEP  shift, and go to state 156

    $default  reduce using rule 52 (maybe_step)

    maybe_step  go to state 157


State 147

   59 for_with_def: _FOR _LPAREN _TYPE _ID _ASSIGN literal @9 _SEMICOLON . rel_exp $@10 _SEMICOLON _ID _PLUSPLUS _RPAREN $@11 statement

    _ID           shift, and go to state 53
    _INT_NUMBER   shift, and go to state 54
    _UINT_NUMBER  shift, and go to state 55
    _LPAREN       shift, and go to state 56

    num_exp               go to state 91
    exp                   go to state 58
    literal               go to state 59
    function_call         go to state 60
    conditional_operator  go to state 61
    rel_exp               go to state 158


State 148

   74 for_statement: _FOR _LPAREN _ID _ASSIGN literal _SEMICOLON @16 rel_exp . _SEMICOLON _ID _PLUSPLUS _RPAREN $@17 statement

    _SEMICOLON  shift, and go to state 159


State 149

   85 case: _CASE literal . _COLON $@21 statement maybe_break

    _COLON  shift, and go to state 160


State 150

   81 case_statement: _SWITCH _LPAREN _ID $@20 _RPAREN _LBRACKET cases _RBRACKET .

    $default  reduce using rule 81 (case_statement)


State 151

   83 cases: cases case . maybe_default

    _DEFAULT  shift, and go to state 152

    $default  reduce using rule 86 (maybe_default)

    maybe_default  go to state 161


State 152

   88 maybe_default: _DEFAULT . _COLON $@22 statement

    _COLON  shift, and go to state 162


State 153

   82 cases: case maybe_default .

    $default  reduce using rule 82 (cases)


State 154

   65 do_while_statement: _DO @13 statement _WHILE _LPAREN rel_exp _RPAREN _SEMICOLON .

    $default  reduce using rule 65 (do_while_statement)


State 155

   34 iterating_statement: _ITERATE _ID @3 _STEP literal _TO literal $@4 . statement

    _IF        shift, and go to state 28
    _RETURN    shift, and go to state 29
    _ID        shift, and go to state 30
    _LBRACKET  shift, and go to state 31
    _FOR       shift, and go to state 33
    _SWITCH    shift, and go to state 34
    _WHILE     shift, and go to state 35
    _DO        shift, and go to state 36
    _ITERATE   shift, and go to state 37

    statement                go to state 163
    compound_statement       go to state 39
    assignment_statement     go to state 40
    iterating_statement      go to state 41
    postincrement_statement  go to state 42
    basic_for                go to state 43
    for_with_def             go to state 44
    do_while_statement       go to state 45
    while_statement          go to state 46
    for_statement            go to state 47
    if_statement             go to state 48
    if_part                  go to state 49
    case_statement           go to state 50
    return_statement         go to state 51


State 156

   53 maybe_step: _STEP . literal

    _INT_NUMBER   shift, and go to state 54
    _UINT_NUMBER  shift, and go to state 55

    literal  go to state 164


State 157

   49 basic_for: _FOR _ID _ASSIGN $@5 literal direction literal @6 maybe_step . $@7 statement _NEXT $@8 _SEMICOLON

    $default  reduce using rule 47 ($@7)

    $@7  go to state 165


State 158

   59 for_with_def: _FOR _LPAREN _TYPE _ID _ASSIGN literal @9 _SEMICOLON rel_exp . $@10 _SEMICOLON _ID _PLUSPLUS _RPAREN $@11 statement

    $default  reduce using rule 57 ($@10)

    $@10  go to state 166


State 159

   74 for_statement: _FOR _LPAREN _ID _ASSIGN literal _SEMICOLON @16 rel_exp _SEMICOLON . _ID _PLUSPLUS _RPAREN $@17 statement

    _ID  shift, and go to state 167


State 160

   85 case: _CASE literal _COLON . $@21 statement maybe_break

    $default  reduce using rule 84 ($@21)

    $@21  go to state 168


State 161

   83 cases: cases case maybe_default .

    $default  reduce using rule 83 (cases)


State 162

   88 maybe_default: _DEFAULT _COLON . $@22 statement

    $default  reduce using rule 87 ($@22)

    $@22  go to state 169


State 163

   34 iterating_statement: _ITERATE _ID @3 _STEP literal _TO literal $@4 statement .

    $default  reduce using rule 34 (iterating_statement)


State 164

   53 maybe_step: _STEP literal .

    $default  reduce using rule 53 (maybe_step)


State 165

   49 basic_for: _FOR _ID _ASSIGN $@5 literal direction literal @6 maybe_step $@7 . statement _NEXT $@8 _SEMICOLON

    _IF        shift, and go to state 28
    _RETURN    shift, and go to state 29
    _ID        shift, and go to state 30
    _LBRACKET  shift, and go to state 31
    _FOR       shift, and go to state 33
    _SWITCH    shift, and go to state 34
    _WHILE     shift, and go to state 35
    _DO        shift, and go to state 36
    _ITERATE   shift, and go to state 37

    statement                go to state 170
    compound_statement       go to state 39
    assignment_statement     go to state 40
    iterating_statement      go to state 41
    postincrement_statement  go to state 42
    basic_for                go to state 43
    for_with_def             go to state 44
    do_while_statement       go to state 45
    while_statement          go to state 46
    for_statement            go to state 47
    if_statement             go to state 48
    if_part                  go to state 49
    case_statement           go to state 50
    return_statement         go to state 51


State 166

   59 for_with_def: _FOR _LPAREN _TYPE _ID _ASSIGN literal @9 _SEMICOLON rel_exp $@10 . _SEMICOLON _ID _PLUSPLUS _RPAREN $@11 statement

    _SEMICOLON  shift, and go to state 171


State 167

   74 for_statement: _FOR _LPAREN _ID _ASSIGN literal _SEMICOLON @16 rel_exp _SEMICOLON _ID . _PLUSPLUS _RPAREN $@17 statement

    _PLUSPLUS  shift, and go to state 172


State 168

   85 case: _CASE literal _COLON $@21 . statement maybe_break

    _IF        shift, and go to state 28
    _RETURN    shift, and go to state 29
    _ID        shift, and go to state 30
    _LBRACKET  shift, and go to state 31
    _FOR       shift, and go to state 33
    _SWITCH    shift, and go to state 34
    _WHILE     shift, and go to state 35
    _DO        shift, and go to state 36
    _ITERATE   shift, and go to state 37

    statement                go to state 173
    compound_statement       go to state 39
    assignment_statement     go to state 40
    iterating_statement      go to state 41
    postincrement_statement  go to state 42
    basic_for                go to state 43
    for_with_def             go to state 44
    do_while_statement       go to state 45
    while_statement          go to state 46
    for_statement            go to state 47
    if_statement             go to state 48
    if_part                  go to state 49
    case_statement           go to state 50
    return_statement         go to state 51


State 169

   88 maybe_default: _DEFAULT _COLON $@22 . statement

    _IF        shift, and go to state 28
    _RETURN    shift, and go to state 29
    _ID        shift, and go to state 30
    _LBRACKET  shift, and go to state 31
    _FOR       shift, and go to state 33
    _SWITCH    shift, and go to state 34
    _WHILE     shift, and go to state 35
    _DO        shift, and go to state 36
    _ITERATE   shift, and go to state 37

    statement                go to state 174
    compound_statement       go to state 39
    assignment_statement     go to state 40
    iterating_statement      go to state 41
    postincrement_statement  go to state 42
    basic_for                go to state 43
    for_with_def             go to state 44
    do_while_statement       go to state 45
    while_statement          go to state 46
    for_statement            go to state 47
    if_statement             go to state 48
    if_part                  go to state 49
    case_statement           go to state 50
    return_statement         go to state 51


State 170

   49 basic_for: _FOR _ID _ASSIGN $@5 literal direction literal @6 maybe_step $@7 statement . _NEXT $@8 _SEMICOLON

    _NEXT  shift, and go to state 175


State 171

   59 for_with_def: _FOR _LPAREN _TYPE _ID _ASSIGN literal @9 _SEMICOLON rel_exp $@10 _SEMICOLON . _ID _PLUSPLUS _RPAREN $@11 statement

    _ID  shift, and go to state 176


State 172

   74 for_statement: _FOR _LPAREN _ID _ASSIGN literal _SEMICOLON @16 rel_exp _SEMICOLON _ID _PLUSPLUS . _RPAREN $@17 statement

    _RPAREN  shift, and go to state 177


State 173

   85 case: _CASE literal _COLON $@21 statement . maybe_break

    _BREAK  shift, and go to state 178

    $default  reduce using rule 89 (maybe_break)

    maybe_break  go to state 179


State 174

   88 maybe_default: _DEFAULT _COLON $@22 statement .

    $default  reduce using rule 88 (maybe_default)


State 175

   49 basic_for: _FOR _ID _ASSIGN $@5 literal direction literal @6 maybe_step $@7 statement _NEXT . $@8 _SEMICOLON

    $default  reduce using rule 48 ($@8)

    $@8  go to state 180


State 176

   59 for_with_def: _FOR _LPAREN _TYPE _ID _ASSIGN literal @9 _SEMICOLON rel_exp $@10 _SEMICOLON _ID . _PLUSPLUS _RPAREN $@11 statement

    _PLUSPLUS  shift, and go to state 181


State 177

   74 for_statement: _FOR _LPAREN _ID _ASSIGN literal _SEMICOLON @16 rel_exp _SEMICOLON _ID _PLUSPLUS _RPAREN . $@17 statement

    $default  reduce using rule 73 ($@17)

    $@17  go to state 182


State 178

   90 maybe_break: _BREAK . _SEMICOLON

    _SEMICOLON  shift, and go to state 183


State 179

   85 case: _CASE literal _COLON $@21 statement maybe_break .

    $default  reduce using rule 85 (case)


State 180

   49 basic_for: _FOR _ID _ASSIGN $@5 literal direction literal @6 maybe_step $@7 statement _NEXT $@8 . _SEMICOLON

    _SEMICOLON  shift, and go to state 184


State 181

   59 for_with_def: _FOR _LPAREN _TYPE _ID _ASSIGN literal @9 _SEMICOLON rel_exp $@10 _SEMICOLON _ID _PLUSPLUS . _RPAREN $@11 statement

    _RPAREN  shift, and go to state 185


State 182

   74 for_statement: _FOR _LPAREN _ID _ASSIGN literal _SEMICOLON @16 rel_exp _SEMICOLON _ID _PLUSPLUS _RPAREN $@17 . statement

    _IF        shift, and go to state 28
    _RETURN    shift, and go to state 29
    _ID        shift, and go to state 30
    _LBRACKET  shift, and go to state 31
    _FOR       shift, and go to state 33
    _SWITCH    shift, and go to state 34
    _WHILE     shift, and go to state 35
    _DO        shift, and go to state 36
    _ITERATE   shift, and go to state 37

    statement                go to state 186
    compound_statement       go to state 39
    assignment_statement     go to state 40
    iterating_statement      go to state 41
    postincrement_statement  go to state 42
    basic_for                go to state 43
    for_with_def             go to state 44
    do_while_statement       go to state 45
    while_statement          go to state 46
    for_statement            go to state 47
    if_statement             go to state 48
    if_part                  go to state 49
    case_statement           go to state 50
    return_statement         go to state 51


State 183

   90 maybe_break: _BREAK _SEMICOLON .

    $default  reduce using rule 90 (maybe_break)


State 184

   49 basic_for: _FOR _ID _ASSIGN $@5 literal direction literal @6 maybe_step $@7 statement _NEXT $@8 _SEMICOLON .

    $default  reduce using rule 49 (basic_for)


State 185

   59 for_with_def: _FOR _LPAREN _TYPE _ID _ASSIGN literal @9 _SEMICOLON rel_exp $@10 _SEMICOLON _ID _PLUSPLUS _RPAREN . $@11 statement

    $default  reduce using rule 58 ($@11)

    $@11  go to state 187


State 186

   74 for_statement: _FOR _LPAREN _ID _ASSIGN literal _SEMICOLON @16 rel_exp _SEMICOLON _ID _PLUSPLUS _RPAREN $@17 statement .

    $default  reduce using rule 74 (for_statement)


State 187

   59 for_with_def: _FOR _LPAREN _TYPE _ID _ASSIGN literal @9 _SEMICOLON rel_exp $@10 _SEMICOLON _ID _PLUSPLUS _RPAREN $@11 . statement

    _IF        shift, and go to state 28
    _RETURN    shift, and go to state 29
    _ID        shift, and go to state 30
    _LBRACKET  shift, and go to state 31
    _FOR       shift, and go to state 33
    _SWITCH    shift, and go to state 34
    _WHILE     shift, and go to state 35
    _DO        shift, and go to state 36
    _ITERATE   shift, and go to state 37

    statement                go to state 188
    compound_statement       go to state 39
    assignment_statement     go to state 40
    iterating_statement      go to state 41
    postincrement_statement  go to state 42
    basic_for                go to state 43
    for_with_def             go to state 44
    do_while_statement       go to state 45
    while_statement          go to state 46
    for_statement            go to state 47
    if_statement             go to state 48
    if_part                  go to state 49
    case_statement           go to state 50
    return_statement         go to state 51


State 188

   59 for_with_def: _FOR _LPAREN _TYPE _ID _ASSIGN literal @9 _SEMICOLON rel_exp $@10 _SEMICOLON _ID _PLUSPLUS _RPAREN $@11 statement .

    $default  reduce using rule 59 (for_with_def)
